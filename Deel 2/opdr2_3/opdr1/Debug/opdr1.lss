
opdr1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000056  00800200  00002d60  00002df4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002d60  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000022b  00800256  00800256  00002e4a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002e4a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002ea8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000005c0  00000000  00000000  00002ee8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000694d  00000000  00000000  000034a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000132e  00000000  00000000  00009df5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000446a  00000000  00000000  0000b123  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000014b4  00000000  00000000  0000f590  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001bb8  00000000  00000000  00010a44  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000072a2  00000000  00000000  000125fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000830  00000000  00000000  0001989e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	6c c1       	rjmp	.+728    	; 0x2da <__ctors_end>
       2:	00 00       	nop
       4:	8b c1       	rjmp	.+790    	; 0x31c <__bad_interrupt>
       6:	00 00       	nop
       8:	0c 94 72 0f 	jmp	0x1ee4	; 0x1ee4 <__vector_2>
       c:	87 c1       	rjmp	.+782    	; 0x31c <__bad_interrupt>
       e:	00 00       	nop
      10:	85 c1       	rjmp	.+778    	; 0x31c <__bad_interrupt>
      12:	00 00       	nop
      14:	83 c1       	rjmp	.+774    	; 0x31c <__bad_interrupt>
      16:	00 00       	nop
      18:	81 c1       	rjmp	.+770    	; 0x31c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	7f c1       	rjmp	.+766    	; 0x31c <__bad_interrupt>
      1e:	00 00       	nop
      20:	7d c1       	rjmp	.+762    	; 0x31c <__bad_interrupt>
      22:	00 00       	nop
      24:	7b c1       	rjmp	.+758    	; 0x31c <__bad_interrupt>
      26:	00 00       	nop
      28:	79 c1       	rjmp	.+754    	; 0x31c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	77 c1       	rjmp	.+750    	; 0x31c <__bad_interrupt>
      2e:	00 00       	nop
      30:	75 c1       	rjmp	.+746    	; 0x31c <__bad_interrupt>
      32:	00 00       	nop
      34:	73 c1       	rjmp	.+742    	; 0x31c <__bad_interrupt>
      36:	00 00       	nop
      38:	71 c1       	rjmp	.+738    	; 0x31c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	6f c1       	rjmp	.+734    	; 0x31c <__bad_interrupt>
      3e:	00 00       	nop
      40:	6d c1       	rjmp	.+730    	; 0x31c <__bad_interrupt>
      42:	00 00       	nop
      44:	0c 94 c3 10 	jmp	0x2186	; 0x2186 <__vector_17>
      48:	69 c1       	rjmp	.+722    	; 0x31c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	67 c1       	rjmp	.+718    	; 0x31c <__bad_interrupt>
      4e:	00 00       	nop
      50:	65 c1       	rjmp	.+714    	; 0x31c <__bad_interrupt>
      52:	00 00       	nop
      54:	db c4       	rjmp	.+2486   	; 0xa0c <__vector_21>
      56:	00 00       	nop
      58:	61 c1       	rjmp	.+706    	; 0x31c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	5f c1       	rjmp	.+702    	; 0x31c <__bad_interrupt>
      5e:	00 00       	nop
      60:	5d c1       	rjmp	.+698    	; 0x31c <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 3a 0f 	jmp	0x1e74	; 0x1e74 <__vector_25>
      68:	49 c7       	rjmp	.+3730   	; 0xefc <__vector_26>
      6a:	00 00       	nop
      6c:	57 c1       	rjmp	.+686    	; 0x31c <__bad_interrupt>
      6e:	00 00       	nop
      70:	55 c1       	rjmp	.+682    	; 0x31c <__bad_interrupt>
      72:	00 00       	nop
      74:	53 c1       	rjmp	.+678    	; 0x31c <__bad_interrupt>
      76:	00 00       	nop
      78:	51 c1       	rjmp	.+674    	; 0x31c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	4f c1       	rjmp	.+670    	; 0x31c <__bad_interrupt>
      7e:	00 00       	nop
      80:	4d c1       	rjmp	.+666    	; 0x31c <__bad_interrupt>
      82:	00 00       	nop
      84:	4b c1       	rjmp	.+662    	; 0x31c <__bad_interrupt>
      86:	00 00       	nop
      88:	49 c1       	rjmp	.+658    	; 0x31c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	0c 94 0c 10 	jmp	0x2018	; 0x2018 <__vector_35>
      90:	7e c7       	rjmp	.+3836   	; 0xf8e <__vector_36>
      92:	00 00       	nop
      94:	db c7       	rjmp	.+4022   	; 0x104c <__vector_37>
      96:	00 00       	nop
      98:	41 c1       	rjmp	.+642    	; 0x31c <__bad_interrupt>
      9a:	00 00       	nop
      9c:	ad c1       	rjmp	.+858    	; 0x3f8 <__vector_39>
      9e:	00 00       	nop
      a0:	3d c1       	rjmp	.+634    	; 0x31c <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3b c1       	rjmp	.+630    	; 0x31c <__bad_interrupt>
      a6:	00 00       	nop
      a8:	39 c1       	rjmp	.+626    	; 0x31c <__bad_interrupt>
      aa:	00 00       	nop
      ac:	37 c1       	rjmp	.+622    	; 0x31c <__bad_interrupt>
      ae:	00 00       	nop
      b0:	35 c1       	rjmp	.+618    	; 0x31c <__bad_interrupt>
      b2:	00 00       	nop
      b4:	33 c1       	rjmp	.+614    	; 0x31c <__bad_interrupt>
      b6:	00 00       	nop
      b8:	31 c1       	rjmp	.+610    	; 0x31c <__bad_interrupt>
      ba:	00 00       	nop
      bc:	2f c1       	rjmp	.+606    	; 0x31c <__bad_interrupt>
      be:	00 00       	nop
      c0:	2d c1       	rjmp	.+602    	; 0x31c <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2b c1       	rjmp	.+598    	; 0x31c <__bad_interrupt>
      c6:	00 00       	nop
      c8:	29 c1       	rjmp	.+594    	; 0x31c <__bad_interrupt>
      ca:	00 00       	nop
      cc:	0c 94 6f 08 	jmp	0x10de	; 0x10de <__vector_51>
      d0:	0c 94 ce 08 	jmp	0x119c	; 0x119c <__vector_52>
      d4:	23 c1       	rjmp	.+582    	; 0x31c <__bad_interrupt>
      d6:	00 00       	nop
      d8:	0c 94 17 09 	jmp	0x122e	; 0x122e <__vector_54>
      dc:	0c 94 76 09 	jmp	0x12ec	; 0x12ec <__vector_55>
      e0:	1d c1       	rjmp	.+570    	; 0x31c <__bad_interrupt>
      e2:	00 00       	nop
      e4:	1b 02       	muls	r17, r27
      e6:	d6 02       	muls	r29, r22
      e8:	d6 02       	muls	r29, r22
      ea:	d6 02       	muls	r29, r22
      ec:	d6 02       	muls	r29, r22
      ee:	d6 02       	muls	r29, r22
      f0:	d6 02       	muls	r29, r22
      f2:	d6 02       	muls	r29, r22
      f4:	1b 02       	muls	r17, r27
      f6:	d6 02       	muls	r29, r22
      f8:	d6 02       	muls	r29, r22
      fa:	d6 02       	muls	r29, r22
      fc:	d6 02       	muls	r29, r22
      fe:	d6 02       	muls	r29, r22
     100:	d6 02       	muls	r29, r22
     102:	d6 02       	muls	r29, r22
     104:	1d 02       	muls	r17, r29
     106:	d6 02       	muls	r29, r22
     108:	d6 02       	muls	r29, r22
     10a:	d6 02       	muls	r29, r22
     10c:	d6 02       	muls	r29, r22
     10e:	d6 02       	muls	r29, r22
     110:	d6 02       	muls	r29, r22
     112:	d6 02       	muls	r29, r22
     114:	3a 02       	muls	r19, r26
     116:	d6 02       	muls	r29, r22
     118:	d6 02       	muls	r29, r22
     11a:	d6 02       	muls	r29, r22
     11c:	d6 02       	muls	r29, r22
     11e:	d6 02       	muls	r29, r22
     120:	d6 02       	muls	r29, r22
     122:	d6 02       	muls	r29, r22
     124:	1d 02       	muls	r17, r29
     126:	d6 02       	muls	r29, r22
     128:	d6 02       	muls	r29, r22
     12a:	d6 02       	muls	r29, r22
     12c:	d6 02       	muls	r29, r22
     12e:	d6 02       	muls	r29, r22
     130:	d6 02       	muls	r29, r22
     132:	d6 02       	muls	r29, r22
     134:	3a 02       	muls	r19, r26
     136:	d6 02       	muls	r29, r22
     138:	d6 02       	muls	r29, r22
     13a:	d6 02       	muls	r29, r22
     13c:	d6 02       	muls	r29, r22
     13e:	d6 02       	muls	r29, r22
     140:	d6 02       	muls	r29, r22
     142:	d6 02       	muls	r29, r22
     144:	d2 02       	muls	r29, r18
     146:	d6 02       	muls	r29, r22
     148:	d6 02       	muls	r29, r22
     14a:	d6 02       	muls	r29, r22
     14c:	d6 02       	muls	r29, r22
     14e:	d6 02       	muls	r29, r22
     150:	d6 02       	muls	r29, r22
     152:	d6 02       	muls	r29, r22
     154:	4e 02       	muls	r20, r30
     156:	d6 02       	muls	r29, r22
     158:	d6 02       	muls	r29, r22
     15a:	d6 02       	muls	r29, r22
     15c:	d6 02       	muls	r29, r22
     15e:	d6 02       	muls	r29, r22
     160:	d6 02       	muls	r29, r22
     162:	d6 02       	muls	r29, r22
     164:	71 02       	muls	r23, r17
     166:	d6 02       	muls	r29, r22
     168:	d6 02       	muls	r29, r22
     16a:	d6 02       	muls	r29, r22
     16c:	d6 02       	muls	r29, r22
     16e:	d6 02       	muls	r29, r22
     170:	d6 02       	muls	r29, r22
     172:	d6 02       	muls	r29, r22
     174:	42 02       	muls	r20, r18
     176:	d6 02       	muls	r29, r22
     178:	d6 02       	muls	r29, r22
     17a:	d6 02       	muls	r29, r22
     17c:	d6 02       	muls	r29, r22
     17e:	d6 02       	muls	r29, r22
     180:	d6 02       	muls	r29, r22
     182:	d6 02       	muls	r29, r22
     184:	60 02       	muls	r22, r16
     186:	d6 02       	muls	r29, r22
     188:	d6 02       	muls	r29, r22
     18a:	d6 02       	muls	r29, r22
     18c:	d6 02       	muls	r29, r22
     18e:	d6 02       	muls	r29, r22
     190:	d6 02       	muls	r29, r22
     192:	d6 02       	muls	r29, r22
     194:	a8 02       	muls	r26, r24
     196:	d6 02       	muls	r29, r22
     198:	d6 02       	muls	r29, r22
     19a:	d6 02       	muls	r29, r22
     19c:	d6 02       	muls	r29, r22
     19e:	d6 02       	muls	r29, r22
     1a0:	d6 02       	muls	r29, r22
     1a2:	d6 02       	muls	r29, r22
     1a4:	a8 02       	muls	r26, r24
     1a6:	d6 02       	muls	r29, r22
     1a8:	d6 02       	muls	r29, r22
     1aa:	d6 02       	muls	r29, r22
     1ac:	d6 02       	muls	r29, r22
     1ae:	d6 02       	muls	r29, r22
     1b0:	d6 02       	muls	r29, r22
     1b2:	d6 02       	muls	r29, r22
     1b4:	a3 02       	muls	r26, r19
     1b6:	d6 02       	muls	r29, r22
     1b8:	d6 02       	muls	r29, r22
     1ba:	d6 02       	muls	r29, r22
     1bc:	d6 02       	muls	r29, r22
     1be:	d6 02       	muls	r29, r22
     1c0:	d6 02       	muls	r29, r22
     1c2:	d6 02       	muls	r29, r22
     1c4:	a3 02       	muls	r26, r19
     1c6:	d6 02       	muls	r29, r22
     1c8:	d6 02       	muls	r29, r22
     1ca:	d6 02       	muls	r29, r22
     1cc:	d6 02       	muls	r29, r22
     1ce:	d6 02       	muls	r29, r22
     1d0:	d6 02       	muls	r29, r22
     1d2:	d6 02       	muls	r29, r22
     1d4:	b3 02       	muls	r27, r19
     1d6:	d6 02       	muls	r29, r22
     1d8:	d6 02       	muls	r29, r22
     1da:	d6 02       	muls	r29, r22
     1dc:	d6 02       	muls	r29, r22
     1de:	d6 02       	muls	r29, r22
     1e0:	d6 02       	muls	r29, r22
     1e2:	d6 02       	muls	r29, r22
     1e4:	c8 02       	muls	r28, r24
     1e6:	d6 02       	muls	r29, r22
     1e8:	d6 02       	muls	r29, r22
     1ea:	d6 02       	muls	r29, r22
     1ec:	d6 02       	muls	r29, r22
     1ee:	d6 02       	muls	r29, r22
     1f0:	d6 02       	muls	r29, r22
     1f2:	d6 02       	muls	r29, r22
     1f4:	b3 02       	muls	r27, r19
     1f6:	d6 02       	muls	r29, r22
     1f8:	d6 02       	muls	r29, r22
     1fa:	d6 02       	muls	r29, r22
     1fc:	d6 02       	muls	r29, r22
     1fe:	d6 02       	muls	r29, r22
     200:	d6 02       	muls	r29, r22
     202:	d6 02       	muls	r29, r22
     204:	c8 02       	muls	r28, r24
     206:	d6 02       	muls	r29, r22
     208:	d6 02       	muls	r29, r22
     20a:	d6 02       	muls	r29, r22
     20c:	d6 02       	muls	r29, r22
     20e:	d6 02       	muls	r29, r22
     210:	d6 02       	muls	r29, r22
     212:	d6 02       	muls	r29, r22
     214:	cc 02       	muls	r28, r28
     216:	d6 02       	muls	r29, r22
     218:	d6 02       	muls	r29, r22
     21a:	d6 02       	muls	r29, r22
     21c:	d6 02       	muls	r29, r22
     21e:	d6 02       	muls	r29, r22
     220:	d6 02       	muls	r29, r22
     222:	d6 02       	muls	r29, r22
     224:	79 02       	muls	r23, r25
     226:	d6 02       	muls	r29, r22
     228:	d6 02       	muls	r29, r22
     22a:	d6 02       	muls	r29, r22
     22c:	d6 02       	muls	r29, r22
     22e:	d6 02       	muls	r29, r22
     230:	d6 02       	muls	r29, r22
     232:	d6 02       	muls	r29, r22
     234:	79 02       	muls	r23, r25
     236:	d6 02       	muls	r29, r22
     238:	d6 02       	muls	r29, r22
     23a:	d6 02       	muls	r29, r22
     23c:	d6 02       	muls	r29, r22
     23e:	d6 02       	muls	r29, r22
     240:	d6 02       	muls	r29, r22
     242:	d6 02       	muls	r29, r22
     244:	7b 02       	muls	r23, r27
     246:	d6 02       	muls	r29, r22
     248:	d6 02       	muls	r29, r22
     24a:	d6 02       	muls	r29, r22
     24c:	d6 02       	muls	r29, r22
     24e:	d6 02       	muls	r29, r22
     250:	d6 02       	muls	r29, r22
     252:	d6 02       	muls	r29, r22
     254:	8b 02       	muls	r24, r27
     256:	d6 02       	muls	r29, r22
     258:	d6 02       	muls	r29, r22
     25a:	d6 02       	muls	r29, r22
     25c:	d6 02       	muls	r29, r22
     25e:	d6 02       	muls	r29, r22
     260:	d6 02       	muls	r29, r22
     262:	d6 02       	muls	r29, r22
     264:	9f 02       	muls	r25, r31

00000266 <prvIdleTask>:
     266:	0a e8       	ldi	r16, 0x8A	; 138
     268:	12 e0       	ldi	r17, 0x02	; 2
     26a:	0f 2e       	mov	r0, r31
     26c:	f2 eb       	ldi	r31, 0xB2	; 178
     26e:	ef 2e       	mov	r14, r31
     270:	f2 e0       	ldi	r31, 0x02	; 2
     272:	ff 2e       	mov	r15, r31
     274:	f0 2d       	mov	r31, r0
     276:	26 c0       	rjmp	.+76     	; 0x2c4 <prvIdleTask+0x5e>
     278:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <vTaskSuspendAll>
     27c:	d8 01       	movw	r26, r16
     27e:	cc 91       	ld	r28, X
     280:	0e 94 24 0c 	call	0x1848	; 0x1848 <xTaskResumeAll>
     284:	cc 23       	and	r28, r28
     286:	f1 f0       	breq	.+60     	; 0x2c4 <prvIdleTask+0x5e>
     288:	0f b6       	in	r0, 0x3f	; 63
     28a:	f8 94       	cli
     28c:	0f 92       	push	r0
     28e:	d8 01       	movw	r26, r16
     290:	15 96       	adiw	r26, 0x05	; 5
     292:	ed 91       	ld	r30, X+
     294:	fc 91       	ld	r31, X
     296:	16 97       	sbiw	r26, 0x06	; 6
     298:	c6 81       	ldd	r28, Z+6	; 0x06
     29a:	d7 81       	ldd	r29, Z+7	; 0x07
     29c:	ce 01       	movw	r24, r28
     29e:	02 96       	adiw	r24, 0x02	; 2
     2a0:	ff d1       	rcall	.+1022   	; 0x6a0 <uxListRemove>
     2a2:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <uxCurrentNumberOfTasks>
     2a6:	81 50       	subi	r24, 0x01	; 1
     2a8:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <uxCurrentNumberOfTasks>
     2ac:	80 91 89 02 	lds	r24, 0x0289	; 0x800289 <uxDeletedTasksWaitingCleanUp>
     2b0:	81 50       	subi	r24, 0x01	; 1
     2b2:	80 93 89 02 	sts	0x0289, r24	; 0x800289 <uxDeletedTasksWaitingCleanUp>
     2b6:	0f 90       	pop	r0
     2b8:	0f be       	out	0x3f, r0	; 63
     2ba:	8f 89       	ldd	r24, Y+23	; 0x17
     2bc:	98 8d       	ldd	r25, Y+24	; 0x18
     2be:	5d d0       	rcall	.+186    	; 0x37a <vPortFree>
     2c0:	ce 01       	movw	r24, r28
     2c2:	5b d0       	rcall	.+182    	; 0x37a <vPortFree>
     2c4:	80 91 89 02 	lds	r24, 0x0289	; 0x800289 <uxDeletedTasksWaitingCleanUp>
     2c8:	81 11       	cpse	r24, r1
     2ca:	d6 cf       	rjmp	.-84     	; 0x278 <prvIdleTask+0x12>
     2cc:	f7 01       	movw	r30, r14
     2ce:	80 81       	ld	r24, Z
     2d0:	82 30       	cpi	r24, 0x02	; 2
     2d2:	08 f0       	brcs	.+2      	; 0x2d6 <prvIdleTask+0x70>
     2d4:	c3 d2       	rcall	.+1414   	; 0x85c <vPortYield>
     2d6:	60 d0       	rcall	.+192    	; 0x398 <vApplicationIdleHook>
     2d8:	f5 cf       	rjmp	.-22     	; 0x2c4 <prvIdleTask+0x5e>

000002da <__ctors_end>:
     2da:	11 24       	eor	r1, r1
     2dc:	1f be       	out	0x3f, r1	; 63
     2de:	cf ef       	ldi	r28, 0xFF	; 255
     2e0:	d1 e2       	ldi	r29, 0x21	; 33
     2e2:	de bf       	out	0x3e, r29	; 62
     2e4:	cd bf       	out	0x3d, r28	; 61
     2e6:	00 e0       	ldi	r16, 0x00	; 0
     2e8:	0c bf       	out	0x3c, r16	; 60

000002ea <__do_copy_data>:
     2ea:	12 e0       	ldi	r17, 0x02	; 2
     2ec:	a0 e0       	ldi	r26, 0x00	; 0
     2ee:	b2 e0       	ldi	r27, 0x02	; 2
     2f0:	e0 e6       	ldi	r30, 0x60	; 96
     2f2:	fd e2       	ldi	r31, 0x2D	; 45
     2f4:	00 e0       	ldi	r16, 0x00	; 0
     2f6:	0b bf       	out	0x3b, r16	; 59
     2f8:	02 c0       	rjmp	.+4      	; 0x2fe <__do_copy_data+0x14>
     2fa:	07 90       	elpm	r0, Z+
     2fc:	0d 92       	st	X+, r0
     2fe:	a6 35       	cpi	r26, 0x56	; 86
     300:	b1 07       	cpc	r27, r17
     302:	d9 f7       	brne	.-10     	; 0x2fa <__do_copy_data+0x10>

00000304 <__do_clear_bss>:
     304:	24 e0       	ldi	r18, 0x04	; 4
     306:	a6 e5       	ldi	r26, 0x56	; 86
     308:	b2 e0       	ldi	r27, 0x02	; 2
     30a:	01 c0       	rjmp	.+2      	; 0x30e <.do_clear_bss_start>

0000030c <.do_clear_bss_loop>:
     30c:	1d 92       	st	X+, r1

0000030e <.do_clear_bss_start>:
     30e:	a1 38       	cpi	r26, 0x81	; 129
     310:	b2 07       	cpc	r27, r18
     312:	e1 f7       	brne	.-8      	; 0x30c <.do_clear_bss_loop>
     314:	0e 94 8f 10 	call	0x211e	; 0x211e <main>
     318:	0c 94 ae 16 	jmp	0x2d5c	; 0x2d5c <_exit>

0000031c <__bad_interrupt>:
     31c:	71 ce       	rjmp	.-798    	; 0x0 <__vectors>

0000031e <system_tick>:
     31e:	8f 93       	push	r24
     320:	8f b7       	in	r24, 0x3f	; 63
     322:	8f 93       	push	r24
     324:	f8 94       	cli
     326:	80 91 e4 02 	lds	r24, 0x02E4	; 0x8002e4 <__system_time>
     32a:	8f 5f       	subi	r24, 0xFF	; 255
     32c:	80 93 e4 02 	sts	0x02E4, r24	; 0x8002e4 <__system_time>
     330:	80 91 e5 02 	lds	r24, 0x02E5	; 0x8002e5 <__system_time+0x1>
     334:	8f 4f       	sbci	r24, 0xFF	; 255
     336:	80 93 e5 02 	sts	0x02E5, r24	; 0x8002e5 <__system_time+0x1>
     33a:	80 91 e6 02 	lds	r24, 0x02E6	; 0x8002e6 <__system_time+0x2>
     33e:	8f 4f       	sbci	r24, 0xFF	; 255
     340:	80 93 e6 02 	sts	0x02E6, r24	; 0x8002e6 <__system_time+0x2>
     344:	80 91 e7 02 	lds	r24, 0x02E7	; 0x8002e7 <__system_time+0x3>
     348:	8f 4f       	sbci	r24, 0xFF	; 255
     34a:	80 93 e7 02 	sts	0x02E7, r24	; 0x8002e7 <__system_time+0x3>
     34e:	8f 91       	pop	r24
     350:	8f bf       	out	0x3f, r24	; 63
     352:	8f 91       	pop	r24
     354:	08 95       	ret

00000356 <pvPortMalloc>:
     356:	cf 93       	push	r28
     358:	df 93       	push	r29
     35a:	ec 01       	movw	r28, r24
     35c:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <vTaskSuspendAll>
     360:	ce 01       	movw	r24, r28
     362:	0e 94 a2 12 	call	0x2544	; 0x2544 <malloc>
     366:	ec 01       	movw	r28, r24
     368:	0e 94 24 0c 	call	0x1848	; 0x1848 <xTaskResumeAll>
     36c:	20 97       	sbiw	r28, 0x00	; 0
     36e:	09 f4       	brne	.+2      	; 0x372 <pvPortMalloc+0x1c>
     370:	2c d0       	rcall	.+88     	; 0x3ca <vApplicationMallocFailedHook>
     372:	ce 01       	movw	r24, r28
     374:	df 91       	pop	r29
     376:	cf 91       	pop	r28
     378:	08 95       	ret

0000037a <vPortFree>:
     37a:	cf 93       	push	r28
     37c:	df 93       	push	r29
     37e:	00 97       	sbiw	r24, 0x00	; 0
     380:	41 f0       	breq	.+16     	; 0x392 <vPortFree+0x18>
     382:	ec 01       	movw	r28, r24
     384:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <vTaskSuspendAll>
     388:	ce 01       	movw	r24, r28
     38a:	0e 94 3a 13 	call	0x2674	; 0x2674 <free>
     38e:	0e 94 24 0c 	call	0x1848	; 0x1848 <xTaskResumeAll>
     392:	df 91       	pop	r29
     394:	cf 91       	pop	r28
     396:	08 95       	ret

00000398 <vApplicationIdleHook>:
     398:	8f ef       	ldi	r24, 0xFF	; 255
     39a:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x70007e>
     39e:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x70007d>
     3a2:	80 b7       	in	r24, 0x30	; 48
     3a4:	87 7f       	andi	r24, 0xF7	; 247
     3a6:	80 bf       	out	0x30, r24	; 48
     3a8:	80 b7       	in	r24, 0x30	; 48
     3aa:	80 68       	ori	r24, 0x80	; 128
     3ac:	80 bf       	out	0x30, r24	; 48
     3ae:	83 b7       	in	r24, 0x33	; 51
     3b0:	81 7f       	andi	r24, 0xF1	; 241
     3b2:	83 bf       	out	0x33, r24	; 51
     3b4:	0f b6       	in	r0, 0x3f	; 63
     3b6:	f8 94       	cli
     3b8:	0f 92       	push	r0
     3ba:	83 b7       	in	r24, 0x33	; 51
     3bc:	81 60       	ori	r24, 0x01	; 1
     3be:	83 bf       	out	0x33, r24	; 51
     3c0:	0f 90       	pop	r0
     3c2:	0f be       	out	0x3f, r0	; 63
     3c4:	88 95       	sleep
     3c6:	13 be       	out	0x33, r1	; 51
     3c8:	08 95       	ret

000003ca <vApplicationMallocFailedHook>:
     3ca:	27 9a       	sbi	0x04, 7	; 4
     3cc:	2f 9a       	sbi	0x05, 7	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3ce:	83 ed       	ldi	r24, 0xD3	; 211
     3d0:	90 e3       	ldi	r25, 0x30	; 48
     3d2:	01 97       	sbiw	r24, 0x01	; 1
     3d4:	f1 f7       	brne	.-4      	; 0x3d2 <vApplicationMallocFailedHook+0x8>
     3d6:	00 c0       	rjmp	.+0      	; 0x3d8 <vApplicationMallocFailedHook+0xe>
     3d8:	00 00       	nop
     3da:	1f 9a       	sbi	0x03, 7	; 3
     3dc:	f8 cf       	rjmp	.-16     	; 0x3ce <vApplicationMallocFailedHook+0x4>

000003de <vApplicationStackOverflowHook>:
     3de:	27 9a       	sbi	0x04, 7	; 4
     3e0:	2f 9a       	sbi	0x05, 7	; 5
     3e2:	2f e7       	ldi	r18, 0x7F	; 127
     3e4:	8a e1       	ldi	r24, 0x1A	; 26
     3e6:	96 e0       	ldi	r25, 0x06	; 6
     3e8:	21 50       	subi	r18, 0x01	; 1
     3ea:	80 40       	sbci	r24, 0x00	; 0
     3ec:	90 40       	sbci	r25, 0x00	; 0
     3ee:	e1 f7       	brne	.-8      	; 0x3e8 <vApplicationStackOverflowHook+0xa>
     3f0:	00 c0       	rjmp	.+0      	; 0x3f2 <vApplicationStackOverflowHook+0x14>
     3f2:	00 00       	nop
     3f4:	1f 9a       	sbi	0x03, 7	; 3
     3f6:	f5 cf       	rjmp	.-22     	; 0x3e2 <vApplicationStackOverflowHook+0x4>

000003f8 <__vector_39>:
     3f8:	1f 92       	push	r1
     3fa:	0f 92       	push	r0
     3fc:	0f b6       	in	r0, 0x3f	; 63
     3fe:	0f 92       	push	r0
     400:	11 24       	eor	r1, r1
     402:	0b b6       	in	r0, 0x3b	; 59
     404:	0f 92       	push	r0
     406:	2f 93       	push	r18
     408:	3f 93       	push	r19
     40a:	8f 93       	push	r24
     40c:	9f 93       	push	r25
     40e:	af 93       	push	r26
     410:	bf 93       	push	r27
     412:	ef 93       	push	r30
     414:	ff 93       	push	r31
     416:	e0 91 b9 00 	lds	r30, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     41a:	8e 2f       	mov	r24, r30
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	fc 01       	movw	r30, r24
     420:	38 97       	sbiw	r30, 0x08	; 8
     422:	e1 3c       	cpi	r30, 0xC1	; 193
     424:	f1 05       	cpc	r31, r1
     426:	08 f0       	brcs	.+2      	; 0x42a <__FUSE_REGION_LENGTH__+0x2a>
     428:	c1 c0       	rjmp	.+386    	; 0x5ac <__FUSE_REGION_LENGTH__+0x1ac>
     42a:	88 27       	eor	r24, r24
     42c:	ee 58       	subi	r30, 0x8E	; 142
     42e:	ff 4f       	sbci	r31, 0xFF	; 255
     430:	8f 4f       	sbci	r24, 0xFF	; 255
     432:	0c 94 81 12 	jmp	0x2502	; 0x2502 <__tablejump2__>
     436:	10 92 56 02 	sts	0x0256, r1	; 0x800256 <__data_end>
     43a:	e0 91 56 02 	lds	r30, 0x0256	; 0x800256 <__data_end>
     43e:	80 91 59 02 	lds	r24, 0x0259	; 0x800259 <I2C_msgSize>
     442:	e8 17       	cp	r30, r24
     444:	70 f4       	brcc	.+28     	; 0x462 <__FUSE_REGION_LENGTH__+0x62>
     446:	81 e0       	ldi	r24, 0x01	; 1
     448:	8e 0f       	add	r24, r30
     44a:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <__data_end>
     44e:	f0 e0       	ldi	r31, 0x00	; 0
     450:	e6 5a       	subi	r30, 0xA6	; 166
     452:	fd 4f       	sbci	r31, 0xFD	; 253
     454:	80 81       	ld	r24, Z
     456:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     45a:	85 e8       	ldi	r24, 0x85	; 133
     45c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     460:	ac c0       	rjmp	.+344    	; 0x5ba <__FUSE_REGION_LENGTH__+0x1ba>
     462:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <I2C_statusReg>
     466:	81 60       	ori	r24, 0x01	; 1
     468:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <I2C_statusReg>
     46c:	84 e9       	ldi	r24, 0x94	; 148
     46e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     472:	a3 c0       	rjmp	.+326    	; 0x5ba <__FUSE_REGION_LENGTH__+0x1ba>
     474:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     478:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <I2C_state>
     47c:	85 ee       	ldi	r24, 0xE5	; 229
     47e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     482:	9b c0       	rjmp	.+310    	; 0x5ba <__FUSE_REGION_LENGTH__+0x1ba>
     484:	e0 91 56 02 	lds	r30, 0x0256	; 0x800256 <__data_end>
     488:	81 e0       	ldi	r24, 0x01	; 1
     48a:	8e 0f       	add	r24, r30
     48c:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <__data_end>
     490:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     494:	f0 e0       	ldi	r31, 0x00	; 0
     496:	e6 5a       	subi	r30, 0xA6	; 166
     498:	fd 4f       	sbci	r31, 0xFD	; 253
     49a:	80 83       	st	Z, r24
     49c:	20 91 56 02 	lds	r18, 0x0256	; 0x800256 <__data_end>
     4a0:	30 e0       	ldi	r19, 0x00	; 0
     4a2:	80 91 59 02 	lds	r24, 0x0259	; 0x800259 <I2C_msgSize>
     4a6:	90 e0       	ldi	r25, 0x00	; 0
     4a8:	01 97       	sbiw	r24, 0x01	; 1
     4aa:	28 17       	cp	r18, r24
     4ac:	39 07       	cpc	r19, r25
     4ae:	24 f4       	brge	.+8      	; 0x4b8 <__FUSE_REGION_LENGTH__+0xb8>
     4b0:	85 ec       	ldi	r24, 0xC5	; 197
     4b2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     4b6:	81 c0       	rjmp	.+258    	; 0x5ba <__FUSE_REGION_LENGTH__+0x1ba>
     4b8:	85 e8       	ldi	r24, 0x85	; 133
     4ba:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     4be:	7d c0       	rjmp	.+250    	; 0x5ba <__FUSE_REGION_LENGTH__+0x1ba>
     4c0:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     4c4:	e0 91 56 02 	lds	r30, 0x0256	; 0x800256 <__data_end>
     4c8:	f0 e0       	ldi	r31, 0x00	; 0
     4ca:	e6 5a       	subi	r30, 0xA6	; 166
     4cc:	fd 4f       	sbci	r31, 0xFD	; 253
     4ce:	80 83       	st	Z, r24
     4d0:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <I2C_statusReg>
     4d4:	81 60       	ori	r24, 0x01	; 1
     4d6:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <I2C_statusReg>
     4da:	84 ed       	ldi	r24, 0xD4	; 212
     4dc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     4e0:	6c c0       	rjmp	.+216    	; 0x5ba <__FUSE_REGION_LENGTH__+0x1ba>
     4e2:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     4e6:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <I2C_state>
     4ea:	85 ed       	ldi	r24, 0xD5	; 213
     4ec:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     4f0:	64 c0       	rjmp	.+200    	; 0x5ba <__FUSE_REGION_LENGTH__+0x1ba>
     4f2:	10 92 56 02 	sts	0x0256, r1	; 0x800256 <__data_end>
     4f6:	e0 91 56 02 	lds	r30, 0x0256	; 0x800256 <__data_end>
     4fa:	81 e0       	ldi	r24, 0x01	; 1
     4fc:	8e 0f       	add	r24, r30
     4fe:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <__data_end>
     502:	f0 e0       	ldi	r31, 0x00	; 0
     504:	e6 5a       	subi	r30, 0xA6	; 166
     506:	fd 4f       	sbci	r31, 0xFD	; 253
     508:	80 81       	ld	r24, Z
     50a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     50e:	85 ec       	ldi	r24, 0xC5	; 197
     510:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     514:	52 c0       	rjmp	.+164    	; 0x5ba <__FUSE_REGION_LENGTH__+0x1ba>
     516:	90 91 56 02 	lds	r25, 0x0256	; 0x800256 <__data_end>
     51a:	80 91 59 02 	lds	r24, 0x0259	; 0x800259 <I2C_msgSize>
     51e:	98 13       	cpse	r25, r24
     520:	06 c0       	rjmp	.+12     	; 0x52e <__FUSE_REGION_LENGTH__+0x12e>
     522:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <I2C_statusReg>
     526:	81 60       	ori	r24, 0x01	; 1
     528:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <I2C_statusReg>
     52c:	04 c0       	rjmp	.+8      	; 0x536 <__FUSE_REGION_LENGTH__+0x136>
     52e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     532:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <I2C_state>
     536:	84 e0       	ldi	r24, 0x04	; 4
     538:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     53c:	3e c0       	rjmp	.+124    	; 0x5ba <__FUSE_REGION_LENGTH__+0x1ba>
     53e:	85 ec       	ldi	r24, 0xC5	; 197
     540:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     544:	3a c0       	rjmp	.+116    	; 0x5ba <__FUSE_REGION_LENGTH__+0x1ba>
     546:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <I2C_statusReg>
     54a:	84 60       	ori	r24, 0x04	; 4
     54c:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <I2C_statusReg>
     550:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <I2C_statusReg>
     554:	82 60       	ori	r24, 0x02	; 2
     556:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <I2C_statusReg>
     55a:	10 92 56 02 	sts	0x0256, r1	; 0x800256 <__data_end>
     55e:	85 ec       	ldi	r24, 0xC5	; 197
     560:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     564:	2a c0       	rjmp	.+84     	; 0x5ba <__FUSE_REGION_LENGTH__+0x1ba>
     566:	e0 91 56 02 	lds	r30, 0x0256	; 0x800256 <__data_end>
     56a:	81 e0       	ldi	r24, 0x01	; 1
     56c:	8e 0f       	add	r24, r30
     56e:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <__data_end>
     572:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     576:	f0 e0       	ldi	r31, 0x00	; 0
     578:	e6 5a       	subi	r30, 0xA6	; 166
     57a:	fd 4f       	sbci	r31, 0xFD	; 253
     57c:	80 83       	st	Z, r24
     57e:	80 91 57 02 	lds	r24, 0x0257	; 0x800257 <I2C_statusReg>
     582:	81 60       	ori	r24, 0x01	; 1
     584:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <I2C_statusReg>
     588:	85 ec       	ldi	r24, 0xC5	; 197
     58a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     58e:	15 c0       	rjmp	.+42     	; 0x5ba <__FUSE_REGION_LENGTH__+0x1ba>
     590:	85 e8       	ldi	r24, 0x85	; 133
     592:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     596:	11 c0       	rjmp	.+34     	; 0x5ba <__FUSE_REGION_LENGTH__+0x1ba>
     598:	84 e0       	ldi	r24, 0x04	; 4
     59a:	80 93 58 02 	sts	0x0258, r24	; 0x800258 <I2C_checkBusyAfterStop>
     59e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     5a2:	0b c0       	rjmp	.+22     	; 0x5ba <__FUSE_REGION_LENGTH__+0x1ba>
     5a4:	85 ee       	ldi	r24, 0xE5	; 229
     5a6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     5aa:	07 c0       	rjmp	.+14     	; 0x5ba <__FUSE_REGION_LENGTH__+0x1ba>
     5ac:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     5b0:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <I2C_state>
     5b4:	85 ed       	ldi	r24, 0xD5	; 213
     5b6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     5ba:	ff 91       	pop	r31
     5bc:	ef 91       	pop	r30
     5be:	bf 91       	pop	r27
     5c0:	af 91       	pop	r26
     5c2:	9f 91       	pop	r25
     5c4:	8f 91       	pop	r24
     5c6:	3f 91       	pop	r19
     5c8:	2f 91       	pop	r18
     5ca:	0f 90       	pop	r0
     5cc:	0b be       	out	0x3b, r0	; 59
     5ce:	0f 90       	pop	r0
     5d0:	0f be       	out	0x3f, r0	; 63
     5d2:	0f 90       	pop	r0
     5d4:	1f 90       	pop	r1
     5d6:	18 95       	reti

000005d8 <vListInitialise>:
     5d8:	fc 01       	movw	r30, r24
     5da:	03 96       	adiw	r24, 0x03	; 3
     5dc:	92 83       	std	Z+2, r25	; 0x02
     5de:	81 83       	std	Z+1, r24	; 0x01
     5e0:	2f ef       	ldi	r18, 0xFF	; 255
     5e2:	3f ef       	ldi	r19, 0xFF	; 255
     5e4:	34 83       	std	Z+4, r19	; 0x04
     5e6:	23 83       	std	Z+3, r18	; 0x03
     5e8:	96 83       	std	Z+6, r25	; 0x06
     5ea:	85 83       	std	Z+5, r24	; 0x05
     5ec:	90 87       	std	Z+8, r25	; 0x08
     5ee:	87 83       	std	Z+7, r24	; 0x07
     5f0:	10 82       	st	Z, r1
     5f2:	08 95       	ret

000005f4 <vListInitialiseItem>:
     5f4:	fc 01       	movw	r30, r24
     5f6:	11 86       	std	Z+9, r1	; 0x09
     5f8:	10 86       	std	Z+8, r1	; 0x08
     5fa:	08 95       	ret

000005fc <vListInsertEnd>:
     5fc:	cf 93       	push	r28
     5fe:	df 93       	push	r29
     600:	9c 01       	movw	r18, r24
     602:	fb 01       	movw	r30, r22
     604:	dc 01       	movw	r26, r24
     606:	11 96       	adiw	r26, 0x01	; 1
     608:	cd 91       	ld	r28, X+
     60a:	dc 91       	ld	r29, X
     60c:	12 97       	sbiw	r26, 0x02	; 2
     60e:	d3 83       	std	Z+3, r29	; 0x03
     610:	c2 83       	std	Z+2, r28	; 0x02
     612:	8c 81       	ldd	r24, Y+4	; 0x04
     614:	9d 81       	ldd	r25, Y+5	; 0x05
     616:	95 83       	std	Z+5, r25	; 0x05
     618:	84 83       	std	Z+4, r24	; 0x04
     61a:	8c 81       	ldd	r24, Y+4	; 0x04
     61c:	9d 81       	ldd	r25, Y+5	; 0x05
     61e:	dc 01       	movw	r26, r24
     620:	13 96       	adiw	r26, 0x03	; 3
     622:	7c 93       	st	X, r23
     624:	6e 93       	st	-X, r22
     626:	12 97       	sbiw	r26, 0x02	; 2
     628:	7d 83       	std	Y+5, r23	; 0x05
     62a:	6c 83       	std	Y+4, r22	; 0x04
     62c:	31 87       	std	Z+9, r19	; 0x09
     62e:	20 87       	std	Z+8, r18	; 0x08
     630:	f9 01       	movw	r30, r18
     632:	80 81       	ld	r24, Z
     634:	8f 5f       	subi	r24, 0xFF	; 255
     636:	80 83       	st	Z, r24
     638:	df 91       	pop	r29
     63a:	cf 91       	pop	r28
     63c:	08 95       	ret

0000063e <vListInsert>:
     63e:	cf 93       	push	r28
     640:	df 93       	push	r29
     642:	eb 01       	movw	r28, r22
     644:	48 81       	ld	r20, Y
     646:	59 81       	ldd	r21, Y+1	; 0x01
     648:	4f 3f       	cpi	r20, 0xFF	; 255
     64a:	2f ef       	ldi	r18, 0xFF	; 255
     64c:	52 07       	cpc	r21, r18
     64e:	21 f4       	brne	.+8      	; 0x658 <vListInsert+0x1a>
     650:	fc 01       	movw	r30, r24
     652:	a7 81       	ldd	r26, Z+7	; 0x07
     654:	b0 85       	ldd	r27, Z+8	; 0x08
     656:	0d c0       	rjmp	.+26     	; 0x672 <vListInsert+0x34>
     658:	dc 01       	movw	r26, r24
     65a:	13 96       	adiw	r26, 0x03	; 3
     65c:	01 c0       	rjmp	.+2      	; 0x660 <vListInsert+0x22>
     65e:	df 01       	movw	r26, r30
     660:	12 96       	adiw	r26, 0x02	; 2
     662:	ed 91       	ld	r30, X+
     664:	fc 91       	ld	r31, X
     666:	13 97       	sbiw	r26, 0x03	; 3
     668:	20 81       	ld	r18, Z
     66a:	31 81       	ldd	r19, Z+1	; 0x01
     66c:	42 17       	cp	r20, r18
     66e:	53 07       	cpc	r21, r19
     670:	b0 f7       	brcc	.-20     	; 0x65e <vListInsert+0x20>
     672:	12 96       	adiw	r26, 0x02	; 2
     674:	ed 91       	ld	r30, X+
     676:	fc 91       	ld	r31, X
     678:	13 97       	sbiw	r26, 0x03	; 3
     67a:	fb 83       	std	Y+3, r31	; 0x03
     67c:	ea 83       	std	Y+2, r30	; 0x02
     67e:	d5 83       	std	Z+5, r29	; 0x05
     680:	c4 83       	std	Z+4, r28	; 0x04
     682:	bd 83       	std	Y+5, r27	; 0x05
     684:	ac 83       	std	Y+4, r26	; 0x04
     686:	13 96       	adiw	r26, 0x03	; 3
     688:	dc 93       	st	X, r29
     68a:	ce 93       	st	-X, r28
     68c:	12 97       	sbiw	r26, 0x02	; 2
     68e:	99 87       	std	Y+9, r25	; 0x09
     690:	88 87       	std	Y+8, r24	; 0x08
     692:	fc 01       	movw	r30, r24
     694:	20 81       	ld	r18, Z
     696:	2f 5f       	subi	r18, 0xFF	; 255
     698:	20 83       	st	Z, r18
     69a:	df 91       	pop	r29
     69c:	cf 91       	pop	r28
     69e:	08 95       	ret

000006a0 <uxListRemove>:
     6a0:	cf 93       	push	r28
     6a2:	df 93       	push	r29
     6a4:	fc 01       	movw	r30, r24
     6a6:	a0 85       	ldd	r26, Z+8	; 0x08
     6a8:	b1 85       	ldd	r27, Z+9	; 0x09
     6aa:	c2 81       	ldd	r28, Z+2	; 0x02
     6ac:	d3 81       	ldd	r29, Z+3	; 0x03
     6ae:	84 81       	ldd	r24, Z+4	; 0x04
     6b0:	95 81       	ldd	r25, Z+5	; 0x05
     6b2:	9d 83       	std	Y+5, r25	; 0x05
     6b4:	8c 83       	std	Y+4, r24	; 0x04
     6b6:	c4 81       	ldd	r28, Z+4	; 0x04
     6b8:	d5 81       	ldd	r29, Z+5	; 0x05
     6ba:	82 81       	ldd	r24, Z+2	; 0x02
     6bc:	93 81       	ldd	r25, Z+3	; 0x03
     6be:	9b 83       	std	Y+3, r25	; 0x03
     6c0:	8a 83       	std	Y+2, r24	; 0x02
     6c2:	11 96       	adiw	r26, 0x01	; 1
     6c4:	8d 91       	ld	r24, X+
     6c6:	9c 91       	ld	r25, X
     6c8:	12 97       	sbiw	r26, 0x02	; 2
     6ca:	e8 17       	cp	r30, r24
     6cc:	f9 07       	cpc	r31, r25
     6ce:	31 f4       	brne	.+12     	; 0x6dc <uxListRemove+0x3c>
     6d0:	84 81       	ldd	r24, Z+4	; 0x04
     6d2:	95 81       	ldd	r25, Z+5	; 0x05
     6d4:	12 96       	adiw	r26, 0x02	; 2
     6d6:	9c 93       	st	X, r25
     6d8:	8e 93       	st	-X, r24
     6da:	11 97       	sbiw	r26, 0x01	; 1
     6dc:	11 86       	std	Z+9, r1	; 0x09
     6de:	10 86       	std	Z+8, r1	; 0x08
     6e0:	8c 91       	ld	r24, X
     6e2:	81 50       	subi	r24, 0x01	; 1
     6e4:	8c 93       	st	X, r24
     6e6:	df 91       	pop	r29
     6e8:	cf 91       	pop	r28
     6ea:	08 95       	ret

000006ec <pxPortInitialiseStack>:
     6ec:	31 e1       	ldi	r19, 0x11	; 17
     6ee:	fc 01       	movw	r30, r24
     6f0:	30 83       	st	Z, r19
     6f2:	31 97       	sbiw	r30, 0x01	; 1
     6f4:	22 e2       	ldi	r18, 0x22	; 34
     6f6:	20 83       	st	Z, r18
     6f8:	31 97       	sbiw	r30, 0x01	; 1
     6fa:	a3 e3       	ldi	r26, 0x33	; 51
     6fc:	a0 83       	st	Z, r26
     6fe:	31 97       	sbiw	r30, 0x01	; 1
     700:	60 83       	st	Z, r22
     702:	31 97       	sbiw	r30, 0x01	; 1
     704:	70 83       	st	Z, r23
     706:	31 97       	sbiw	r30, 0x01	; 1
     708:	10 82       	st	Z, r1
     70a:	31 97       	sbiw	r30, 0x01	; 1
     70c:	10 82       	st	Z, r1
     70e:	31 97       	sbiw	r30, 0x01	; 1
     710:	60 e8       	ldi	r22, 0x80	; 128
     712:	60 83       	st	Z, r22
     714:	31 97       	sbiw	r30, 0x01	; 1
     716:	10 82       	st	Z, r1
     718:	31 97       	sbiw	r30, 0x01	; 1
     71a:	10 82       	st	Z, r1
     71c:	31 97       	sbiw	r30, 0x01	; 1
     71e:	10 82       	st	Z, r1
     720:	31 97       	sbiw	r30, 0x01	; 1
     722:	62 e0       	ldi	r22, 0x02	; 2
     724:	60 83       	st	Z, r22
     726:	31 97       	sbiw	r30, 0x01	; 1
     728:	63 e0       	ldi	r22, 0x03	; 3
     72a:	60 83       	st	Z, r22
     72c:	31 97       	sbiw	r30, 0x01	; 1
     72e:	64 e0       	ldi	r22, 0x04	; 4
     730:	60 83       	st	Z, r22
     732:	31 97       	sbiw	r30, 0x01	; 1
     734:	65 e0       	ldi	r22, 0x05	; 5
     736:	60 83       	st	Z, r22
     738:	31 97       	sbiw	r30, 0x01	; 1
     73a:	66 e0       	ldi	r22, 0x06	; 6
     73c:	60 83       	st	Z, r22
     73e:	31 97       	sbiw	r30, 0x01	; 1
     740:	67 e0       	ldi	r22, 0x07	; 7
     742:	60 83       	st	Z, r22
     744:	31 97       	sbiw	r30, 0x01	; 1
     746:	68 e0       	ldi	r22, 0x08	; 8
     748:	60 83       	st	Z, r22
     74a:	31 97       	sbiw	r30, 0x01	; 1
     74c:	69 e0       	ldi	r22, 0x09	; 9
     74e:	60 83       	st	Z, r22
     750:	31 97       	sbiw	r30, 0x01	; 1
     752:	60 e1       	ldi	r22, 0x10	; 16
     754:	60 83       	st	Z, r22
     756:	31 97       	sbiw	r30, 0x01	; 1
     758:	30 83       	st	Z, r19
     75a:	31 97       	sbiw	r30, 0x01	; 1
     75c:	32 e1       	ldi	r19, 0x12	; 18
     75e:	30 83       	st	Z, r19
     760:	31 97       	sbiw	r30, 0x01	; 1
     762:	33 e1       	ldi	r19, 0x13	; 19
     764:	30 83       	st	Z, r19
     766:	31 97       	sbiw	r30, 0x01	; 1
     768:	34 e1       	ldi	r19, 0x14	; 20
     76a:	30 83       	st	Z, r19
     76c:	31 97       	sbiw	r30, 0x01	; 1
     76e:	35 e1       	ldi	r19, 0x15	; 21
     770:	30 83       	st	Z, r19
     772:	31 97       	sbiw	r30, 0x01	; 1
     774:	36 e1       	ldi	r19, 0x16	; 22
     776:	30 83       	st	Z, r19
     778:	31 97       	sbiw	r30, 0x01	; 1
     77a:	37 e1       	ldi	r19, 0x17	; 23
     77c:	30 83       	st	Z, r19
     77e:	31 97       	sbiw	r30, 0x01	; 1
     780:	38 e1       	ldi	r19, 0x18	; 24
     782:	30 83       	st	Z, r19
     784:	31 97       	sbiw	r30, 0x01	; 1
     786:	39 e1       	ldi	r19, 0x19	; 25
     788:	30 83       	st	Z, r19
     78a:	31 97       	sbiw	r30, 0x01	; 1
     78c:	30 e2       	ldi	r19, 0x20	; 32
     78e:	30 83       	st	Z, r19
     790:	31 97       	sbiw	r30, 0x01	; 1
     792:	31 e2       	ldi	r19, 0x21	; 33
     794:	30 83       	st	Z, r19
     796:	31 97       	sbiw	r30, 0x01	; 1
     798:	20 83       	st	Z, r18
     79a:	31 97       	sbiw	r30, 0x01	; 1
     79c:	23 e2       	ldi	r18, 0x23	; 35
     79e:	20 83       	st	Z, r18
     7a0:	31 97       	sbiw	r30, 0x01	; 1
     7a2:	40 83       	st	Z, r20
     7a4:	31 97       	sbiw	r30, 0x01	; 1
     7a6:	50 83       	st	Z, r21
     7a8:	31 97       	sbiw	r30, 0x01	; 1
     7aa:	26 e2       	ldi	r18, 0x26	; 38
     7ac:	20 83       	st	Z, r18
     7ae:	31 97       	sbiw	r30, 0x01	; 1
     7b0:	27 e2       	ldi	r18, 0x27	; 39
     7b2:	20 83       	st	Z, r18
     7b4:	31 97       	sbiw	r30, 0x01	; 1
     7b6:	28 e2       	ldi	r18, 0x28	; 40
     7b8:	20 83       	st	Z, r18
     7ba:	31 97       	sbiw	r30, 0x01	; 1
     7bc:	29 e2       	ldi	r18, 0x29	; 41
     7be:	20 83       	st	Z, r18
     7c0:	31 97       	sbiw	r30, 0x01	; 1
     7c2:	20 e3       	ldi	r18, 0x30	; 48
     7c4:	20 83       	st	Z, r18
     7c6:	31 97       	sbiw	r30, 0x01	; 1
     7c8:	21 e3       	ldi	r18, 0x31	; 49
     7ca:	20 83       	st	Z, r18
     7cc:	89 97       	sbiw	r24, 0x29	; 41
     7ce:	08 95       	ret

000007d0 <xPortStartScheduler>:
     7d0:	88 ec       	ldi	r24, 0xC8	; 200
     7d2:	90 e0       	ldi	r25, 0x00	; 0
     7d4:	90 93 e9 02 	sts	0x02E9, r25	; 0x8002e9 <portTickRateHz+0x1>
     7d8:	80 93 e8 02 	sts	0x02E8, r24	; 0x8002e8 <portTickRateHz>
     7dc:	90 93 eb 02 	sts	0x02EB, r25	; 0x8002eb <ticksRemainingInSec+0x1>
     7e0:	80 93 ea 02 	sts	0x02EA, r24	; 0x8002ea <ticksRemainingInSec>
     7e4:	8d e4       	ldi	r24, 0x4D	; 77
     7e6:	87 bd       	out	0x27, r24	; 39
     7e8:	82 e0       	ldi	r24, 0x02	; 2
     7ea:	84 bd       	out	0x24, r24	; 36
     7ec:	85 e0       	ldi	r24, 0x05	; 5
     7ee:	85 bd       	out	0x25, r24	; 37
     7f0:	ee e6       	ldi	r30, 0x6E	; 110
     7f2:	f0 e0       	ldi	r31, 0x00	; 0
     7f4:	80 81       	ld	r24, Z
     7f6:	82 60       	ori	r24, 0x02	; 2
     7f8:	80 83       	st	Z, r24
     7fa:	a0 91 d6 02 	lds	r26, 0x02D6	; 0x8002d6 <pxCurrentTCB>
     7fe:	b0 91 d7 02 	lds	r27, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
     802:	cd 91       	ld	r28, X+
     804:	cd bf       	out	0x3d, r28	; 61
     806:	dd 91       	ld	r29, X+
     808:	de bf       	out	0x3e, r29	; 62
     80a:	ff 91       	pop	r31
     80c:	ef 91       	pop	r30
     80e:	df 91       	pop	r29
     810:	cf 91       	pop	r28
     812:	bf 91       	pop	r27
     814:	af 91       	pop	r26
     816:	9f 91       	pop	r25
     818:	8f 91       	pop	r24
     81a:	7f 91       	pop	r23
     81c:	6f 91       	pop	r22
     81e:	5f 91       	pop	r21
     820:	4f 91       	pop	r20
     822:	3f 91       	pop	r19
     824:	2f 91       	pop	r18
     826:	1f 91       	pop	r17
     828:	0f 91       	pop	r16
     82a:	ff 90       	pop	r15
     82c:	ef 90       	pop	r14
     82e:	df 90       	pop	r13
     830:	cf 90       	pop	r12
     832:	bf 90       	pop	r11
     834:	af 90       	pop	r10
     836:	9f 90       	pop	r9
     838:	8f 90       	pop	r8
     83a:	7f 90       	pop	r7
     83c:	6f 90       	pop	r6
     83e:	5f 90       	pop	r5
     840:	4f 90       	pop	r4
     842:	3f 90       	pop	r3
     844:	2f 90       	pop	r2
     846:	1f 90       	pop	r1
     848:	0f 90       	pop	r0
     84a:	0c be       	out	0x3c, r0	; 60
     84c:	0f 90       	pop	r0
     84e:	0b be       	out	0x3b, r0	; 59
     850:	0f 90       	pop	r0
     852:	0f be       	out	0x3f, r0	; 63
     854:	0f 90       	pop	r0
     856:	08 95       	ret
     858:	81 e0       	ldi	r24, 0x01	; 1
     85a:	08 95       	ret

0000085c <vPortYield>:
     85c:	0f 92       	push	r0
     85e:	0f b6       	in	r0, 0x3f	; 63
     860:	f8 94       	cli
     862:	0f 92       	push	r0
     864:	0b b6       	in	r0, 0x3b	; 59
     866:	0f 92       	push	r0
     868:	0c b6       	in	r0, 0x3c	; 60
     86a:	0f 92       	push	r0
     86c:	1f 92       	push	r1
     86e:	11 24       	eor	r1, r1
     870:	2f 92       	push	r2
     872:	3f 92       	push	r3
     874:	4f 92       	push	r4
     876:	5f 92       	push	r5
     878:	6f 92       	push	r6
     87a:	7f 92       	push	r7
     87c:	8f 92       	push	r8
     87e:	9f 92       	push	r9
     880:	af 92       	push	r10
     882:	bf 92       	push	r11
     884:	cf 92       	push	r12
     886:	df 92       	push	r13
     888:	ef 92       	push	r14
     88a:	ff 92       	push	r15
     88c:	0f 93       	push	r16
     88e:	1f 93       	push	r17
     890:	2f 93       	push	r18
     892:	3f 93       	push	r19
     894:	4f 93       	push	r20
     896:	5f 93       	push	r21
     898:	6f 93       	push	r22
     89a:	7f 93       	push	r23
     89c:	8f 93       	push	r24
     89e:	9f 93       	push	r25
     8a0:	af 93       	push	r26
     8a2:	bf 93       	push	r27
     8a4:	cf 93       	push	r28
     8a6:	df 93       	push	r29
     8a8:	ef 93       	push	r30
     8aa:	ff 93       	push	r31
     8ac:	a0 91 d6 02 	lds	r26, 0x02D6	; 0x8002d6 <pxCurrentTCB>
     8b0:	b0 91 d7 02 	lds	r27, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
     8b4:	0d b6       	in	r0, 0x3d	; 61
     8b6:	0d 92       	st	X+, r0
     8b8:	0e b6       	in	r0, 0x3e	; 62
     8ba:	0d 92       	st	X+, r0
     8bc:	0e 94 a1 0c 	call	0x1942	; 0x1942 <vTaskSwitchContext>
     8c0:	a0 91 d6 02 	lds	r26, 0x02D6	; 0x8002d6 <pxCurrentTCB>
     8c4:	b0 91 d7 02 	lds	r27, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
     8c8:	cd 91       	ld	r28, X+
     8ca:	cd bf       	out	0x3d, r28	; 61
     8cc:	dd 91       	ld	r29, X+
     8ce:	de bf       	out	0x3e, r29	; 62
     8d0:	ff 91       	pop	r31
     8d2:	ef 91       	pop	r30
     8d4:	df 91       	pop	r29
     8d6:	cf 91       	pop	r28
     8d8:	bf 91       	pop	r27
     8da:	af 91       	pop	r26
     8dc:	9f 91       	pop	r25
     8de:	8f 91       	pop	r24
     8e0:	7f 91       	pop	r23
     8e2:	6f 91       	pop	r22
     8e4:	5f 91       	pop	r21
     8e6:	4f 91       	pop	r20
     8e8:	3f 91       	pop	r19
     8ea:	2f 91       	pop	r18
     8ec:	1f 91       	pop	r17
     8ee:	0f 91       	pop	r16
     8f0:	ff 90       	pop	r15
     8f2:	ef 90       	pop	r14
     8f4:	df 90       	pop	r13
     8f6:	cf 90       	pop	r12
     8f8:	bf 90       	pop	r11
     8fa:	af 90       	pop	r10
     8fc:	9f 90       	pop	r9
     8fe:	8f 90       	pop	r8
     900:	7f 90       	pop	r7
     902:	6f 90       	pop	r6
     904:	5f 90       	pop	r5
     906:	4f 90       	pop	r4
     908:	3f 90       	pop	r3
     90a:	2f 90       	pop	r2
     90c:	1f 90       	pop	r1
     90e:	0f 90       	pop	r0
     910:	0c be       	out	0x3c, r0	; 60
     912:	0f 90       	pop	r0
     914:	0b be       	out	0x3b, r0	; 59
     916:	0f 90       	pop	r0
     918:	0f be       	out	0x3f, r0	; 63
     91a:	0f 90       	pop	r0
     91c:	08 95       	ret

0000091e <vPortYieldFromTick>:
     91e:	0f 92       	push	r0
     920:	0f b6       	in	r0, 0x3f	; 63
     922:	f8 94       	cli
     924:	0f 92       	push	r0
     926:	0b b6       	in	r0, 0x3b	; 59
     928:	0f 92       	push	r0
     92a:	0c b6       	in	r0, 0x3c	; 60
     92c:	0f 92       	push	r0
     92e:	1f 92       	push	r1
     930:	11 24       	eor	r1, r1
     932:	2f 92       	push	r2
     934:	3f 92       	push	r3
     936:	4f 92       	push	r4
     938:	5f 92       	push	r5
     93a:	6f 92       	push	r6
     93c:	7f 92       	push	r7
     93e:	8f 92       	push	r8
     940:	9f 92       	push	r9
     942:	af 92       	push	r10
     944:	bf 92       	push	r11
     946:	cf 92       	push	r12
     948:	df 92       	push	r13
     94a:	ef 92       	push	r14
     94c:	ff 92       	push	r15
     94e:	0f 93       	push	r16
     950:	1f 93       	push	r17
     952:	2f 93       	push	r18
     954:	3f 93       	push	r19
     956:	4f 93       	push	r20
     958:	5f 93       	push	r21
     95a:	6f 93       	push	r22
     95c:	7f 93       	push	r23
     95e:	8f 93       	push	r24
     960:	9f 93       	push	r25
     962:	af 93       	push	r26
     964:	bf 93       	push	r27
     966:	cf 93       	push	r28
     968:	df 93       	push	r29
     96a:	ef 93       	push	r30
     96c:	ff 93       	push	r31
     96e:	a0 91 d6 02 	lds	r26, 0x02D6	; 0x8002d6 <pxCurrentTCB>
     972:	b0 91 d7 02 	lds	r27, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
     976:	0d b6       	in	r0, 0x3d	; 61
     978:	0d 92       	st	X+, r0
     97a:	0e b6       	in	r0, 0x3e	; 62
     97c:	0d 92       	st	X+, r0
     97e:	13 be       	out	0x33, r1	; 51
     980:	80 91 ea 02 	lds	r24, 0x02EA	; 0x8002ea <ticksRemainingInSec>
     984:	90 91 eb 02 	lds	r25, 0x02EB	; 0x8002eb <ticksRemainingInSec+0x1>
     988:	01 97       	sbiw	r24, 0x01	; 1
     98a:	90 93 eb 02 	sts	0x02EB, r25	; 0x8002eb <ticksRemainingInSec+0x1>
     98e:	80 93 ea 02 	sts	0x02EA, r24	; 0x8002ea <ticksRemainingInSec>
     992:	89 2b       	or	r24, r25
     994:	49 f4       	brne	.+18     	; 0x9a8 <vPortYieldFromTick+0x8a>
     996:	c3 dc       	rcall	.-1658   	; 0x31e <system_tick>
     998:	80 91 e8 02 	lds	r24, 0x02E8	; 0x8002e8 <portTickRateHz>
     99c:	90 91 e9 02 	lds	r25, 0x02E9	; 0x8002e9 <portTickRateHz+0x1>
     9a0:	90 93 eb 02 	sts	0x02EB, r25	; 0x8002eb <ticksRemainingInSec+0x1>
     9a4:	80 93 ea 02 	sts	0x02EA, r24	; 0x8002ea <ticksRemainingInSec>
     9a8:	95 d6       	rcall	.+3370   	; 0x16d4 <xTaskIncrementTick>
     9aa:	81 11       	cpse	r24, r1
     9ac:	ca d7       	rcall	.+3988   	; 0x1942 <vTaskSwitchContext>
     9ae:	a0 91 d6 02 	lds	r26, 0x02D6	; 0x8002d6 <pxCurrentTCB>
     9b2:	b0 91 d7 02 	lds	r27, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
     9b6:	cd 91       	ld	r28, X+
     9b8:	cd bf       	out	0x3d, r28	; 61
     9ba:	dd 91       	ld	r29, X+
     9bc:	de bf       	out	0x3e, r29	; 62
     9be:	ff 91       	pop	r31
     9c0:	ef 91       	pop	r30
     9c2:	df 91       	pop	r29
     9c4:	cf 91       	pop	r28
     9c6:	bf 91       	pop	r27
     9c8:	af 91       	pop	r26
     9ca:	9f 91       	pop	r25
     9cc:	8f 91       	pop	r24
     9ce:	7f 91       	pop	r23
     9d0:	6f 91       	pop	r22
     9d2:	5f 91       	pop	r21
     9d4:	4f 91       	pop	r20
     9d6:	3f 91       	pop	r19
     9d8:	2f 91       	pop	r18
     9da:	1f 91       	pop	r17
     9dc:	0f 91       	pop	r16
     9de:	ff 90       	pop	r15
     9e0:	ef 90       	pop	r14
     9e2:	df 90       	pop	r13
     9e4:	cf 90       	pop	r12
     9e6:	bf 90       	pop	r11
     9e8:	af 90       	pop	r10
     9ea:	9f 90       	pop	r9
     9ec:	8f 90       	pop	r8
     9ee:	7f 90       	pop	r7
     9f0:	6f 90       	pop	r6
     9f2:	5f 90       	pop	r5
     9f4:	4f 90       	pop	r4
     9f6:	3f 90       	pop	r3
     9f8:	2f 90       	pop	r2
     9fa:	1f 90       	pop	r1
     9fc:	0f 90       	pop	r0
     9fe:	0c be       	out	0x3c, r0	; 60
     a00:	0f 90       	pop	r0
     a02:	0b be       	out	0x3b, r0	; 59
     a04:	0f 90       	pop	r0
     a06:	0f be       	out	0x3f, r0	; 63
     a08:	0f 90       	pop	r0
     a0a:	08 95       	ret

00000a0c <__vector_21>:
     a0c:	88 df       	rcall	.-240    	; 0x91e <vPortYieldFromTick>
     a0e:	18 95       	reti

00000a10 <prvIsQueueEmpty>:
     a10:	0f b6       	in	r0, 0x3f	; 63
     a12:	f8 94       	cli
     a14:	0f 92       	push	r0
     a16:	fc 01       	movw	r30, r24
     a18:	92 8d       	ldd	r25, Z+26	; 0x1a
     a1a:	0f 90       	pop	r0
     a1c:	0f be       	out	0x3f, r0	; 63
     a1e:	81 e0       	ldi	r24, 0x01	; 1
     a20:	91 11       	cpse	r25, r1
     a22:	80 e0       	ldi	r24, 0x00	; 0
     a24:	08 95       	ret

00000a26 <prvCopyDataToQueue>:
     a26:	0f 93       	push	r16
     a28:	1f 93       	push	r17
     a2a:	cf 93       	push	r28
     a2c:	df 93       	push	r29
     a2e:	ec 01       	movw	r28, r24
     a30:	04 2f       	mov	r16, r20
     a32:	1a 8d       	ldd	r17, Y+26	; 0x1a
     a34:	4c 8d       	ldd	r20, Y+28	; 0x1c
     a36:	41 11       	cpse	r20, r1
     a38:	0c c0       	rjmp	.+24     	; 0xa52 <prvCopyDataToQueue+0x2c>
     a3a:	88 81       	ld	r24, Y
     a3c:	99 81       	ldd	r25, Y+1	; 0x01
     a3e:	89 2b       	or	r24, r25
     a40:	09 f0       	breq	.+2      	; 0xa44 <prvCopyDataToQueue+0x1e>
     a42:	42 c0       	rjmp	.+132    	; 0xac8 <prvCopyDataToQueue+0xa2>
     a44:	8a 81       	ldd	r24, Y+2	; 0x02
     a46:	9b 81       	ldd	r25, Y+3	; 0x03
     a48:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <xTaskPriorityDisinherit>
     a4c:	1b 82       	std	Y+3, r1	; 0x03
     a4e:	1a 82       	std	Y+2, r1	; 0x02
     a50:	42 c0       	rjmp	.+132    	; 0xad6 <prvCopyDataToQueue+0xb0>
     a52:	01 11       	cpse	r16, r1
     a54:	17 c0       	rjmp	.+46     	; 0xa84 <prvCopyDataToQueue+0x5e>
     a56:	50 e0       	ldi	r21, 0x00	; 0
     a58:	8c 81       	ldd	r24, Y+4	; 0x04
     a5a:	9d 81       	ldd	r25, Y+5	; 0x05
     a5c:	0e 94 c3 13 	call	0x2786	; 0x2786 <memcpy>
     a60:	2c 8d       	ldd	r18, Y+28	; 0x1c
     a62:	8c 81       	ldd	r24, Y+4	; 0x04
     a64:	9d 81       	ldd	r25, Y+5	; 0x05
     a66:	82 0f       	add	r24, r18
     a68:	91 1d       	adc	r25, r1
     a6a:	9d 83       	std	Y+5, r25	; 0x05
     a6c:	8c 83       	std	Y+4, r24	; 0x04
     a6e:	2a 81       	ldd	r18, Y+2	; 0x02
     a70:	3b 81       	ldd	r19, Y+3	; 0x03
     a72:	82 17       	cp	r24, r18
     a74:	93 07       	cpc	r25, r19
     a76:	50 f1       	brcs	.+84     	; 0xacc <prvCopyDataToQueue+0xa6>
     a78:	88 81       	ld	r24, Y
     a7a:	99 81       	ldd	r25, Y+1	; 0x01
     a7c:	9d 83       	std	Y+5, r25	; 0x05
     a7e:	8c 83       	std	Y+4, r24	; 0x04
     a80:	80 e0       	ldi	r24, 0x00	; 0
     a82:	29 c0       	rjmp	.+82     	; 0xad6 <prvCopyDataToQueue+0xb0>
     a84:	50 e0       	ldi	r21, 0x00	; 0
     a86:	8e 81       	ldd	r24, Y+6	; 0x06
     a88:	9f 81       	ldd	r25, Y+7	; 0x07
     a8a:	0e 94 c3 13 	call	0x2786	; 0x2786 <memcpy>
     a8e:	8c 8d       	ldd	r24, Y+28	; 0x1c
     a90:	90 e0       	ldi	r25, 0x00	; 0
     a92:	91 95       	neg	r25
     a94:	81 95       	neg	r24
     a96:	91 09       	sbc	r25, r1
     a98:	2e 81       	ldd	r18, Y+6	; 0x06
     a9a:	3f 81       	ldd	r19, Y+7	; 0x07
     a9c:	28 0f       	add	r18, r24
     a9e:	39 1f       	adc	r19, r25
     aa0:	3f 83       	std	Y+7, r19	; 0x07
     aa2:	2e 83       	std	Y+6, r18	; 0x06
     aa4:	48 81       	ld	r20, Y
     aa6:	59 81       	ldd	r21, Y+1	; 0x01
     aa8:	24 17       	cp	r18, r20
     aaa:	35 07       	cpc	r19, r21
     aac:	30 f4       	brcc	.+12     	; 0xaba <prvCopyDataToQueue+0x94>
     aae:	2a 81       	ldd	r18, Y+2	; 0x02
     ab0:	3b 81       	ldd	r19, Y+3	; 0x03
     ab2:	82 0f       	add	r24, r18
     ab4:	93 1f       	adc	r25, r19
     ab6:	9f 83       	std	Y+7, r25	; 0x07
     ab8:	8e 83       	std	Y+6, r24	; 0x06
     aba:	02 30       	cpi	r16, 0x02	; 2
     abc:	49 f4       	brne	.+18     	; 0xad0 <prvCopyDataToQueue+0xaa>
     abe:	11 23       	and	r17, r17
     ac0:	49 f0       	breq	.+18     	; 0xad4 <prvCopyDataToQueue+0xae>
     ac2:	11 50       	subi	r17, 0x01	; 1
     ac4:	80 e0       	ldi	r24, 0x00	; 0
     ac6:	07 c0       	rjmp	.+14     	; 0xad6 <prvCopyDataToQueue+0xb0>
     ac8:	80 e0       	ldi	r24, 0x00	; 0
     aca:	05 c0       	rjmp	.+10     	; 0xad6 <prvCopyDataToQueue+0xb0>
     acc:	80 e0       	ldi	r24, 0x00	; 0
     ace:	03 c0       	rjmp	.+6      	; 0xad6 <prvCopyDataToQueue+0xb0>
     ad0:	80 e0       	ldi	r24, 0x00	; 0
     ad2:	01 c0       	rjmp	.+2      	; 0xad6 <prvCopyDataToQueue+0xb0>
     ad4:	80 e0       	ldi	r24, 0x00	; 0
     ad6:	1f 5f       	subi	r17, 0xFF	; 255
     ad8:	1a 8f       	std	Y+26, r17	; 0x1a
     ada:	df 91       	pop	r29
     adc:	cf 91       	pop	r28
     ade:	1f 91       	pop	r17
     ae0:	0f 91       	pop	r16
     ae2:	08 95       	ret

00000ae4 <prvCopyDataFromQueue>:
     ae4:	fc 01       	movw	r30, r24
     ae6:	44 8d       	ldd	r20, Z+28	; 0x1c
     ae8:	44 23       	and	r20, r20
     aea:	a9 f0       	breq	.+42     	; 0xb16 <prvCopyDataFromQueue+0x32>
     aec:	50 e0       	ldi	r21, 0x00	; 0
     aee:	26 81       	ldd	r18, Z+6	; 0x06
     af0:	37 81       	ldd	r19, Z+7	; 0x07
     af2:	24 0f       	add	r18, r20
     af4:	35 1f       	adc	r19, r21
     af6:	37 83       	std	Z+7, r19	; 0x07
     af8:	26 83       	std	Z+6, r18	; 0x06
     afa:	82 81       	ldd	r24, Z+2	; 0x02
     afc:	93 81       	ldd	r25, Z+3	; 0x03
     afe:	28 17       	cp	r18, r24
     b00:	39 07       	cpc	r19, r25
     b02:	20 f0       	brcs	.+8      	; 0xb0c <prvCopyDataFromQueue+0x28>
     b04:	80 81       	ld	r24, Z
     b06:	91 81       	ldd	r25, Z+1	; 0x01
     b08:	97 83       	std	Z+7, r25	; 0x07
     b0a:	86 83       	std	Z+6, r24	; 0x06
     b0c:	cb 01       	movw	r24, r22
     b0e:	66 81       	ldd	r22, Z+6	; 0x06
     b10:	77 81       	ldd	r23, Z+7	; 0x07
     b12:	0c 94 c3 13 	jmp	0x2786	; 0x2786 <memcpy>
     b16:	08 95       	ret

00000b18 <prvUnlockQueue>:
     b18:	ef 92       	push	r14
     b1a:	ff 92       	push	r15
     b1c:	0f 93       	push	r16
     b1e:	1f 93       	push	r17
     b20:	cf 93       	push	r28
     b22:	8c 01       	movw	r16, r24
     b24:	0f b6       	in	r0, 0x3f	; 63
     b26:	f8 94       	cli
     b28:	0f 92       	push	r0
     b2a:	fc 01       	movw	r30, r24
     b2c:	c6 8d       	ldd	r28, Z+30	; 0x1e
     b2e:	1c 16       	cp	r1, r28
     b30:	a4 f4       	brge	.+40     	; 0xb5a <prvUnlockQueue+0x42>
     b32:	81 89       	ldd	r24, Z+17	; 0x11
     b34:	81 11       	cpse	r24, r1
     b36:	06 c0       	rjmp	.+12     	; 0xb44 <prvUnlockQueue+0x2c>
     b38:	10 c0       	rjmp	.+32     	; 0xb5a <prvUnlockQueue+0x42>
     b3a:	f8 01       	movw	r30, r16
     b3c:	81 89       	ldd	r24, Z+17	; 0x11
     b3e:	81 11       	cpse	r24, r1
     b40:	05 c0       	rjmp	.+10     	; 0xb4c <prvUnlockQueue+0x34>
     b42:	0b c0       	rjmp	.+22     	; 0xb5a <prvUnlockQueue+0x42>
     b44:	78 01       	movw	r14, r16
     b46:	f1 e1       	ldi	r31, 0x11	; 17
     b48:	ef 0e       	add	r14, r31
     b4a:	f1 1c       	adc	r15, r1
     b4c:	c7 01       	movw	r24, r14
     b4e:	8b d7       	rcall	.+3862   	; 0x1a66 <xTaskRemoveFromEventList>
     b50:	81 11       	cpse	r24, r1
     b52:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <vTaskMissedYield>
     b56:	c1 50       	subi	r28, 0x01	; 1
     b58:	81 f7       	brne	.-32     	; 0xb3a <prvUnlockQueue+0x22>
     b5a:	8f ef       	ldi	r24, 0xFF	; 255
     b5c:	f8 01       	movw	r30, r16
     b5e:	86 8f       	std	Z+30, r24	; 0x1e
     b60:	0f 90       	pop	r0
     b62:	0f be       	out	0x3f, r0	; 63
     b64:	0f b6       	in	r0, 0x3f	; 63
     b66:	f8 94       	cli
     b68:	0f 92       	push	r0
     b6a:	c5 8d       	ldd	r28, Z+29	; 0x1d
     b6c:	1c 16       	cp	r1, r28
     b6e:	9c f4       	brge	.+38     	; 0xb96 <prvUnlockQueue+0x7e>
     b70:	80 85       	ldd	r24, Z+8	; 0x08
     b72:	81 11       	cpse	r24, r1
     b74:	06 c0       	rjmp	.+12     	; 0xb82 <prvUnlockQueue+0x6a>
     b76:	0f c0       	rjmp	.+30     	; 0xb96 <prvUnlockQueue+0x7e>
     b78:	f8 01       	movw	r30, r16
     b7a:	80 85       	ldd	r24, Z+8	; 0x08
     b7c:	81 11       	cpse	r24, r1
     b7e:	05 c0       	rjmp	.+10     	; 0xb8a <prvUnlockQueue+0x72>
     b80:	0a c0       	rjmp	.+20     	; 0xb96 <prvUnlockQueue+0x7e>
     b82:	78 01       	movw	r14, r16
     b84:	f8 e0       	ldi	r31, 0x08	; 8
     b86:	ef 0e       	add	r14, r31
     b88:	f1 1c       	adc	r15, r1
     b8a:	c7 01       	movw	r24, r14
     b8c:	6c d7       	rcall	.+3800   	; 0x1a66 <xTaskRemoveFromEventList>
     b8e:	81 11       	cpse	r24, r1
     b90:	f5 d7       	rcall	.+4074   	; 0x1b7c <vTaskMissedYield>
     b92:	c1 50       	subi	r28, 0x01	; 1
     b94:	89 f7       	brne	.-30     	; 0xb78 <prvUnlockQueue+0x60>
     b96:	8f ef       	ldi	r24, 0xFF	; 255
     b98:	f8 01       	movw	r30, r16
     b9a:	85 8f       	std	Z+29, r24	; 0x1d
     b9c:	0f 90       	pop	r0
     b9e:	0f be       	out	0x3f, r0	; 63
     ba0:	cf 91       	pop	r28
     ba2:	1f 91       	pop	r17
     ba4:	0f 91       	pop	r16
     ba6:	ff 90       	pop	r15
     ba8:	ef 90       	pop	r14
     baa:	08 95       	ret

00000bac <xQueueGenericReset>:
     bac:	cf 93       	push	r28
     bae:	df 93       	push	r29
     bb0:	ec 01       	movw	r28, r24
     bb2:	0f b6       	in	r0, 0x3f	; 63
     bb4:	f8 94       	cli
     bb6:	0f 92       	push	r0
     bb8:	48 81       	ld	r20, Y
     bba:	59 81       	ldd	r21, Y+1	; 0x01
     bbc:	2c 8d       	ldd	r18, Y+28	; 0x1c
     bbe:	30 e0       	ldi	r19, 0x00	; 0
     bc0:	7b 8d       	ldd	r23, Y+27	; 0x1b
     bc2:	72 9f       	mul	r23, r18
     bc4:	c0 01       	movw	r24, r0
     bc6:	73 9f       	mul	r23, r19
     bc8:	90 0d       	add	r25, r0
     bca:	11 24       	eor	r1, r1
     bcc:	fa 01       	movw	r30, r20
     bce:	e8 0f       	add	r30, r24
     bd0:	f9 1f       	adc	r31, r25
     bd2:	fb 83       	std	Y+3, r31	; 0x03
     bd4:	ea 83       	std	Y+2, r30	; 0x02
     bd6:	1a 8e       	std	Y+26, r1	; 0x1a
     bd8:	5d 83       	std	Y+5, r21	; 0x05
     bda:	4c 83       	std	Y+4, r20	; 0x04
     bdc:	82 1b       	sub	r24, r18
     bde:	93 0b       	sbc	r25, r19
     be0:	84 0f       	add	r24, r20
     be2:	95 1f       	adc	r25, r21
     be4:	9f 83       	std	Y+7, r25	; 0x07
     be6:	8e 83       	std	Y+6, r24	; 0x06
     be8:	8f ef       	ldi	r24, 0xFF	; 255
     bea:	8d 8f       	std	Y+29, r24	; 0x1d
     bec:	8e 8f       	std	Y+30, r24	; 0x1e
     bee:	61 11       	cpse	r22, r1
     bf0:	0a c0       	rjmp	.+20     	; 0xc06 <xQueueGenericReset+0x5a>
     bf2:	88 85       	ldd	r24, Y+8	; 0x08
     bf4:	88 23       	and	r24, r24
     bf6:	69 f0       	breq	.+26     	; 0xc12 <xQueueGenericReset+0x66>
     bf8:	ce 01       	movw	r24, r28
     bfa:	08 96       	adiw	r24, 0x08	; 8
     bfc:	34 d7       	rcall	.+3688   	; 0x1a66 <xTaskRemoveFromEventList>
     bfe:	88 23       	and	r24, r24
     c00:	41 f0       	breq	.+16     	; 0xc12 <xQueueGenericReset+0x66>
     c02:	2c de       	rcall	.-936    	; 0x85c <vPortYield>
     c04:	06 c0       	rjmp	.+12     	; 0xc12 <xQueueGenericReset+0x66>
     c06:	ce 01       	movw	r24, r28
     c08:	08 96       	adiw	r24, 0x08	; 8
     c0a:	e6 dc       	rcall	.-1588   	; 0x5d8 <vListInitialise>
     c0c:	ce 01       	movw	r24, r28
     c0e:	41 96       	adiw	r24, 0x11	; 17
     c10:	e3 dc       	rcall	.-1594   	; 0x5d8 <vListInitialise>
     c12:	0f 90       	pop	r0
     c14:	0f be       	out	0x3f, r0	; 63
     c16:	81 e0       	ldi	r24, 0x01	; 1
     c18:	df 91       	pop	r29
     c1a:	cf 91       	pop	r28
     c1c:	08 95       	ret

00000c1e <xQueueGenericCreate>:
     c1e:	0f 93       	push	r16
     c20:	1f 93       	push	r17
     c22:	cf 93       	push	r28
     c24:	df 93       	push	r29
     c26:	08 2f       	mov	r16, r24
     c28:	16 2f       	mov	r17, r22
     c2a:	66 23       	and	r22, r22
     c2c:	b1 f0       	breq	.+44     	; 0xc5a <xQueueGenericCreate+0x3c>
     c2e:	86 9f       	mul	r24, r22
     c30:	c0 01       	movw	r24, r0
     c32:	11 24       	eor	r1, r1
     c34:	4f 96       	adiw	r24, 0x1f	; 31
     c36:	8f db       	rcall	.-2274   	; 0x356 <pvPortMalloc>
     c38:	ec 01       	movw	r28, r24
     c3a:	00 97       	sbiw	r24, 0x00	; 0
     c3c:	39 f4       	brne	.+14     	; 0xc4c <xQueueGenericCreate+0x2e>
     c3e:	13 c0       	rjmp	.+38     	; 0xc66 <xQueueGenericCreate+0x48>
     c40:	0b 8f       	std	Y+27, r16	; 0x1b
     c42:	1c 8f       	std	Y+28, r17	; 0x1c
     c44:	61 e0       	ldi	r22, 0x01	; 1
     c46:	ce 01       	movw	r24, r28
     c48:	b1 df       	rcall	.-158    	; 0xbac <xQueueGenericReset>
     c4a:	0d c0       	rjmp	.+26     	; 0xc66 <xQueueGenericCreate+0x48>
     c4c:	4f 96       	adiw	r24, 0x1f	; 31
     c4e:	99 83       	std	Y+1, r25	; 0x01
     c50:	88 83       	st	Y, r24
     c52:	f6 cf       	rjmp	.-20     	; 0xc40 <xQueueGenericCreate+0x22>
     c54:	d9 83       	std	Y+1, r29	; 0x01
     c56:	c8 83       	st	Y, r28
     c58:	f3 cf       	rjmp	.-26     	; 0xc40 <xQueueGenericCreate+0x22>
     c5a:	8f e1       	ldi	r24, 0x1F	; 31
     c5c:	90 e0       	ldi	r25, 0x00	; 0
     c5e:	7b db       	rcall	.-2314   	; 0x356 <pvPortMalloc>
     c60:	ec 01       	movw	r28, r24
     c62:	89 2b       	or	r24, r25
     c64:	b9 f7       	brne	.-18     	; 0xc54 <xQueueGenericCreate+0x36>
     c66:	ce 01       	movw	r24, r28
     c68:	df 91       	pop	r29
     c6a:	cf 91       	pop	r28
     c6c:	1f 91       	pop	r17
     c6e:	0f 91       	pop	r16
     c70:	08 95       	ret

00000c72 <xQueueGenericSend>:
     c72:	9f 92       	push	r9
     c74:	af 92       	push	r10
     c76:	bf 92       	push	r11
     c78:	cf 92       	push	r12
     c7a:	df 92       	push	r13
     c7c:	ef 92       	push	r14
     c7e:	ff 92       	push	r15
     c80:	0f 93       	push	r16
     c82:	1f 93       	push	r17
     c84:	cf 93       	push	r28
     c86:	df 93       	push	r29
     c88:	00 d0       	rcall	.+0      	; 0xc8a <xQueueGenericSend+0x18>
     c8a:	1f 92       	push	r1
     c8c:	1f 92       	push	r1
     c8e:	cd b7       	in	r28, 0x3d	; 61
     c90:	de b7       	in	r29, 0x3e	; 62
     c92:	8c 01       	movw	r16, r24
     c94:	6b 01       	movw	r12, r22
     c96:	5d 83       	std	Y+5, r21	; 0x05
     c98:	4c 83       	std	Y+4, r20	; 0x04
     c9a:	a2 2e       	mov	r10, r18
     c9c:	b1 2c       	mov	r11, r1
     c9e:	99 24       	eor	r9, r9
     ca0:	93 94       	inc	r9
     ca2:	7c 01       	movw	r14, r24
     ca4:	88 e0       	ldi	r24, 0x08	; 8
     ca6:	e8 0e       	add	r14, r24
     ca8:	f1 1c       	adc	r15, r1
     caa:	0f b6       	in	r0, 0x3f	; 63
     cac:	f8 94       	cli
     cae:	0f 92       	push	r0
     cb0:	f8 01       	movw	r30, r16
     cb2:	92 8d       	ldd	r25, Z+26	; 0x1a
     cb4:	83 8d       	ldd	r24, Z+27	; 0x1b
     cb6:	98 17       	cp	r25, r24
     cb8:	18 f0       	brcs	.+6      	; 0xcc0 <xQueueGenericSend+0x4e>
     cba:	f2 e0       	ldi	r31, 0x02	; 2
     cbc:	af 12       	cpse	r10, r31
     cbe:	15 c0       	rjmp	.+42     	; 0xcea <xQueueGenericSend+0x78>
     cc0:	4a 2d       	mov	r20, r10
     cc2:	b6 01       	movw	r22, r12
     cc4:	c8 01       	movw	r24, r16
     cc6:	af de       	rcall	.-674    	; 0xa26 <prvCopyDataToQueue>
     cc8:	f8 01       	movw	r30, r16
     cca:	91 89       	ldd	r25, Z+17	; 0x11
     ccc:	99 23       	and	r25, r25
     cce:	39 f0       	breq	.+14     	; 0xcde <xQueueGenericSend+0x6c>
     cd0:	c8 01       	movw	r24, r16
     cd2:	41 96       	adiw	r24, 0x11	; 17
     cd4:	c8 d6       	rcall	.+3472   	; 0x1a66 <xTaskRemoveFromEventList>
     cd6:	88 23       	and	r24, r24
     cd8:	21 f0       	breq	.+8      	; 0xce2 <xQueueGenericSend+0x70>
     cda:	c0 dd       	rcall	.-1152   	; 0x85c <vPortYield>
     cdc:	02 c0       	rjmp	.+4      	; 0xce2 <xQueueGenericSend+0x70>
     cde:	81 11       	cpse	r24, r1
     ce0:	bd dd       	rcall	.-1158   	; 0x85c <vPortYield>
     ce2:	0f 90       	pop	r0
     ce4:	0f be       	out	0x3f, r0	; 63
     ce6:	81 e0       	ldi	r24, 0x01	; 1
     ce8:	45 c0       	rjmp	.+138    	; 0xd74 <xQueueGenericSend+0x102>
     cea:	8c 81       	ldd	r24, Y+4	; 0x04
     cec:	9d 81       	ldd	r25, Y+5	; 0x05
     cee:	89 2b       	or	r24, r25
     cf0:	21 f4       	brne	.+8      	; 0xcfa <xQueueGenericSend+0x88>
     cf2:	0f 90       	pop	r0
     cf4:	0f be       	out	0x3f, r0	; 63
     cf6:	80 e0       	ldi	r24, 0x00	; 0
     cf8:	3d c0       	rjmp	.+122    	; 0xd74 <xQueueGenericSend+0x102>
     cfa:	b1 10       	cpse	r11, r1
     cfc:	04 c0       	rjmp	.+8      	; 0xd06 <xQueueGenericSend+0x94>
     cfe:	ce 01       	movw	r24, r28
     d00:	01 96       	adiw	r24, 0x01	; 1
     d02:	f9 d6       	rcall	.+3570   	; 0x1af6 <vTaskSetTimeOutState>
     d04:	b9 2c       	mov	r11, r9
     d06:	0f 90       	pop	r0
     d08:	0f be       	out	0x3f, r0	; 63
     d0a:	de d4       	rcall	.+2492   	; 0x16c8 <vTaskSuspendAll>
     d0c:	0f b6       	in	r0, 0x3f	; 63
     d0e:	f8 94       	cli
     d10:	0f 92       	push	r0
     d12:	f8 01       	movw	r30, r16
     d14:	85 8d       	ldd	r24, Z+29	; 0x1d
     d16:	8f 3f       	cpi	r24, 0xFF	; 255
     d18:	09 f4       	brne	.+2      	; 0xd1c <xQueueGenericSend+0xaa>
     d1a:	15 8e       	std	Z+29, r1	; 0x1d
     d1c:	f8 01       	movw	r30, r16
     d1e:	86 8d       	ldd	r24, Z+30	; 0x1e
     d20:	8f 3f       	cpi	r24, 0xFF	; 255
     d22:	09 f4       	brne	.+2      	; 0xd26 <xQueueGenericSend+0xb4>
     d24:	16 8e       	std	Z+30, r1	; 0x1e
     d26:	0f 90       	pop	r0
     d28:	0f be       	out	0x3f, r0	; 63
     d2a:	be 01       	movw	r22, r28
     d2c:	6c 5f       	subi	r22, 0xFC	; 252
     d2e:	7f 4f       	sbci	r23, 0xFF	; 255
     d30:	ce 01       	movw	r24, r28
     d32:	01 96       	adiw	r24, 0x01	; 1
     d34:	eb d6       	rcall	.+3542   	; 0x1b0c <xTaskCheckForTimeOut>
     d36:	81 11       	cpse	r24, r1
     d38:	19 c0       	rjmp	.+50     	; 0xd6c <xQueueGenericSend+0xfa>
     d3a:	0f b6       	in	r0, 0x3f	; 63
     d3c:	f8 94       	cli
     d3e:	0f 92       	push	r0
     d40:	f8 01       	movw	r30, r16
     d42:	92 8d       	ldd	r25, Z+26	; 0x1a
     d44:	83 8d       	ldd	r24, Z+27	; 0x1b
     d46:	0f 90       	pop	r0
     d48:	0f be       	out	0x3f, r0	; 63
     d4a:	98 13       	cpse	r25, r24
     d4c:	0b c0       	rjmp	.+22     	; 0xd64 <xQueueGenericSend+0xf2>
     d4e:	6c 81       	ldd	r22, Y+4	; 0x04
     d50:	7d 81       	ldd	r23, Y+5	; 0x05
     d52:	c7 01       	movw	r24, r14
     d54:	77 d6       	rcall	.+3310   	; 0x1a44 <vTaskPlaceOnEventList>
     d56:	c8 01       	movw	r24, r16
     d58:	df de       	rcall	.-578    	; 0xb18 <prvUnlockQueue>
     d5a:	76 d5       	rcall	.+2796   	; 0x1848 <xTaskResumeAll>
     d5c:	81 11       	cpse	r24, r1
     d5e:	a5 cf       	rjmp	.-182    	; 0xcaa <xQueueGenericSend+0x38>
     d60:	7d dd       	rcall	.-1286   	; 0x85c <vPortYield>
     d62:	a3 cf       	rjmp	.-186    	; 0xcaa <xQueueGenericSend+0x38>
     d64:	c8 01       	movw	r24, r16
     d66:	d8 de       	rcall	.-592    	; 0xb18 <prvUnlockQueue>
     d68:	6f d5       	rcall	.+2782   	; 0x1848 <xTaskResumeAll>
     d6a:	9f cf       	rjmp	.-194    	; 0xcaa <xQueueGenericSend+0x38>
     d6c:	c8 01       	movw	r24, r16
     d6e:	d4 de       	rcall	.-600    	; 0xb18 <prvUnlockQueue>
     d70:	6b d5       	rcall	.+2774   	; 0x1848 <xTaskResumeAll>
     d72:	80 e0       	ldi	r24, 0x00	; 0
     d74:	0f 90       	pop	r0
     d76:	0f 90       	pop	r0
     d78:	0f 90       	pop	r0
     d7a:	0f 90       	pop	r0
     d7c:	0f 90       	pop	r0
     d7e:	df 91       	pop	r29
     d80:	cf 91       	pop	r28
     d82:	1f 91       	pop	r17
     d84:	0f 91       	pop	r16
     d86:	ff 90       	pop	r15
     d88:	ef 90       	pop	r14
     d8a:	df 90       	pop	r13
     d8c:	cf 90       	pop	r12
     d8e:	bf 90       	pop	r11
     d90:	af 90       	pop	r10
     d92:	9f 90       	pop	r9
     d94:	08 95       	ret

00000d96 <xQueueGenericReceive>:
     d96:	8f 92       	push	r8
     d98:	9f 92       	push	r9
     d9a:	af 92       	push	r10
     d9c:	bf 92       	push	r11
     d9e:	cf 92       	push	r12
     da0:	df 92       	push	r13
     da2:	ef 92       	push	r14
     da4:	ff 92       	push	r15
     da6:	0f 93       	push	r16
     da8:	1f 93       	push	r17
     daa:	cf 93       	push	r28
     dac:	df 93       	push	r29
     dae:	00 d0       	rcall	.+0      	; 0xdb0 <xQueueGenericReceive+0x1a>
     db0:	1f 92       	push	r1
     db2:	1f 92       	push	r1
     db4:	cd b7       	in	r28, 0x3d	; 61
     db6:	de b7       	in	r29, 0x3e	; 62
     db8:	8c 01       	movw	r16, r24
     dba:	5b 01       	movw	r10, r22
     dbc:	5d 83       	std	Y+5, r21	; 0x05
     dbe:	4c 83       	std	Y+4, r20	; 0x04
     dc0:	82 2e       	mov	r8, r18
     dc2:	e1 2c       	mov	r14, r1
     dc4:	99 24       	eor	r9, r9
     dc6:	93 94       	inc	r9
     dc8:	6c 01       	movw	r12, r24
     dca:	81 e1       	ldi	r24, 0x11	; 17
     dcc:	c8 0e       	add	r12, r24
     dce:	d1 1c       	adc	r13, r1
     dd0:	0f b6       	in	r0, 0x3f	; 63
     dd2:	f8 94       	cli
     dd4:	0f 92       	push	r0
     dd6:	f8 01       	movw	r30, r16
     dd8:	f2 8c       	ldd	r15, Z+26	; 0x1a
     dda:	ff 20       	and	r15, r15
     ddc:	61 f1       	breq	.+88     	; 0xe36 <xQueueGenericReceive+0xa0>
     dde:	c6 80       	ldd	r12, Z+6	; 0x06
     de0:	d7 80       	ldd	r13, Z+7	; 0x07
     de2:	b5 01       	movw	r22, r10
     de4:	c8 01       	movw	r24, r16
     de6:	7e de       	rcall	.-772    	; 0xae4 <prvCopyDataFromQueue>
     de8:	81 10       	cpse	r8, r1
     dea:	16 c0       	rjmp	.+44     	; 0xe18 <xQueueGenericReceive+0x82>
     dec:	fa 94       	dec	r15
     dee:	f8 01       	movw	r30, r16
     df0:	f2 8e       	std	Z+26, r15	; 0x1a
     df2:	80 81       	ld	r24, Z
     df4:	91 81       	ldd	r25, Z+1	; 0x01
     df6:	89 2b       	or	r24, r25
     df8:	21 f4       	brne	.+8      	; 0xe02 <xQueueGenericReceive+0x6c>
     dfa:	66 d7       	rcall	.+3788   	; 0x1cc8 <pvTaskIncrementMutexHeldCount>
     dfc:	f8 01       	movw	r30, r16
     dfe:	93 83       	std	Z+3, r25	; 0x03
     e00:	82 83       	std	Z+2, r24	; 0x02
     e02:	f8 01       	movw	r30, r16
     e04:	80 85       	ldd	r24, Z+8	; 0x08
     e06:	88 23       	and	r24, r24
     e08:	91 f0       	breq	.+36     	; 0xe2e <xQueueGenericReceive+0x98>
     e0a:	c8 01       	movw	r24, r16
     e0c:	08 96       	adiw	r24, 0x08	; 8
     e0e:	2b d6       	rcall	.+3158   	; 0x1a66 <xTaskRemoveFromEventList>
     e10:	88 23       	and	r24, r24
     e12:	69 f0       	breq	.+26     	; 0xe2e <xQueueGenericReceive+0x98>
     e14:	23 dd       	rcall	.-1466   	; 0x85c <vPortYield>
     e16:	0b c0       	rjmp	.+22     	; 0xe2e <xQueueGenericReceive+0x98>
     e18:	f8 01       	movw	r30, r16
     e1a:	d7 82       	std	Z+7, r13	; 0x07
     e1c:	c6 82       	std	Z+6, r12	; 0x06
     e1e:	81 89       	ldd	r24, Z+17	; 0x11
     e20:	88 23       	and	r24, r24
     e22:	29 f0       	breq	.+10     	; 0xe2e <xQueueGenericReceive+0x98>
     e24:	c8 01       	movw	r24, r16
     e26:	41 96       	adiw	r24, 0x11	; 17
     e28:	1e d6       	rcall	.+3132   	; 0x1a66 <xTaskRemoveFromEventList>
     e2a:	81 11       	cpse	r24, r1
     e2c:	17 dd       	rcall	.-1490   	; 0x85c <vPortYield>
     e2e:	0f 90       	pop	r0
     e30:	0f be       	out	0x3f, r0	; 63
     e32:	81 e0       	ldi	r24, 0x01	; 1
     e34:	51 c0       	rjmp	.+162    	; 0xed8 <xQueueGenericReceive+0x142>
     e36:	8c 81       	ldd	r24, Y+4	; 0x04
     e38:	9d 81       	ldd	r25, Y+5	; 0x05
     e3a:	89 2b       	or	r24, r25
     e3c:	21 f4       	brne	.+8      	; 0xe46 <xQueueGenericReceive+0xb0>
     e3e:	0f 90       	pop	r0
     e40:	0f be       	out	0x3f, r0	; 63
     e42:	80 e0       	ldi	r24, 0x00	; 0
     e44:	49 c0       	rjmp	.+146    	; 0xed8 <xQueueGenericReceive+0x142>
     e46:	e1 10       	cpse	r14, r1
     e48:	04 c0       	rjmp	.+8      	; 0xe52 <xQueueGenericReceive+0xbc>
     e4a:	ce 01       	movw	r24, r28
     e4c:	01 96       	adiw	r24, 0x01	; 1
     e4e:	53 d6       	rcall	.+3238   	; 0x1af6 <vTaskSetTimeOutState>
     e50:	e9 2c       	mov	r14, r9
     e52:	0f 90       	pop	r0
     e54:	0f be       	out	0x3f, r0	; 63
     e56:	38 d4       	rcall	.+2160   	; 0x16c8 <vTaskSuspendAll>
     e58:	0f b6       	in	r0, 0x3f	; 63
     e5a:	f8 94       	cli
     e5c:	0f 92       	push	r0
     e5e:	f8 01       	movw	r30, r16
     e60:	85 8d       	ldd	r24, Z+29	; 0x1d
     e62:	8f 3f       	cpi	r24, 0xFF	; 255
     e64:	09 f4       	brne	.+2      	; 0xe68 <xQueueGenericReceive+0xd2>
     e66:	15 8e       	std	Z+29, r1	; 0x1d
     e68:	f8 01       	movw	r30, r16
     e6a:	86 8d       	ldd	r24, Z+30	; 0x1e
     e6c:	8f 3f       	cpi	r24, 0xFF	; 255
     e6e:	09 f4       	brne	.+2      	; 0xe72 <xQueueGenericReceive+0xdc>
     e70:	16 8e       	std	Z+30, r1	; 0x1e
     e72:	0f 90       	pop	r0
     e74:	0f be       	out	0x3f, r0	; 63
     e76:	be 01       	movw	r22, r28
     e78:	6c 5f       	subi	r22, 0xFC	; 252
     e7a:	7f 4f       	sbci	r23, 0xFF	; 255
     e7c:	ce 01       	movw	r24, r28
     e7e:	01 96       	adiw	r24, 0x01	; 1
     e80:	45 d6       	rcall	.+3210   	; 0x1b0c <xTaskCheckForTimeOut>
     e82:	81 11       	cpse	r24, r1
     e84:	20 c0       	rjmp	.+64     	; 0xec6 <xQueueGenericReceive+0x130>
     e86:	c8 01       	movw	r24, r16
     e88:	c3 dd       	rcall	.-1146   	; 0xa10 <prvIsQueueEmpty>
     e8a:	88 23       	and	r24, r24
     e8c:	c1 f0       	breq	.+48     	; 0xebe <xQueueGenericReceive+0x128>
     e8e:	f8 01       	movw	r30, r16
     e90:	80 81       	ld	r24, Z
     e92:	91 81       	ldd	r25, Z+1	; 0x01
     e94:	89 2b       	or	r24, r25
     e96:	41 f4       	brne	.+16     	; 0xea8 <xQueueGenericReceive+0x112>
     e98:	0f b6       	in	r0, 0x3f	; 63
     e9a:	f8 94       	cli
     e9c:	0f 92       	push	r0
     e9e:	82 81       	ldd	r24, Z+2	; 0x02
     ea0:	93 81       	ldd	r25, Z+3	; 0x03
     ea2:	70 d6       	rcall	.+3296   	; 0x1b84 <vTaskPriorityInherit>
     ea4:	0f 90       	pop	r0
     ea6:	0f be       	out	0x3f, r0	; 63
     ea8:	6c 81       	ldd	r22, Y+4	; 0x04
     eaa:	7d 81       	ldd	r23, Y+5	; 0x05
     eac:	c6 01       	movw	r24, r12
     eae:	ca d5       	rcall	.+2964   	; 0x1a44 <vTaskPlaceOnEventList>
     eb0:	c8 01       	movw	r24, r16
     eb2:	32 de       	rcall	.-924    	; 0xb18 <prvUnlockQueue>
     eb4:	c9 d4       	rcall	.+2450   	; 0x1848 <xTaskResumeAll>
     eb6:	81 11       	cpse	r24, r1
     eb8:	8b cf       	rjmp	.-234    	; 0xdd0 <xQueueGenericReceive+0x3a>
     eba:	d0 dc       	rcall	.-1632   	; 0x85c <vPortYield>
     ebc:	89 cf       	rjmp	.-238    	; 0xdd0 <xQueueGenericReceive+0x3a>
     ebe:	c8 01       	movw	r24, r16
     ec0:	2b de       	rcall	.-938    	; 0xb18 <prvUnlockQueue>
     ec2:	c2 d4       	rcall	.+2436   	; 0x1848 <xTaskResumeAll>
     ec4:	85 cf       	rjmp	.-246    	; 0xdd0 <xQueueGenericReceive+0x3a>
     ec6:	c8 01       	movw	r24, r16
     ec8:	27 de       	rcall	.-946    	; 0xb18 <prvUnlockQueue>
     eca:	be d4       	rcall	.+2428   	; 0x1848 <xTaskResumeAll>
     ecc:	c8 01       	movw	r24, r16
     ece:	a0 dd       	rcall	.-1216   	; 0xa10 <prvIsQueueEmpty>
     ed0:	88 23       	and	r24, r24
     ed2:	09 f4       	brne	.+2      	; 0xed6 <xQueueGenericReceive+0x140>
     ed4:	7d cf       	rjmp	.-262    	; 0xdd0 <xQueueGenericReceive+0x3a>
     ed6:	80 e0       	ldi	r24, 0x00	; 0
     ed8:	0f 90       	pop	r0
     eda:	0f 90       	pop	r0
     edc:	0f 90       	pop	r0
     ede:	0f 90       	pop	r0
     ee0:	0f 90       	pop	r0
     ee2:	df 91       	pop	r29
     ee4:	cf 91       	pop	r28
     ee6:	1f 91       	pop	r17
     ee8:	0f 91       	pop	r16
     eea:	ff 90       	pop	r15
     eec:	ef 90       	pop	r14
     eee:	df 90       	pop	r13
     ef0:	cf 90       	pop	r12
     ef2:	bf 90       	pop	r11
     ef4:	af 90       	pop	r10
     ef6:	9f 90       	pop	r9
     ef8:	8f 90       	pop	r8
     efa:	08 95       	ret

00000efc <__vector_26>:
#elif defined(__AVR_ATmega324P__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega324PA__) || defined(__AVR_ATmega644PA__) || defined(__AVR_ATmega640__) || defined(__AVR_ATmega1280__) || defined(__AVR_ATmega1281__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega2561__)
ISR( USART0_UDRE_vect ) __attribute__ ((hot, flatten));
ISR( USART0_UDRE_vect )

#endif
{
     efc:	1f 92       	push	r1
     efe:	0f 92       	push	r0
     f00:	0f b6       	in	r0, 0x3f	; 63
     f02:	0f 92       	push	r0
     f04:	11 24       	eor	r1, r1
     f06:	0b b6       	in	r0, 0x3b	; 59
     f08:	0f 92       	push	r0
     f0a:	2f 93       	push	r18
     f0c:	8f 93       	push	r24
     f0e:	9f 93       	push	r25
     f10:	af 93       	push	r26
     f12:	bf 93       	push	r27
     f14:	ef 93       	push	r30
     f16:	ff 93       	push	r31
inline uint16_t
ringBuffer_GetCount(ringBuffer_t* const buffer)
{
	uint16_t count;

	portENTER_CRITICAL();
     f18:	0f b6       	in	r0, 0x3f	; 63
     f1a:	f8 94       	cli
     f1c:	0f 92       	push	r0
	{
	    count = buffer->count;
     f1e:	80 91 f9 02 	lds	r24, 0x02F9	; 0x8002f9 <xSerialPort+0xd>
     f22:	90 91 fa 02 	lds	r25, 0x02FA	; 0x8002fa <xSerialPort+0xe>
	}
	portEXIT_CRITICAL();
     f26:	0f 90       	pop	r0
     f28:	0f be       	out	0x3f, r0	; 63
	if( ringBuffer_IsEmpty( (ringBuffer_t*) &(xSerialPort.xCharsForTx) ) )
     f2a:	89 2b       	or	r24, r25
     f2c:	31 f4       	brne	.+12     	; 0xf3a <__vector_26+0x3e>
	{
		// Queue empty, nothing to send.
		vInterrupt0_Off();
     f2e:	e1 ec       	ldi	r30, 0xC1	; 193
     f30:	f0 e0       	ldi	r31, 0x00	; 0
     f32:	80 81       	ld	r24, Z
     f34:	8f 7d       	andi	r24, 0xDF	; 223
     f36:	80 83       	st	Z, r24
     f38:	1c c0       	rjmp	.+56     	; 0xf72 <__vector_26+0x76>
}

inline uint8_t
ringBuffer_Pop(ringBuffer_t* buffer)
{
	GCC_FORCE_POINTER_ACCESS(buffer);
     f3a:	e9 ef       	ldi	r30, 0xF9	; 249
     f3c:	f2 e0       	ldi	r31, 0x02	; 2

	uint8_t data = *buffer->out;
     f3e:	a4 81       	ldd	r26, Z+4	; 0x04
     f40:	b5 81       	ldd	r27, Z+5	; 0x05
     f42:	2d 91       	ld	r18, X+

	if (++buffer->out == buffer->end)
     f44:	b5 83       	std	Z+5, r27	; 0x05
     f46:	a4 83       	std	Z+4, r26	; 0x04
     f48:	80 85       	ldd	r24, Z+8	; 0x08
     f4a:	91 85       	ldd	r25, Z+9	; 0x09
     f4c:	a8 17       	cp	r26, r24
     f4e:	b9 07       	cpc	r27, r25
     f50:	21 f4       	brne	.+8      	; 0xf5a <__vector_26+0x5e>
	  buffer->out = buffer->start;
     f52:	86 81       	ldd	r24, Z+6	; 0x06
     f54:	97 81       	ldd	r25, Z+7	; 0x07
     f56:	95 83       	std	Z+5, r25	; 0x05
     f58:	84 83       	std	Z+4, r24	; 0x04

	portENTER_CRITICAL();
     f5a:	0f b6       	in	r0, 0x3f	; 63
     f5c:	f8 94       	cli
     f5e:	0f 92       	push	r0
	{
	    buffer->count--;
     f60:	80 81       	ld	r24, Z
     f62:	91 81       	ldd	r25, Z+1	; 0x01
     f64:	01 97       	sbiw	r24, 0x01	; 1
     f66:	91 83       	std	Z+1, r25	; 0x01
     f68:	80 83       	st	Z, r24
	}
	portEXIT_CRITICAL();
     f6a:	0f 90       	pop	r0
     f6c:	0f be       	out	0x3f, r0	; 63
	}
	else
	{
		UDR0 = ringBuffer_Pop( (ringBuffer_t*) &(xSerialPort.xCharsForTx) );
     f6e:	20 93 c6 00 	sts	0x00C6, r18	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
	}
}
     f72:	ff 91       	pop	r31
     f74:	ef 91       	pop	r30
     f76:	bf 91       	pop	r27
     f78:	af 91       	pop	r26
     f7a:	9f 91       	pop	r25
     f7c:	8f 91       	pop	r24
     f7e:	2f 91       	pop	r18
     f80:	0f 90       	pop	r0
     f82:	0b be       	out	0x3b, r0	; 59
     f84:	0f 90       	pop	r0
     f86:	0f be       	out	0x3f, r0	; 63
     f88:	0f 90       	pop	r0
     f8a:	1f 90       	pop	r1
     f8c:	18 95       	reti

00000f8e <__vector_36>:

#if defined(__AVR_ATmega324P__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega1284P__) || defined(__AVR_ATmega324PA__) || defined(__AVR_ATmega644PA__) || defined(__AVR_ATmega640__) || defined(__AVR_ATmega1280__) || defined(__AVR_ATmega1281__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega2561__)

ISR( USART1_RX_vect ) __attribute__ ((hot, flatten));
ISR( USART1_RX_vect )
{
     f8e:	1f 92       	push	r1
     f90:	0f 92       	push	r0
     f92:	0f b6       	in	r0, 0x3f	; 63
     f94:	0f 92       	push	r0
     f96:	11 24       	eor	r1, r1
     f98:	0b b6       	in	r0, 0x3b	; 59
     f9a:	0f 92       	push	r0
     f9c:	2f 93       	push	r18
     f9e:	3f 93       	push	r19
     fa0:	4f 93       	push	r20
     fa2:	8f 93       	push	r24
     fa4:	9f 93       	push	r25
     fa6:	af 93       	push	r26
     fa8:	bf 93       	push	r27
     faa:	ef 93       	push	r30
     fac:	ff 93       	push	r31
	/* Get status and data from buffer */

	/* If error bit set (Frame Error, Data Over Run, Parity), flush and return nothing */
	if ( (UCSR1A &  (_BV(FE1)|_BV(DOR1)|_BV(UPE1)) ) )
     fae:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7000c8>
     fb2:	8c 71       	andi	r24, 0x1C	; 28
     fb4:	71 f0       	breq	.+28     	; 0xfd2 <__vector_36+0x44>
	{
		register uint8_t erroredByte __attribute__ ((unused));
		while ( UCSR1A & (1<<RXC1) ) erroredByte = UDR1;
     fb6:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7000c8>
     fba:	88 23       	and	r24, r24
     fbc:	0c f0       	brlt	.+2      	; 0xfc0 <__vector_36+0x32>
     fbe:	36 c0       	rjmp	.+108    	; 0x102c <__vector_36+0x9e>
     fc0:	ae ec       	ldi	r26, 0xCE	; 206
     fc2:	b0 e0       	ldi	r27, 0x00	; 0
     fc4:	e8 ec       	ldi	r30, 0xC8	; 200
     fc6:	f0 e0       	ldi	r31, 0x00	; 0
     fc8:	8c 91       	ld	r24, X
     fca:	80 81       	ld	r24, Z
     fcc:	88 23       	and	r24, r24
     fce:	e4 f3       	brlt	.-8      	; 0xfc8 <__vector_36+0x3a>
     fd0:	2d c0       	rjmp	.+90     	; 0x102c <__vector_36+0x9e>
	}
	else
	{
		/* If no error, get the character and post it on the buffer of Rxed characters.*/
		register uint8_t cChar = UDR1;
     fd2:	40 91 ce 00 	lds	r20, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
inline uint16_t
ringBuffer_GetCount(ringBuffer_t* const buffer)
{
	uint16_t count;

	portENTER_CRITICAL();
     fd6:	0f b6       	in	r0, 0x3f	; 63
     fd8:	f8 94       	cli
     fda:	0f 92       	push	r0
	{
	    count = buffer->count;
     fdc:	e2 e5       	ldi	r30, 0x52	; 82
     fde:	f3 e0       	ldi	r31, 0x03	; 3
     fe0:	21 81       	ldd	r18, Z+1	; 0x01
     fe2:	32 81       	ldd	r19, Z+2	; 0x02
	}
	portEXIT_CRITICAL();
     fe4:	0f 90       	pop	r0
     fe6:	0f be       	out	0x3f, r0	; 63

		if( ! ringBuffer_IsFull( (ringBuffer_t*) &(xSerial1Port.xRxedChars) ) )
     fe8:	83 85       	ldd	r24, Z+11	; 0x0b
     fea:	94 85       	ldd	r25, Z+12	; 0x0c
     fec:	28 17       	cp	r18, r24
     fee:	39 07       	cpc	r19, r25
     ff0:	e9 f0       	breq	.+58     	; 0x102c <__vector_36+0x9e>
}

inline void
ringBuffer_Poke(ringBuffer_t* buffer, uint8_t const data)
{
	GCC_FORCE_POINTER_ACCESS(buffer);
     ff2:	e3 e5       	ldi	r30, 0x53	; 83
     ff4:	f3 e0       	ldi	r31, 0x03	; 3

	*buffer->in = data;
     ff6:	a2 81       	ldd	r26, Z+2	; 0x02
     ff8:	b3 81       	ldd	r27, Z+3	; 0x03
     ffa:	4c 93       	st	X, r20

	if (++buffer->in == buffer->end)
     ffc:	82 81       	ldd	r24, Z+2	; 0x02
     ffe:	93 81       	ldd	r25, Z+3	; 0x03
    1000:	01 96       	adiw	r24, 0x01	; 1
    1002:	93 83       	std	Z+3, r25	; 0x03
    1004:	82 83       	std	Z+2, r24	; 0x02
    1006:	20 85       	ldd	r18, Z+8	; 0x08
    1008:	31 85       	ldd	r19, Z+9	; 0x09
    100a:	82 17       	cp	r24, r18
    100c:	93 07       	cpc	r25, r19
    100e:	21 f4       	brne	.+8      	; 0x1018 <__vector_36+0x8a>
	  buffer->in = buffer->start;
    1010:	86 81       	ldd	r24, Z+6	; 0x06
    1012:	97 81       	ldd	r25, Z+7	; 0x07
    1014:	93 83       	std	Z+3, r25	; 0x03
    1016:	82 83       	std	Z+2, r24	; 0x02

	portENTER_CRITICAL();
    1018:	0f b6       	in	r0, 0x3f	; 63
    101a:	f8 94       	cli
    101c:	0f 92       	push	r0
	{
	    buffer->count++;
    101e:	80 81       	ld	r24, Z
    1020:	91 81       	ldd	r25, Z+1	; 0x01
    1022:	01 96       	adiw	r24, 0x01	; 1
    1024:	91 83       	std	Z+1, r25	; 0x01
    1026:	80 83       	st	Z, r24
	}
	portEXIT_CRITICAL();
    1028:	0f 90       	pop	r0
    102a:	0f be       	out	0x3f, r0	; 63
			ringBuffer_Poke( (ringBuffer_t*) &(xSerial1Port.xRxedChars), cChar);
	}
}
    102c:	ff 91       	pop	r31
    102e:	ef 91       	pop	r30
    1030:	bf 91       	pop	r27
    1032:	af 91       	pop	r26
    1034:	9f 91       	pop	r25
    1036:	8f 91       	pop	r24
    1038:	4f 91       	pop	r20
    103a:	3f 91       	pop	r19
    103c:	2f 91       	pop	r18
    103e:	0f 90       	pop	r0
    1040:	0b be       	out	0x3b, r0	; 59
    1042:	0f 90       	pop	r0
    1044:	0f be       	out	0x3f, r0	; 63
    1046:	0f 90       	pop	r0
    1048:	1f 90       	pop	r1
    104a:	18 95       	reti

0000104c <__vector_37>:
/*-----------------------------------------------------------*/

ISR( USART1_UDRE_vect ) __attribute__ ((hot, flatten));
ISR( USART1_UDRE_vect )
{
    104c:	1f 92       	push	r1
    104e:	0f 92       	push	r0
    1050:	0f b6       	in	r0, 0x3f	; 63
    1052:	0f 92       	push	r0
    1054:	11 24       	eor	r1, r1
    1056:	0b b6       	in	r0, 0x3b	; 59
    1058:	0f 92       	push	r0
    105a:	2f 93       	push	r18
    105c:	8f 93       	push	r24
    105e:	9f 93       	push	r25
    1060:	af 93       	push	r26
    1062:	bf 93       	push	r27
    1064:	ef 93       	push	r30
    1066:	ff 93       	push	r31
inline uint16_t
ringBuffer_GetCount(ringBuffer_t* const buffer)
{
	uint16_t count;

	portENTER_CRITICAL();
    1068:	0f b6       	in	r0, 0x3f	; 63
    106a:	f8 94       	cli
    106c:	0f 92       	push	r0
	{
	    count = buffer->count;
    106e:	80 91 5f 03 	lds	r24, 0x035F	; 0x80035f <xSerial1Port+0xd>
    1072:	90 91 60 03 	lds	r25, 0x0360	; 0x800360 <xSerial1Port+0xe>
	}
	portEXIT_CRITICAL();
    1076:	0f 90       	pop	r0
    1078:	0f be       	out	0x3f, r0	; 63
	if( ringBuffer_IsEmpty( (ringBuffer_t*) &(xSerial1Port.xCharsForTx) ) )
    107a:	89 2b       	or	r24, r25
    107c:	31 f4       	brne	.+12     	; 0x108a <__vector_37+0x3e>
	{
		// Queue empty, nothing to send.
		vInterrupt1_Off();
    107e:	e9 ec       	ldi	r30, 0xC9	; 201
    1080:	f0 e0       	ldi	r31, 0x00	; 0
    1082:	80 81       	ld	r24, Z
    1084:	8f 7d       	andi	r24, 0xDF	; 223
    1086:	80 83       	st	Z, r24
    1088:	1c c0       	rjmp	.+56     	; 0x10c2 <__vector_37+0x76>
}

inline uint8_t
ringBuffer_Pop(ringBuffer_t* buffer)
{
	GCC_FORCE_POINTER_ACCESS(buffer);
    108a:	ef e5       	ldi	r30, 0x5F	; 95
    108c:	f3 e0       	ldi	r31, 0x03	; 3

	uint8_t data = *buffer->out;
    108e:	a4 81       	ldd	r26, Z+4	; 0x04
    1090:	b5 81       	ldd	r27, Z+5	; 0x05
    1092:	2d 91       	ld	r18, X+

	if (++buffer->out == buffer->end)
    1094:	b5 83       	std	Z+5, r27	; 0x05
    1096:	a4 83       	std	Z+4, r26	; 0x04
    1098:	80 85       	ldd	r24, Z+8	; 0x08
    109a:	91 85       	ldd	r25, Z+9	; 0x09
    109c:	a8 17       	cp	r26, r24
    109e:	b9 07       	cpc	r27, r25
    10a0:	21 f4       	brne	.+8      	; 0x10aa <__vector_37+0x5e>
	  buffer->out = buffer->start;
    10a2:	86 81       	ldd	r24, Z+6	; 0x06
    10a4:	97 81       	ldd	r25, Z+7	; 0x07
    10a6:	95 83       	std	Z+5, r25	; 0x05
    10a8:	84 83       	std	Z+4, r24	; 0x04

	portENTER_CRITICAL();
    10aa:	0f b6       	in	r0, 0x3f	; 63
    10ac:	f8 94       	cli
    10ae:	0f 92       	push	r0
	{
	    buffer->count--;
    10b0:	80 81       	ld	r24, Z
    10b2:	91 81       	ldd	r25, Z+1	; 0x01
    10b4:	01 97       	sbiw	r24, 0x01	; 1
    10b6:	91 83       	std	Z+1, r25	; 0x01
    10b8:	80 83       	st	Z, r24
	}
	portEXIT_CRITICAL();
    10ba:	0f 90       	pop	r0
    10bc:	0f be       	out	0x3f, r0	; 63
	}
	else
	{
		UDR1 = ringBuffer_Pop( (ringBuffer_t*) &(xSerial1Port.xCharsForTx) );
    10be:	20 93 ce 00 	sts	0x00CE, r18	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
	}
}
    10c2:	ff 91       	pop	r31
    10c4:	ef 91       	pop	r30
    10c6:	bf 91       	pop	r27
    10c8:	af 91       	pop	r26
    10ca:	9f 91       	pop	r25
    10cc:	8f 91       	pop	r24
    10ce:	2f 91       	pop	r18
    10d0:	0f 90       	pop	r0
    10d2:	0b be       	out	0x3b, r0	; 59
    10d4:	0f 90       	pop	r0
    10d6:	0f be       	out	0x3f, r0	; 63
    10d8:	0f 90       	pop	r0
    10da:	1f 90       	pop	r1
    10dc:	18 95       	reti

000010de <__vector_51>:

#if defined(__AVR_ATmega640__) || defined(__AVR_ATmega1280__) || defined(__AVR_ATmega1281__) || defined(__AVR_ATmega2560__) || defined(__AVR_ATmega2561__)

ISR( USART2_RX_vect ) __attribute__ ((hot, flatten));
ISR( USART2_RX_vect )
{
    10de:	1f 92       	push	r1
    10e0:	0f 92       	push	r0
    10e2:	0f b6       	in	r0, 0x3f	; 63
    10e4:	0f 92       	push	r0
    10e6:	11 24       	eor	r1, r1
    10e8:	0b b6       	in	r0, 0x3b	; 59
    10ea:	0f 92       	push	r0
    10ec:	2f 93       	push	r18
    10ee:	3f 93       	push	r19
    10f0:	4f 93       	push	r20
    10f2:	8f 93       	push	r24
    10f4:	9f 93       	push	r25
    10f6:	af 93       	push	r26
    10f8:	bf 93       	push	r27
    10fa:	ef 93       	push	r30
    10fc:	ff 93       	push	r31
	/* Get status and data from buffer */

	/* If error bit set (Frame Error, Data Over Run, Parity), flush and return nothing */
	if ( (UCSR2A & (_BV(FE2)|_BV(DOR2)|_BV(UPE2)) ) )
    10fe:	80 91 d0 00 	lds	r24, 0x00D0	; 0x8000d0 <__TEXT_REGION_LENGTH__+0x7000d0>
    1102:	8c 71       	andi	r24, 0x1C	; 28
    1104:	71 f0       	breq	.+28     	; 0x1122 <__vector_51+0x44>
	{
		register uint8_t erroredByte __attribute__ ((unused));
		while ( UCSR2A & (1<<RXC2) ) erroredByte = UDR2;
    1106:	80 91 d0 00 	lds	r24, 0x00D0	; 0x8000d0 <__TEXT_REGION_LENGTH__+0x7000d0>
    110a:	88 23       	and	r24, r24
    110c:	0c f0       	brlt	.+2      	; 0x1110 <__vector_51+0x32>
    110e:	36 c0       	rjmp	.+108    	; 0x117c <__vector_51+0x9e>
    1110:	a6 ed       	ldi	r26, 0xD6	; 214
    1112:	b0 e0       	ldi	r27, 0x00	; 0
    1114:	e0 ed       	ldi	r30, 0xD0	; 208
    1116:	f0 e0       	ldi	r31, 0x00	; 0
    1118:	8c 91       	ld	r24, X
    111a:	80 81       	ld	r24, Z
    111c:	88 23       	and	r24, r24
    111e:	e4 f3       	brlt	.-8      	; 0x1118 <__vector_51+0x3a>
    1120:	2d c0       	rjmp	.+90     	; 0x117c <__vector_51+0x9e>
	}
	else
	{
		/* If no error, get the character and post it on the buffer of Rxed characters.*/
		register uint8_t cChar = UDR2;
    1122:	40 91 d6 00 	lds	r20, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
inline uint16_t
ringBuffer_GetCount(ringBuffer_t* const buffer)
{
	uint16_t count;

	portENTER_CRITICAL();
    1126:	0f b6       	in	r0, 0x3f	; 63
    1128:	f8 94       	cli
    112a:	0f 92       	push	r0
	{
	    count = buffer->count;
    112c:	ee e0       	ldi	r30, 0x0E	; 14
    112e:	f3 e0       	ldi	r31, 0x03	; 3
    1130:	21 81       	ldd	r18, Z+1	; 0x01
    1132:	32 81       	ldd	r19, Z+2	; 0x02
	}
	portEXIT_CRITICAL();
    1134:	0f 90       	pop	r0
    1136:	0f be       	out	0x3f, r0	; 63

		if( ! ringBuffer_IsFull( (ringBuffer_t*) &(xSerial2Port.xRxedChars) ) )
    1138:	83 85       	ldd	r24, Z+11	; 0x0b
    113a:	94 85       	ldd	r25, Z+12	; 0x0c
    113c:	28 17       	cp	r18, r24
    113e:	39 07       	cpc	r19, r25
    1140:	e9 f0       	breq	.+58     	; 0x117c <__vector_51+0x9e>
}

inline void
ringBuffer_Poke(ringBuffer_t* buffer, uint8_t const data)
{
	GCC_FORCE_POINTER_ACCESS(buffer);
    1142:	ef e0       	ldi	r30, 0x0F	; 15
    1144:	f3 e0       	ldi	r31, 0x03	; 3

	*buffer->in = data;
    1146:	a2 81       	ldd	r26, Z+2	; 0x02
    1148:	b3 81       	ldd	r27, Z+3	; 0x03
    114a:	4c 93       	st	X, r20

	if (++buffer->in == buffer->end)
    114c:	82 81       	ldd	r24, Z+2	; 0x02
    114e:	93 81       	ldd	r25, Z+3	; 0x03
    1150:	01 96       	adiw	r24, 0x01	; 1
    1152:	93 83       	std	Z+3, r25	; 0x03
    1154:	82 83       	std	Z+2, r24	; 0x02
    1156:	20 85       	ldd	r18, Z+8	; 0x08
    1158:	31 85       	ldd	r19, Z+9	; 0x09
    115a:	82 17       	cp	r24, r18
    115c:	93 07       	cpc	r25, r19
    115e:	21 f4       	brne	.+8      	; 0x1168 <__vector_51+0x8a>
	  buffer->in = buffer->start;
    1160:	86 81       	ldd	r24, Z+6	; 0x06
    1162:	97 81       	ldd	r25, Z+7	; 0x07
    1164:	93 83       	std	Z+3, r25	; 0x03
    1166:	82 83       	std	Z+2, r24	; 0x02

	portENTER_CRITICAL();
    1168:	0f b6       	in	r0, 0x3f	; 63
    116a:	f8 94       	cli
    116c:	0f 92       	push	r0
	{
	    buffer->count++;
    116e:	80 81       	ld	r24, Z
    1170:	91 81       	ldd	r25, Z+1	; 0x01
    1172:	01 96       	adiw	r24, 0x01	; 1
    1174:	91 83       	std	Z+1, r25	; 0x01
    1176:	80 83       	st	Z, r24
	}
	portEXIT_CRITICAL();
    1178:	0f 90       	pop	r0
    117a:	0f be       	out	0x3f, r0	; 63
			ringBuffer_Poke( (ringBuffer_t*) &(xSerial2Port.xRxedChars), cChar);
	}
}
    117c:	ff 91       	pop	r31
    117e:	ef 91       	pop	r30
    1180:	bf 91       	pop	r27
    1182:	af 91       	pop	r26
    1184:	9f 91       	pop	r25
    1186:	8f 91       	pop	r24
    1188:	4f 91       	pop	r20
    118a:	3f 91       	pop	r19
    118c:	2f 91       	pop	r18
    118e:	0f 90       	pop	r0
    1190:	0b be       	out	0x3b, r0	; 59
    1192:	0f 90       	pop	r0
    1194:	0f be       	out	0x3f, r0	; 63
    1196:	0f 90       	pop	r0
    1198:	1f 90       	pop	r1
    119a:	18 95       	reti

0000119c <__vector_52>:
/*-----------------------------------------------------------*/

ISR( USART2_UDRE_vect ) __attribute__ ((hot, flatten));
ISR( USART2_UDRE_vect )
{
    119c:	1f 92       	push	r1
    119e:	0f 92       	push	r0
    11a0:	0f b6       	in	r0, 0x3f	; 63
    11a2:	0f 92       	push	r0
    11a4:	11 24       	eor	r1, r1
    11a6:	0b b6       	in	r0, 0x3b	; 59
    11a8:	0f 92       	push	r0
    11aa:	2f 93       	push	r18
    11ac:	8f 93       	push	r24
    11ae:	9f 93       	push	r25
    11b0:	af 93       	push	r26
    11b2:	bf 93       	push	r27
    11b4:	ef 93       	push	r30
    11b6:	ff 93       	push	r31
inline uint16_t
ringBuffer_GetCount(ringBuffer_t* const buffer)
{
	uint16_t count;

	portENTER_CRITICAL();
    11b8:	0f b6       	in	r0, 0x3f	; 63
    11ba:	f8 94       	cli
    11bc:	0f 92       	push	r0
	{
	    count = buffer->count;
    11be:	80 91 1b 03 	lds	r24, 0x031B	; 0x80031b <xSerial2Port+0xd>
    11c2:	90 91 1c 03 	lds	r25, 0x031C	; 0x80031c <xSerial2Port+0xe>
	}
	portEXIT_CRITICAL();
    11c6:	0f 90       	pop	r0
    11c8:	0f be       	out	0x3f, r0	; 63
	if( ringBuffer_IsEmpty( (ringBuffer_t*) &(xSerial2Port.xCharsForTx) ) )
    11ca:	89 2b       	or	r24, r25
    11cc:	31 f4       	brne	.+12     	; 0x11da <__vector_52+0x3e>
	{
		// Queue empty, nothing to send.
		vInterrupt2_Off();
    11ce:	e1 ed       	ldi	r30, 0xD1	; 209
    11d0:	f0 e0       	ldi	r31, 0x00	; 0
    11d2:	80 81       	ld	r24, Z
    11d4:	8f 7d       	andi	r24, 0xDF	; 223
    11d6:	80 83       	st	Z, r24
    11d8:	1c c0       	rjmp	.+56     	; 0x1212 <__vector_52+0x76>
}

inline uint8_t
ringBuffer_Pop(ringBuffer_t* buffer)
{
	GCC_FORCE_POINTER_ACCESS(buffer);
    11da:	eb e1       	ldi	r30, 0x1B	; 27
    11dc:	f3 e0       	ldi	r31, 0x03	; 3

	uint8_t data = *buffer->out;
    11de:	a4 81       	ldd	r26, Z+4	; 0x04
    11e0:	b5 81       	ldd	r27, Z+5	; 0x05
    11e2:	2d 91       	ld	r18, X+

	if (++buffer->out == buffer->end)
    11e4:	b5 83       	std	Z+5, r27	; 0x05
    11e6:	a4 83       	std	Z+4, r26	; 0x04
    11e8:	80 85       	ldd	r24, Z+8	; 0x08
    11ea:	91 85       	ldd	r25, Z+9	; 0x09
    11ec:	a8 17       	cp	r26, r24
    11ee:	b9 07       	cpc	r27, r25
    11f0:	21 f4       	brne	.+8      	; 0x11fa <__vector_52+0x5e>
	  buffer->out = buffer->start;
    11f2:	86 81       	ldd	r24, Z+6	; 0x06
    11f4:	97 81       	ldd	r25, Z+7	; 0x07
    11f6:	95 83       	std	Z+5, r25	; 0x05
    11f8:	84 83       	std	Z+4, r24	; 0x04

	portENTER_CRITICAL();
    11fa:	0f b6       	in	r0, 0x3f	; 63
    11fc:	f8 94       	cli
    11fe:	0f 92       	push	r0
	{
	    buffer->count--;
    1200:	80 81       	ld	r24, Z
    1202:	91 81       	ldd	r25, Z+1	; 0x01
    1204:	01 97       	sbiw	r24, 0x01	; 1
    1206:	91 83       	std	Z+1, r25	; 0x01
    1208:	80 83       	st	Z, r24
	}
	portEXIT_CRITICAL();
    120a:	0f 90       	pop	r0
    120c:	0f be       	out	0x3f, r0	; 63
	}
	else
	{
		UDR2 = ringBuffer_Pop( (ringBuffer_t*) &(xSerial2Port.xCharsForTx) );
    120e:	20 93 d6 00 	sts	0x00D6, r18	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
	}
}
    1212:	ff 91       	pop	r31
    1214:	ef 91       	pop	r30
    1216:	bf 91       	pop	r27
    1218:	af 91       	pop	r26
    121a:	9f 91       	pop	r25
    121c:	8f 91       	pop	r24
    121e:	2f 91       	pop	r18
    1220:	0f 90       	pop	r0
    1222:	0b be       	out	0x3b, r0	; 59
    1224:	0f 90       	pop	r0
    1226:	0f be       	out	0x3f, r0	; 63
    1228:	0f 90       	pop	r0
    122a:	1f 90       	pop	r1
    122c:	18 95       	reti

0000122e <__vector_54>:
/*-----------------------------------------------------------*/

ISR( USART3_RX_vect ) __attribute__ ((hot, flatten));
ISR( USART3_RX_vect )
{
    122e:	1f 92       	push	r1
    1230:	0f 92       	push	r0
    1232:	0f b6       	in	r0, 0x3f	; 63
    1234:	0f 92       	push	r0
    1236:	11 24       	eor	r1, r1
    1238:	0b b6       	in	r0, 0x3b	; 59
    123a:	0f 92       	push	r0
    123c:	2f 93       	push	r18
    123e:	3f 93       	push	r19
    1240:	4f 93       	push	r20
    1242:	8f 93       	push	r24
    1244:	9f 93       	push	r25
    1246:	af 93       	push	r26
    1248:	bf 93       	push	r27
    124a:	ef 93       	push	r30
    124c:	ff 93       	push	r31
	/* Get status and data from buffer */

	/* If error bit set (Frame Error, Data Over Run, Parity), flush and return nothing */
	if ( (UCSR3A & (_BV(FE3)|_BV(DOR3)|_BV(UPE3)) ) )
    124e:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__TEXT_REGION_LENGTH__+0x700130>
    1252:	8c 71       	andi	r24, 0x1C	; 28
    1254:	71 f0       	breq	.+28     	; 0x1272 <__vector_54+0x44>
	{
		register uint8_t erroredByte __attribute__ ((unused));
		while ( UCSR3A & (1<<RXC3) ) erroredByte = UDR3;
    1256:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__TEXT_REGION_LENGTH__+0x700130>
    125a:	88 23       	and	r24, r24
    125c:	0c f0       	brlt	.+2      	; 0x1260 <__vector_54+0x32>
    125e:	36 c0       	rjmp	.+108    	; 0x12cc <__vector_54+0x9e>
    1260:	a6 e3       	ldi	r26, 0x36	; 54
    1262:	b1 e0       	ldi	r27, 0x01	; 1
    1264:	e0 e3       	ldi	r30, 0x30	; 48
    1266:	f1 e0       	ldi	r31, 0x01	; 1
    1268:	8c 91       	ld	r24, X
    126a:	80 81       	ld	r24, Z
    126c:	88 23       	and	r24, r24
    126e:	e4 f3       	brlt	.-8      	; 0x1268 <__vector_54+0x3a>
    1270:	2d c0       	rjmp	.+90     	; 0x12cc <__vector_54+0x9e>
	}
	else
	{
		/* If no error, get the character and post it on the buffer of Rxed characters.*/
		register uint8_t cChar = UDR3;
    1272:	40 91 36 01 	lds	r20, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
inline uint16_t
ringBuffer_GetCount(ringBuffer_t* const buffer)
{
	uint16_t count;

	portENTER_CRITICAL();
    1276:	0f b6       	in	r0, 0x3f	; 63
    1278:	f8 94       	cli
    127a:	0f 92       	push	r0
	{
	    count = buffer->count;
    127c:	e0 e3       	ldi	r30, 0x30	; 48
    127e:	f3 e0       	ldi	r31, 0x03	; 3
    1280:	21 81       	ldd	r18, Z+1	; 0x01
    1282:	32 81       	ldd	r19, Z+2	; 0x02
	}
	portEXIT_CRITICAL();
    1284:	0f 90       	pop	r0
    1286:	0f be       	out	0x3f, r0	; 63

		if( ! ringBuffer_IsFull( (ringBuffer_t*) &(xSerial3Port.xRxedChars) ) )
    1288:	83 85       	ldd	r24, Z+11	; 0x0b
    128a:	94 85       	ldd	r25, Z+12	; 0x0c
    128c:	28 17       	cp	r18, r24
    128e:	39 07       	cpc	r19, r25
    1290:	e9 f0       	breq	.+58     	; 0x12cc <__vector_54+0x9e>
}

inline void
ringBuffer_Poke(ringBuffer_t* buffer, uint8_t const data)
{
	GCC_FORCE_POINTER_ACCESS(buffer);
    1292:	e1 e3       	ldi	r30, 0x31	; 49
    1294:	f3 e0       	ldi	r31, 0x03	; 3

	*buffer->in = data;
    1296:	a2 81       	ldd	r26, Z+2	; 0x02
    1298:	b3 81       	ldd	r27, Z+3	; 0x03
    129a:	4c 93       	st	X, r20

	if (++buffer->in == buffer->end)
    129c:	82 81       	ldd	r24, Z+2	; 0x02
    129e:	93 81       	ldd	r25, Z+3	; 0x03
    12a0:	01 96       	adiw	r24, 0x01	; 1
    12a2:	93 83       	std	Z+3, r25	; 0x03
    12a4:	82 83       	std	Z+2, r24	; 0x02
    12a6:	20 85       	ldd	r18, Z+8	; 0x08
    12a8:	31 85       	ldd	r19, Z+9	; 0x09
    12aa:	82 17       	cp	r24, r18
    12ac:	93 07       	cpc	r25, r19
    12ae:	21 f4       	brne	.+8      	; 0x12b8 <__vector_54+0x8a>
	  buffer->in = buffer->start;
    12b0:	86 81       	ldd	r24, Z+6	; 0x06
    12b2:	97 81       	ldd	r25, Z+7	; 0x07
    12b4:	93 83       	std	Z+3, r25	; 0x03
    12b6:	82 83       	std	Z+2, r24	; 0x02

	portENTER_CRITICAL();
    12b8:	0f b6       	in	r0, 0x3f	; 63
    12ba:	f8 94       	cli
    12bc:	0f 92       	push	r0
	{
	    buffer->count++;
    12be:	80 81       	ld	r24, Z
    12c0:	91 81       	ldd	r25, Z+1	; 0x01
    12c2:	01 96       	adiw	r24, 0x01	; 1
    12c4:	91 83       	std	Z+1, r25	; 0x01
    12c6:	80 83       	st	Z, r24
	}
	portEXIT_CRITICAL();
    12c8:	0f 90       	pop	r0
    12ca:	0f be       	out	0x3f, r0	; 63
			ringBuffer_Poke( (ringBuffer_t*) &(xSerial3Port.xRxedChars), cChar);
	}
}
    12cc:	ff 91       	pop	r31
    12ce:	ef 91       	pop	r30
    12d0:	bf 91       	pop	r27
    12d2:	af 91       	pop	r26
    12d4:	9f 91       	pop	r25
    12d6:	8f 91       	pop	r24
    12d8:	4f 91       	pop	r20
    12da:	3f 91       	pop	r19
    12dc:	2f 91       	pop	r18
    12de:	0f 90       	pop	r0
    12e0:	0b be       	out	0x3b, r0	; 59
    12e2:	0f 90       	pop	r0
    12e4:	0f be       	out	0x3f, r0	; 63
    12e6:	0f 90       	pop	r0
    12e8:	1f 90       	pop	r1
    12ea:	18 95       	reti

000012ec <__vector_55>:
/*-----------------------------------------------------------*/

ISR( USART3_UDRE_vect ) __attribute__ ((hot, flatten));
ISR( USART3_UDRE_vect )
{
    12ec:	1f 92       	push	r1
    12ee:	0f 92       	push	r0
    12f0:	0f b6       	in	r0, 0x3f	; 63
    12f2:	0f 92       	push	r0
    12f4:	11 24       	eor	r1, r1
    12f6:	0b b6       	in	r0, 0x3b	; 59
    12f8:	0f 92       	push	r0
    12fa:	2f 93       	push	r18
    12fc:	8f 93       	push	r24
    12fe:	9f 93       	push	r25
    1300:	af 93       	push	r26
    1302:	bf 93       	push	r27
    1304:	ef 93       	push	r30
    1306:	ff 93       	push	r31
inline uint16_t
ringBuffer_GetCount(ringBuffer_t* const buffer)
{
	uint16_t count;

	portENTER_CRITICAL();
    1308:	0f b6       	in	r0, 0x3f	; 63
    130a:	f8 94       	cli
    130c:	0f 92       	push	r0
	{
	    count = buffer->count;
    130e:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <xSerial3Port+0xd>
    1312:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <xSerial3Port+0xe>
	}
	portEXIT_CRITICAL();
    1316:	0f 90       	pop	r0
    1318:	0f be       	out	0x3f, r0	; 63
	if( ringBuffer_IsEmpty( (ringBuffer_t*) &(xSerial3Port.xCharsForTx) ) )
    131a:	89 2b       	or	r24, r25
    131c:	31 f4       	brne	.+12     	; 0x132a <__vector_55+0x3e>
	{
		// Queue empty, nothing to send.
		vInterrupt3_Off();
    131e:	e1 e3       	ldi	r30, 0x31	; 49
    1320:	f1 e0       	ldi	r31, 0x01	; 1
    1322:	80 81       	ld	r24, Z
    1324:	8f 7d       	andi	r24, 0xDF	; 223
    1326:	80 83       	st	Z, r24
    1328:	1c c0       	rjmp	.+56     	; 0x1362 <__vector_55+0x76>
}

inline uint8_t
ringBuffer_Pop(ringBuffer_t* buffer)
{
	GCC_FORCE_POINTER_ACCESS(buffer);
    132a:	ed e3       	ldi	r30, 0x3D	; 61
    132c:	f3 e0       	ldi	r31, 0x03	; 3

	uint8_t data = *buffer->out;
    132e:	a4 81       	ldd	r26, Z+4	; 0x04
    1330:	b5 81       	ldd	r27, Z+5	; 0x05
    1332:	2d 91       	ld	r18, X+

	if (++buffer->out == buffer->end)
    1334:	b5 83       	std	Z+5, r27	; 0x05
    1336:	a4 83       	std	Z+4, r26	; 0x04
    1338:	80 85       	ldd	r24, Z+8	; 0x08
    133a:	91 85       	ldd	r25, Z+9	; 0x09
    133c:	a8 17       	cp	r26, r24
    133e:	b9 07       	cpc	r27, r25
    1340:	21 f4       	brne	.+8      	; 0x134a <__vector_55+0x5e>
	  buffer->out = buffer->start;
    1342:	86 81       	ldd	r24, Z+6	; 0x06
    1344:	97 81       	ldd	r25, Z+7	; 0x07
    1346:	95 83       	std	Z+5, r25	; 0x05
    1348:	84 83       	std	Z+4, r24	; 0x04

	portENTER_CRITICAL();
    134a:	0f b6       	in	r0, 0x3f	; 63
    134c:	f8 94       	cli
    134e:	0f 92       	push	r0
	{
	    buffer->count--;
    1350:	80 81       	ld	r24, Z
    1352:	91 81       	ldd	r25, Z+1	; 0x01
    1354:	01 97       	sbiw	r24, 0x01	; 1
    1356:	91 83       	std	Z+1, r25	; 0x01
    1358:	80 83       	st	Z, r24
	}
	portEXIT_CRITICAL();
    135a:	0f 90       	pop	r0
    135c:	0f be       	out	0x3f, r0	; 63
	}
	else
	{
		UDR3 = ringBuffer_Pop( (ringBuffer_t*) &(xSerial3Port.xCharsForTx) );
    135e:	20 93 36 01 	sts	0x0136, r18	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
	}
}
    1362:	ff 91       	pop	r31
    1364:	ef 91       	pop	r30
    1366:	bf 91       	pop	r27
    1368:	af 91       	pop	r26
    136a:	9f 91       	pop	r25
    136c:	8f 91       	pop	r24
    136e:	2f 91       	pop	r18
    1370:	0f 90       	pop	r0
    1372:	0b be       	out	0x3b, r0	; 59
    1374:	0f 90       	pop	r0
    1376:	0f be       	out	0x3f, r0	; 63
    1378:	0f 90       	pop	r0
    137a:	1f 90       	pop	r1
    137c:	18 95       	reti

0000137e <prvResetNextTaskUnblockTime>:
    137e:	e0 91 9e 02 	lds	r30, 0x029E	; 0x80029e <pxDelayedTaskList>
    1382:	f0 91 9f 02 	lds	r31, 0x029F	; 0x80029f <pxDelayedTaskList+0x1>
    1386:	80 81       	ld	r24, Z
    1388:	81 11       	cpse	r24, r1
    138a:	07 c0       	rjmp	.+14     	; 0x139a <prvResetNextTaskUnblockTime+0x1c>
    138c:	8f ef       	ldi	r24, 0xFF	; 255
    138e:	9f ef       	ldi	r25, 0xFF	; 255
    1390:	90 93 76 02 	sts	0x0276, r25	; 0x800276 <xNextTaskUnblockTime+0x1>
    1394:	80 93 75 02 	sts	0x0275, r24	; 0x800275 <xNextTaskUnblockTime>
    1398:	08 95       	ret
    139a:	e0 91 9e 02 	lds	r30, 0x029E	; 0x80029e <pxDelayedTaskList>
    139e:	f0 91 9f 02 	lds	r31, 0x029F	; 0x80029f <pxDelayedTaskList+0x1>
    13a2:	05 80       	ldd	r0, Z+5	; 0x05
    13a4:	f6 81       	ldd	r31, Z+6	; 0x06
    13a6:	e0 2d       	mov	r30, r0
    13a8:	06 80       	ldd	r0, Z+6	; 0x06
    13aa:	f7 81       	ldd	r31, Z+7	; 0x07
    13ac:	e0 2d       	mov	r30, r0
    13ae:	82 81       	ldd	r24, Z+2	; 0x02
    13b0:	93 81       	ldd	r25, Z+3	; 0x03
    13b2:	90 93 76 02 	sts	0x0276, r25	; 0x800276 <xNextTaskUnblockTime+0x1>
    13b6:	80 93 75 02 	sts	0x0275, r24	; 0x800275 <xNextTaskUnblockTime>
    13ba:	08 95       	ret

000013bc <prvAddCurrentTaskToDelayedList>:
    13bc:	ff 92       	push	r15
    13be:	0f 93       	push	r16
    13c0:	1f 93       	push	r17
    13c2:	cf 93       	push	r28
    13c4:	df 93       	push	r29
    13c6:	ec 01       	movw	r28, r24
    13c8:	f6 2e       	mov	r15, r22
    13ca:	00 91 7d 02 	lds	r16, 0x027D	; 0x80027d <xTickCount>
    13ce:	10 91 7e 02 	lds	r17, 0x027E	; 0x80027e <xTickCount+0x1>
    13d2:	80 91 d6 02 	lds	r24, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    13d6:	90 91 d7 02 	lds	r25, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    13da:	02 96       	adiw	r24, 0x02	; 2
    13dc:	61 d9       	rcall	.-3390   	; 0x6a0 <uxListRemove>
    13de:	cf 3f       	cpi	r28, 0xFF	; 255
    13e0:	8f ef       	ldi	r24, 0xFF	; 255
    13e2:	d8 07       	cpc	r29, r24
    13e4:	61 f4       	brne	.+24     	; 0x13fe <prvAddCurrentTaskToDelayedList+0x42>
    13e6:	ff 20       	and	r15, r15
    13e8:	51 f0       	breq	.+20     	; 0x13fe <prvAddCurrentTaskToDelayedList+0x42>
    13ea:	60 91 d6 02 	lds	r22, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    13ee:	70 91 d7 02 	lds	r23, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    13f2:	6e 5f       	subi	r22, 0xFE	; 254
    13f4:	7f 4f       	sbci	r23, 0xFF	; 255
    13f6:	80 e8       	ldi	r24, 0x80	; 128
    13f8:	92 e0       	ldi	r25, 0x02	; 2
    13fa:	00 d9       	rcall	.-3584   	; 0x5fc <vListInsertEnd>
    13fc:	2d c0       	rjmp	.+90     	; 0x1458 <prvAddCurrentTaskToDelayedList+0x9c>
    13fe:	c0 0f       	add	r28, r16
    1400:	d1 1f       	adc	r29, r17
    1402:	e0 91 d6 02 	lds	r30, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    1406:	f0 91 d7 02 	lds	r31, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    140a:	d3 83       	std	Z+3, r29	; 0x03
    140c:	c2 83       	std	Z+2, r28	; 0x02
    140e:	c0 17       	cp	r28, r16
    1410:	d1 07       	cpc	r29, r17
    1412:	60 f4       	brcc	.+24     	; 0x142c <prvAddCurrentTaskToDelayedList+0x70>
    1414:	60 91 d6 02 	lds	r22, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    1418:	70 91 d7 02 	lds	r23, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    141c:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <pxOverflowDelayedTaskList>
    1420:	90 91 9d 02 	lds	r25, 0x029D	; 0x80029d <pxOverflowDelayedTaskList+0x1>
    1424:	6e 5f       	subi	r22, 0xFE	; 254
    1426:	7f 4f       	sbci	r23, 0xFF	; 255
    1428:	0a d9       	rcall	.-3564   	; 0x63e <vListInsert>
    142a:	16 c0       	rjmp	.+44     	; 0x1458 <prvAddCurrentTaskToDelayedList+0x9c>
    142c:	60 91 d6 02 	lds	r22, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    1430:	70 91 d7 02 	lds	r23, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    1434:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <pxDelayedTaskList>
    1438:	90 91 9f 02 	lds	r25, 0x029F	; 0x80029f <pxDelayedTaskList+0x1>
    143c:	6e 5f       	subi	r22, 0xFE	; 254
    143e:	7f 4f       	sbci	r23, 0xFF	; 255
    1440:	fe d8       	rcall	.-3588   	; 0x63e <vListInsert>
    1442:	80 91 75 02 	lds	r24, 0x0275	; 0x800275 <xNextTaskUnblockTime>
    1446:	90 91 76 02 	lds	r25, 0x0276	; 0x800276 <xNextTaskUnblockTime+0x1>
    144a:	c8 17       	cp	r28, r24
    144c:	d9 07       	cpc	r29, r25
    144e:	20 f4       	brcc	.+8      	; 0x1458 <prvAddCurrentTaskToDelayedList+0x9c>
    1450:	d0 93 76 02 	sts	0x0276, r29	; 0x800276 <xNextTaskUnblockTime+0x1>
    1454:	c0 93 75 02 	sts	0x0275, r28	; 0x800275 <xNextTaskUnblockTime>
    1458:	df 91       	pop	r29
    145a:	cf 91       	pop	r28
    145c:	1f 91       	pop	r17
    145e:	0f 91       	pop	r16
    1460:	ff 90       	pop	r15
    1462:	08 95       	ret

00001464 <xTaskCreate>:
    1464:	4f 92       	push	r4
    1466:	5f 92       	push	r5
    1468:	6f 92       	push	r6
    146a:	7f 92       	push	r7
    146c:	8f 92       	push	r8
    146e:	9f 92       	push	r9
    1470:	af 92       	push	r10
    1472:	bf 92       	push	r11
    1474:	cf 92       	push	r12
    1476:	df 92       	push	r13
    1478:	ef 92       	push	r14
    147a:	ff 92       	push	r15
    147c:	0f 93       	push	r16
    147e:	cf 93       	push	r28
    1480:	df 93       	push	r29
    1482:	4c 01       	movw	r8, r24
    1484:	6b 01       	movw	r12, r22
    1486:	5a 01       	movw	r10, r20
    1488:	29 01       	movw	r4, r18
    148a:	ca 01       	movw	r24, r20
    148c:	0e 94 ab 01 	call	0x356	; 0x356 <pvPortMalloc>
    1490:	3c 01       	movw	r6, r24
    1492:	89 2b       	or	r24, r25
    1494:	09 f4       	brne	.+2      	; 0x1498 <xTaskCreate+0x34>
    1496:	df c0       	rjmp	.+446    	; 0x1656 <xTaskCreate+0x1f2>
    1498:	88 e2       	ldi	r24, 0x28	; 40
    149a:	90 e0       	ldi	r25, 0x00	; 0
    149c:	0e 94 ab 01 	call	0x356	; 0x356 <pvPortMalloc>
    14a0:	ec 01       	movw	r28, r24
    14a2:	89 2b       	or	r24, r25
    14a4:	b1 f0       	breq	.+44     	; 0x14d2 <xTaskCreate+0x6e>
    14a6:	78 8e       	std	Y+24, r7	; 0x18
    14a8:	6f 8a       	std	Y+23, r6	; 0x17
    14aa:	a5 01       	movw	r20, r10
    14ac:	65 ea       	ldi	r22, 0xA5	; 165
    14ae:	70 e0       	ldi	r23, 0x00	; 0
    14b0:	c3 01       	movw	r24, r6
    14b2:	0e 94 cc 13 	call	0x2798	; 0x2798 <memset>
    14b6:	81 e0       	ldi	r24, 0x01	; 1
    14b8:	a8 1a       	sub	r10, r24
    14ba:	b1 08       	sbc	r11, r1
    14bc:	8f 89       	ldd	r24, Y+23	; 0x17
    14be:	98 8d       	ldd	r25, Y+24	; 0x18
    14c0:	a8 0e       	add	r10, r24
    14c2:	b9 1e       	adc	r11, r25
    14c4:	d6 01       	movw	r26, r12
    14c6:	8c 91       	ld	r24, X
    14c8:	89 8f       	std	Y+25, r24	; 0x19
    14ca:	8c 91       	ld	r24, X
    14cc:	81 11       	cpse	r24, r1
    14ce:	05 c0       	rjmp	.+10     	; 0x14da <xTaskCreate+0x76>
    14d0:	18 c0       	rjmp	.+48     	; 0x1502 <xTaskCreate+0x9e>
    14d2:	c3 01       	movw	r24, r6
    14d4:	0e 94 bd 01 	call	0x37a	; 0x37a <vPortFree>
    14d8:	be c0       	rjmp	.+380    	; 0x1656 <xTaskCreate+0x1f2>
    14da:	ae 01       	movw	r20, r28
    14dc:	46 5e       	subi	r20, 0xE6	; 230
    14de:	5f 4f       	sbci	r21, 0xFF	; 255
    14e0:	f6 01       	movw	r30, r12
    14e2:	31 96       	adiw	r30, 0x01	; 1
    14e4:	b8 e0       	ldi	r27, 0x08	; 8
    14e6:	cb 0e       	add	r12, r27
    14e8:	d1 1c       	adc	r13, r1
    14ea:	cf 01       	movw	r24, r30
    14ec:	21 91       	ld	r18, Z+
    14ee:	da 01       	movw	r26, r20
    14f0:	2d 93       	st	X+, r18
    14f2:	ad 01       	movw	r20, r26
    14f4:	dc 01       	movw	r26, r24
    14f6:	8c 91       	ld	r24, X
    14f8:	88 23       	and	r24, r24
    14fa:	19 f0       	breq	.+6      	; 0x1502 <xTaskCreate+0x9e>
    14fc:	ec 15       	cp	r30, r12
    14fe:	fd 05       	cpc	r31, r13
    1500:	a1 f7       	brne	.-24     	; 0x14ea <xTaskCreate+0x86>
    1502:	18 a2       	std	Y+32, r1	; 0x20
    1504:	04 30       	cpi	r16, 0x04	; 4
    1506:	08 f0       	brcs	.+2      	; 0x150a <xTaskCreate+0xa6>
    1508:	03 e0       	ldi	r16, 0x03	; 3
    150a:	0e 8b       	std	Y+22, r16	; 0x16
    150c:	09 a3       	std	Y+33, r16	; 0x21
    150e:	1a a2       	std	Y+34, r1	; 0x22
    1510:	6e 01       	movw	r12, r28
    1512:	b2 e0       	ldi	r27, 0x02	; 2
    1514:	cb 0e       	add	r12, r27
    1516:	d1 1c       	adc	r13, r1
    1518:	c6 01       	movw	r24, r12
    151a:	6c d8       	rcall	.-3880   	; 0x5f4 <vListInitialiseItem>
    151c:	ce 01       	movw	r24, r28
    151e:	0c 96       	adiw	r24, 0x0c	; 12
    1520:	69 d8       	rcall	.-3886   	; 0x5f4 <vListInitialiseItem>
    1522:	d9 87       	std	Y+9, r29	; 0x09
    1524:	c8 87       	std	Y+8, r28	; 0x08
    1526:	84 e0       	ldi	r24, 0x04	; 4
    1528:	90 e0       	ldi	r25, 0x00	; 0
    152a:	80 1b       	sub	r24, r16
    152c:	91 09       	sbc	r25, r1
    152e:	9d 87       	std	Y+13, r25	; 0x0d
    1530:	8c 87       	std	Y+12, r24	; 0x0c
    1532:	db 8b       	std	Y+19, r29	; 0x13
    1534:	ca 8b       	std	Y+18, r28	; 0x12
    1536:	1b a2       	std	Y+35, r1	; 0x23
    1538:	1c a2       	std	Y+36, r1	; 0x24
    153a:	1d a2       	std	Y+37, r1	; 0x25
    153c:	1e a2       	std	Y+38, r1	; 0x26
    153e:	1f a2       	std	Y+39, r1	; 0x27
    1540:	a2 01       	movw	r20, r4
    1542:	b4 01       	movw	r22, r8
    1544:	c5 01       	movw	r24, r10
    1546:	d2 d8       	rcall	.-3676   	; 0x6ec <pxPortInitialiseStack>
    1548:	99 83       	std	Y+1, r25	; 0x01
    154a:	88 83       	st	Y, r24
    154c:	e1 14       	cp	r14, r1
    154e:	f1 04       	cpc	r15, r1
    1550:	19 f0       	breq	.+6      	; 0x1558 <xTaskCreate+0xf4>
    1552:	f7 01       	movw	r30, r14
    1554:	d1 83       	std	Z+1, r29	; 0x01
    1556:	c0 83       	st	Z, r28
    1558:	0f b6       	in	r0, 0x3f	; 63
    155a:	f8 94       	cli
    155c:	0f 92       	push	r0
    155e:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <uxCurrentNumberOfTasks>
    1562:	8f 5f       	subi	r24, 0xFF	; 255
    1564:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <uxCurrentNumberOfTasks>
    1568:	80 91 d6 02 	lds	r24, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    156c:	90 91 d7 02 	lds	r25, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    1570:	89 2b       	or	r24, r25
    1572:	89 f5       	brne	.+98     	; 0x15d6 <xTaskCreate+0x172>
    1574:	d0 93 d7 02 	sts	0x02D7, r29	; 0x8002d7 <pxCurrentTCB+0x1>
    1578:	c0 93 d6 02 	sts	0x02D6, r28	; 0x8002d6 <pxCurrentTCB>
    157c:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <uxCurrentNumberOfTasks>
    1580:	81 30       	cpi	r24, 0x01	; 1
    1582:	09 f0       	breq	.+2      	; 0x1586 <xTaskCreate+0x122>
    1584:	38 c0       	rjmp	.+112    	; 0x15f6 <xTaskCreate+0x192>
    1586:	82 eb       	ldi	r24, 0xB2	; 178
    1588:	92 e0       	ldi	r25, 0x02	; 2
    158a:	26 d8       	rcall	.-4020   	; 0x5d8 <vListInitialise>
    158c:	8b eb       	ldi	r24, 0xBB	; 187
    158e:	92 e0       	ldi	r25, 0x02	; 2
    1590:	23 d8       	rcall	.-4026   	; 0x5d8 <vListInitialise>
    1592:	84 ec       	ldi	r24, 0xC4	; 196
    1594:	92 e0       	ldi	r25, 0x02	; 2
    1596:	20 d8       	rcall	.-4032   	; 0x5d8 <vListInitialise>
    1598:	8d ec       	ldi	r24, 0xCD	; 205
    159a:	92 e0       	ldi	r25, 0x02	; 2
    159c:	1d d8       	rcall	.-4038   	; 0x5d8 <vListInitialise>
    159e:	89 ea       	ldi	r24, 0xA9	; 169
    15a0:	92 e0       	ldi	r25, 0x02	; 2
    15a2:	1a d8       	rcall	.-4044   	; 0x5d8 <vListInitialise>
    15a4:	80 ea       	ldi	r24, 0xA0	; 160
    15a6:	92 e0       	ldi	r25, 0x02	; 2
    15a8:	17 d8       	rcall	.-4050   	; 0x5d8 <vListInitialise>
    15aa:	83 e9       	ldi	r24, 0x93	; 147
    15ac:	92 e0       	ldi	r25, 0x02	; 2
    15ae:	14 d8       	rcall	.-4056   	; 0x5d8 <vListInitialise>
    15b0:	8a e8       	ldi	r24, 0x8A	; 138
    15b2:	92 e0       	ldi	r25, 0x02	; 2
    15b4:	11 d8       	rcall	.-4062   	; 0x5d8 <vListInitialise>
    15b6:	80 e8       	ldi	r24, 0x80	; 128
    15b8:	92 e0       	ldi	r25, 0x02	; 2
    15ba:	0e d8       	rcall	.-4068   	; 0x5d8 <vListInitialise>
    15bc:	89 ea       	ldi	r24, 0xA9	; 169
    15be:	92 e0       	ldi	r25, 0x02	; 2
    15c0:	90 93 9f 02 	sts	0x029F, r25	; 0x80029f <pxDelayedTaskList+0x1>
    15c4:	80 93 9e 02 	sts	0x029E, r24	; 0x80029e <pxDelayedTaskList>
    15c8:	80 ea       	ldi	r24, 0xA0	; 160
    15ca:	92 e0       	ldi	r25, 0x02	; 2
    15cc:	90 93 9d 02 	sts	0x029D, r25	; 0x80029d <pxOverflowDelayedTaskList+0x1>
    15d0:	80 93 9c 02 	sts	0x029C, r24	; 0x80029c <pxOverflowDelayedTaskList>
    15d4:	10 c0       	rjmp	.+32     	; 0x15f6 <xTaskCreate+0x192>
    15d6:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <xSchedulerRunning>
    15da:	81 11       	cpse	r24, r1
    15dc:	0c c0       	rjmp	.+24     	; 0x15f6 <xTaskCreate+0x192>
    15de:	e0 91 d6 02 	lds	r30, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    15e2:	f0 91 d7 02 	lds	r31, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    15e6:	96 89       	ldd	r25, Z+22	; 0x16
    15e8:	8e 89       	ldd	r24, Y+22	; 0x16
    15ea:	89 17       	cp	r24, r25
    15ec:	20 f0       	brcs	.+8      	; 0x15f6 <xTaskCreate+0x192>
    15ee:	d0 93 d7 02 	sts	0x02D7, r29	; 0x8002d7 <pxCurrentTCB+0x1>
    15f2:	c0 93 d6 02 	sts	0x02D6, r28	; 0x8002d6 <pxCurrentTCB>
    15f6:	80 91 77 02 	lds	r24, 0x0277	; 0x800277 <uxTaskNumber>
    15fa:	8f 5f       	subi	r24, 0xFF	; 255
    15fc:	80 93 77 02 	sts	0x0277, r24	; 0x800277 <uxTaskNumber>
    1600:	8e 89       	ldd	r24, Y+22	; 0x16
    1602:	90 91 7c 02 	lds	r25, 0x027C	; 0x80027c <uxTopReadyPriority>
    1606:	98 17       	cp	r25, r24
    1608:	10 f4       	brcc	.+4      	; 0x160e <xTaskCreate+0x1aa>
    160a:	80 93 7c 02 	sts	0x027C, r24	; 0x80027c <uxTopReadyPriority>
    160e:	90 e0       	ldi	r25, 0x00	; 0
    1610:	9c 01       	movw	r18, r24
    1612:	22 0f       	add	r18, r18
    1614:	33 1f       	adc	r19, r19
    1616:	22 0f       	add	r18, r18
    1618:	33 1f       	adc	r19, r19
    161a:	22 0f       	add	r18, r18
    161c:	33 1f       	adc	r19, r19
    161e:	82 0f       	add	r24, r18
    1620:	93 1f       	adc	r25, r19
    1622:	b6 01       	movw	r22, r12
    1624:	8e 54       	subi	r24, 0x4E	; 78
    1626:	9d 4f       	sbci	r25, 0xFD	; 253
    1628:	0e 94 fe 02 	call	0x5fc	; 0x5fc <vListInsertEnd>
    162c:	0f 90       	pop	r0
    162e:	0f be       	out	0x3f, r0	; 63
    1630:	80 91 7b 02 	lds	r24, 0x027B	; 0x80027b <xSchedulerRunning>
    1634:	88 23       	and	r24, r24
    1636:	59 f0       	breq	.+22     	; 0x164e <xTaskCreate+0x1ea>
    1638:	e0 91 d6 02 	lds	r30, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    163c:	f0 91 d7 02 	lds	r31, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    1640:	96 89       	ldd	r25, Z+22	; 0x16
    1642:	8e 89       	ldd	r24, Y+22	; 0x16
    1644:	98 17       	cp	r25, r24
    1646:	28 f4       	brcc	.+10     	; 0x1652 <xTaskCreate+0x1ee>
    1648:	09 d9       	rcall	.-3566   	; 0x85c <vPortYield>
    164a:	81 e0       	ldi	r24, 0x01	; 1
    164c:	05 c0       	rjmp	.+10     	; 0x1658 <xTaskCreate+0x1f4>
    164e:	81 e0       	ldi	r24, 0x01	; 1
    1650:	03 c0       	rjmp	.+6      	; 0x1658 <xTaskCreate+0x1f4>
    1652:	81 e0       	ldi	r24, 0x01	; 1
    1654:	01 c0       	rjmp	.+2      	; 0x1658 <xTaskCreate+0x1f4>
    1656:	8f ef       	ldi	r24, 0xFF	; 255
    1658:	df 91       	pop	r29
    165a:	cf 91       	pop	r28
    165c:	0f 91       	pop	r16
    165e:	ff 90       	pop	r15
    1660:	ef 90       	pop	r14
    1662:	df 90       	pop	r13
    1664:	cf 90       	pop	r12
    1666:	bf 90       	pop	r11
    1668:	af 90       	pop	r10
    166a:	9f 90       	pop	r9
    166c:	8f 90       	pop	r8
    166e:	7f 90       	pop	r7
    1670:	6f 90       	pop	r6
    1672:	5f 90       	pop	r5
    1674:	4f 90       	pop	r4
    1676:	08 95       	ret

00001678 <vTaskStartScheduler>:
    1678:	ef 92       	push	r14
    167a:	ff 92       	push	r15
    167c:	0f 93       	push	r16
    167e:	0f 2e       	mov	r0, r31
    1680:	f3 e7       	ldi	r31, 0x73	; 115
    1682:	ef 2e       	mov	r14, r31
    1684:	f2 e0       	ldi	r31, 0x02	; 2
    1686:	ff 2e       	mov	r15, r31
    1688:	f0 2d       	mov	r31, r0
    168a:	00 e0       	ldi	r16, 0x00	; 0
    168c:	20 e0       	ldi	r18, 0x00	; 0
    168e:	30 e0       	ldi	r19, 0x00	; 0
    1690:	45 e5       	ldi	r20, 0x55	; 85
    1692:	50 e0       	ldi	r21, 0x00	; 0
    1694:	67 e0       	ldi	r22, 0x07	; 7
    1696:	72 e0       	ldi	r23, 0x02	; 2
    1698:	83 e3       	ldi	r24, 0x33	; 51
    169a:	91 e0       	ldi	r25, 0x01	; 1
    169c:	e3 de       	rcall	.-570    	; 0x1464 <xTaskCreate>
    169e:	81 30       	cpi	r24, 0x01	; 1
    16a0:	79 f4       	brne	.+30     	; 0x16c0 <vTaskStartScheduler+0x48>
    16a2:	f8 94       	cli
    16a4:	8f ef       	ldi	r24, 0xFF	; 255
    16a6:	9f ef       	ldi	r25, 0xFF	; 255
    16a8:	90 93 76 02 	sts	0x0276, r25	; 0x800276 <xNextTaskUnblockTime+0x1>
    16ac:	80 93 75 02 	sts	0x0275, r24	; 0x800275 <xNextTaskUnblockTime>
    16b0:	81 e0       	ldi	r24, 0x01	; 1
    16b2:	80 93 7b 02 	sts	0x027B, r24	; 0x80027b <xSchedulerRunning>
    16b6:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <xTickCount+0x1>
    16ba:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <xTickCount>
    16be:	88 d8       	rcall	.-3824   	; 0x7d0 <xPortStartScheduler>
    16c0:	0f 91       	pop	r16
    16c2:	ff 90       	pop	r15
    16c4:	ef 90       	pop	r14
    16c6:	08 95       	ret

000016c8 <vTaskSuspendAll>:
    16c8:	80 91 72 02 	lds	r24, 0x0272	; 0x800272 <uxSchedulerSuspended>
    16cc:	8f 5f       	subi	r24, 0xFF	; 255
    16ce:	80 93 72 02 	sts	0x0272, r24	; 0x800272 <uxSchedulerSuspended>
    16d2:	08 95       	ret

000016d4 <xTaskIncrementTick>:
    16d4:	cf 92       	push	r12
    16d6:	df 92       	push	r13
    16d8:	ef 92       	push	r14
    16da:	ff 92       	push	r15
    16dc:	0f 93       	push	r16
    16de:	1f 93       	push	r17
    16e0:	cf 93       	push	r28
    16e2:	df 93       	push	r29
    16e4:	80 91 72 02 	lds	r24, 0x0272	; 0x800272 <uxSchedulerSuspended>
    16e8:	81 11       	cpse	r24, r1
    16ea:	98 c0       	rjmp	.+304    	; 0x181c <xTaskIncrementTick+0x148>
    16ec:	e0 90 7d 02 	lds	r14, 0x027D	; 0x80027d <xTickCount>
    16f0:	f0 90 7e 02 	lds	r15, 0x027E	; 0x80027e <xTickCount+0x1>
    16f4:	8f ef       	ldi	r24, 0xFF	; 255
    16f6:	e8 1a       	sub	r14, r24
    16f8:	f8 0a       	sbc	r15, r24
    16fa:	f0 92 7e 02 	sts	0x027E, r15	; 0x80027e <xTickCount+0x1>
    16fe:	e0 92 7d 02 	sts	0x027D, r14	; 0x80027d <xTickCount>
    1702:	e1 14       	cp	r14, r1
    1704:	f1 04       	cpc	r15, r1
    1706:	b1 f4       	brne	.+44     	; 0x1734 <xTaskIncrementTick+0x60>
    1708:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <pxDelayedTaskList>
    170c:	90 91 9f 02 	lds	r25, 0x029F	; 0x80029f <pxDelayedTaskList+0x1>
    1710:	20 91 9c 02 	lds	r18, 0x029C	; 0x80029c <pxOverflowDelayedTaskList>
    1714:	30 91 9d 02 	lds	r19, 0x029D	; 0x80029d <pxOverflowDelayedTaskList+0x1>
    1718:	30 93 9f 02 	sts	0x029F, r19	; 0x80029f <pxDelayedTaskList+0x1>
    171c:	20 93 9e 02 	sts	0x029E, r18	; 0x80029e <pxDelayedTaskList>
    1720:	90 93 9d 02 	sts	0x029D, r25	; 0x80029d <pxOverflowDelayedTaskList+0x1>
    1724:	80 93 9c 02 	sts	0x029C, r24	; 0x80029c <pxOverflowDelayedTaskList>
    1728:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <xNumOfOverflows>
    172c:	8f 5f       	subi	r24, 0xFF	; 255
    172e:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <xNumOfOverflows>
    1732:	25 de       	rcall	.-950    	; 0x137e <prvResetNextTaskUnblockTime>
    1734:	80 91 75 02 	lds	r24, 0x0275	; 0x800275 <xNextTaskUnblockTime>
    1738:	90 91 76 02 	lds	r25, 0x0276	; 0x800276 <xNextTaskUnblockTime+0x1>
    173c:	e8 16       	cp	r14, r24
    173e:	f9 06       	cpc	r15, r25
    1740:	10 f4       	brcc	.+4      	; 0x1746 <xTaskIncrementTick+0x72>
    1742:	d1 2c       	mov	r13, r1
    1744:	53 c0       	rjmp	.+166    	; 0x17ec <xTaskIncrementTick+0x118>
    1746:	d1 2c       	mov	r13, r1
    1748:	cc 24       	eor	r12, r12
    174a:	c3 94       	inc	r12
    174c:	e0 91 9e 02 	lds	r30, 0x029E	; 0x80029e <pxDelayedTaskList>
    1750:	f0 91 9f 02 	lds	r31, 0x029F	; 0x80029f <pxDelayedTaskList+0x1>
    1754:	80 81       	ld	r24, Z
    1756:	81 11       	cpse	r24, r1
    1758:	07 c0       	rjmp	.+14     	; 0x1768 <xTaskIncrementTick+0x94>
    175a:	8f ef       	ldi	r24, 0xFF	; 255
    175c:	9f ef       	ldi	r25, 0xFF	; 255
    175e:	90 93 76 02 	sts	0x0276, r25	; 0x800276 <xNextTaskUnblockTime+0x1>
    1762:	80 93 75 02 	sts	0x0275, r24	; 0x800275 <xNextTaskUnblockTime>
    1766:	42 c0       	rjmp	.+132    	; 0x17ec <xTaskIncrementTick+0x118>
    1768:	e0 91 9e 02 	lds	r30, 0x029E	; 0x80029e <pxDelayedTaskList>
    176c:	f0 91 9f 02 	lds	r31, 0x029F	; 0x80029f <pxDelayedTaskList+0x1>
    1770:	05 80       	ldd	r0, Z+5	; 0x05
    1772:	f6 81       	ldd	r31, Z+6	; 0x06
    1774:	e0 2d       	mov	r30, r0
    1776:	c6 81       	ldd	r28, Z+6	; 0x06
    1778:	d7 81       	ldd	r29, Z+7	; 0x07
    177a:	8a 81       	ldd	r24, Y+2	; 0x02
    177c:	9b 81       	ldd	r25, Y+3	; 0x03
    177e:	e8 16       	cp	r14, r24
    1780:	f9 06       	cpc	r15, r25
    1782:	28 f4       	brcc	.+10     	; 0x178e <xTaskIncrementTick+0xba>
    1784:	90 93 76 02 	sts	0x0276, r25	; 0x800276 <xNextTaskUnblockTime+0x1>
    1788:	80 93 75 02 	sts	0x0275, r24	; 0x800275 <xNextTaskUnblockTime>
    178c:	2f c0       	rjmp	.+94     	; 0x17ec <xTaskIncrementTick+0x118>
    178e:	8e 01       	movw	r16, r28
    1790:	0e 5f       	subi	r16, 0xFE	; 254
    1792:	1f 4f       	sbci	r17, 0xFF	; 255
    1794:	c8 01       	movw	r24, r16
    1796:	0e 94 50 03 	call	0x6a0	; 0x6a0 <uxListRemove>
    179a:	8c 89       	ldd	r24, Y+20	; 0x14
    179c:	9d 89       	ldd	r25, Y+21	; 0x15
    179e:	89 2b       	or	r24, r25
    17a0:	21 f0       	breq	.+8      	; 0x17aa <xTaskIncrementTick+0xd6>
    17a2:	ce 01       	movw	r24, r28
    17a4:	0c 96       	adiw	r24, 0x0c	; 12
    17a6:	0e 94 50 03 	call	0x6a0	; 0x6a0 <uxListRemove>
    17aa:	8e 89       	ldd	r24, Y+22	; 0x16
    17ac:	90 91 7c 02 	lds	r25, 0x027C	; 0x80027c <uxTopReadyPriority>
    17b0:	98 17       	cp	r25, r24
    17b2:	10 f4       	brcc	.+4      	; 0x17b8 <xTaskIncrementTick+0xe4>
    17b4:	80 93 7c 02 	sts	0x027C, r24	; 0x80027c <uxTopReadyPriority>
    17b8:	90 e0       	ldi	r25, 0x00	; 0
    17ba:	9c 01       	movw	r18, r24
    17bc:	22 0f       	add	r18, r18
    17be:	33 1f       	adc	r19, r19
    17c0:	22 0f       	add	r18, r18
    17c2:	33 1f       	adc	r19, r19
    17c4:	22 0f       	add	r18, r18
    17c6:	33 1f       	adc	r19, r19
    17c8:	82 0f       	add	r24, r18
    17ca:	93 1f       	adc	r25, r19
    17cc:	b8 01       	movw	r22, r16
    17ce:	8e 54       	subi	r24, 0x4E	; 78
    17d0:	9d 4f       	sbci	r25, 0xFD	; 253
    17d2:	0e 94 fe 02 	call	0x5fc	; 0x5fc <vListInsertEnd>
    17d6:	e0 91 d6 02 	lds	r30, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    17da:	f0 91 d7 02 	lds	r31, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    17de:	9e 89       	ldd	r25, Y+22	; 0x16
    17e0:	86 89       	ldd	r24, Z+22	; 0x16
    17e2:	98 17       	cp	r25, r24
    17e4:	08 f4       	brcc	.+2      	; 0x17e8 <xTaskIncrementTick+0x114>
    17e6:	b2 cf       	rjmp	.-156    	; 0x174c <xTaskIncrementTick+0x78>
    17e8:	dc 2c       	mov	r13, r12
    17ea:	b0 cf       	rjmp	.-160    	; 0x174c <xTaskIncrementTick+0x78>
    17ec:	e0 91 d6 02 	lds	r30, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    17f0:	f0 91 d7 02 	lds	r31, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    17f4:	86 89       	ldd	r24, Z+22	; 0x16
    17f6:	90 e0       	ldi	r25, 0x00	; 0
    17f8:	fc 01       	movw	r30, r24
    17fa:	ee 0f       	add	r30, r30
    17fc:	ff 1f       	adc	r31, r31
    17fe:	ee 0f       	add	r30, r30
    1800:	ff 1f       	adc	r31, r31
    1802:	ee 0f       	add	r30, r30
    1804:	ff 1f       	adc	r31, r31
    1806:	8e 0f       	add	r24, r30
    1808:	9f 1f       	adc	r25, r31
    180a:	fc 01       	movw	r30, r24
    180c:	ee 54       	subi	r30, 0x4E	; 78
    180e:	fd 4f       	sbci	r31, 0xFD	; 253
    1810:	80 81       	ld	r24, Z
    1812:	82 30       	cpi	r24, 0x02	; 2
    1814:	48 f0       	brcs	.+18     	; 0x1828 <xTaskIncrementTick+0x154>
    1816:	dd 24       	eor	r13, r13
    1818:	d3 94       	inc	r13
    181a:	06 c0       	rjmp	.+12     	; 0x1828 <xTaskIncrementTick+0x154>
    181c:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <uxPendedTicks>
    1820:	8f 5f       	subi	r24, 0xFF	; 255
    1822:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <uxPendedTicks>
    1826:	d1 2c       	mov	r13, r1
    1828:	80 91 79 02 	lds	r24, 0x0279	; 0x800279 <xYieldPending>
    182c:	88 23       	and	r24, r24
    182e:	11 f0       	breq	.+4      	; 0x1834 <xTaskIncrementTick+0x160>
    1830:	dd 24       	eor	r13, r13
    1832:	d3 94       	inc	r13
    1834:	8d 2d       	mov	r24, r13
    1836:	df 91       	pop	r29
    1838:	cf 91       	pop	r28
    183a:	1f 91       	pop	r17
    183c:	0f 91       	pop	r16
    183e:	ff 90       	pop	r15
    1840:	ef 90       	pop	r14
    1842:	df 90       	pop	r13
    1844:	cf 90       	pop	r12
    1846:	08 95       	ret

00001848 <xTaskResumeAll>:
    1848:	df 92       	push	r13
    184a:	ef 92       	push	r14
    184c:	ff 92       	push	r15
    184e:	0f 93       	push	r16
    1850:	1f 93       	push	r17
    1852:	cf 93       	push	r28
    1854:	df 93       	push	r29
    1856:	0f b6       	in	r0, 0x3f	; 63
    1858:	f8 94       	cli
    185a:	0f 92       	push	r0
    185c:	80 91 72 02 	lds	r24, 0x0272	; 0x800272 <uxSchedulerSuspended>
    1860:	81 50       	subi	r24, 0x01	; 1
    1862:	80 93 72 02 	sts	0x0272, r24	; 0x800272 <uxSchedulerSuspended>
    1866:	80 91 72 02 	lds	r24, 0x0272	; 0x800272 <uxSchedulerSuspended>
    186a:	81 11       	cpse	r24, r1
    186c:	5d c0       	rjmp	.+186    	; 0x1928 <xTaskResumeAll+0xe0>
    186e:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <uxCurrentNumberOfTasks>
    1872:	81 11       	cpse	r24, r1
    1874:	33 c0       	rjmp	.+102    	; 0x18dc <xTaskResumeAll+0x94>
    1876:	5b c0       	rjmp	.+182    	; 0x192e <xTaskResumeAll+0xe6>
    1878:	d7 01       	movw	r26, r14
    187a:	15 96       	adiw	r26, 0x05	; 5
    187c:	ed 91       	ld	r30, X+
    187e:	fc 91       	ld	r31, X
    1880:	16 97       	sbiw	r26, 0x06	; 6
    1882:	c6 81       	ldd	r28, Z+6	; 0x06
    1884:	d7 81       	ldd	r29, Z+7	; 0x07
    1886:	ce 01       	movw	r24, r28
    1888:	0c 96       	adiw	r24, 0x0c	; 12
    188a:	0e 94 50 03 	call	0x6a0	; 0x6a0 <uxListRemove>
    188e:	8e 01       	movw	r16, r28
    1890:	0e 5f       	subi	r16, 0xFE	; 254
    1892:	1f 4f       	sbci	r17, 0xFF	; 255
    1894:	c8 01       	movw	r24, r16
    1896:	0e 94 50 03 	call	0x6a0	; 0x6a0 <uxListRemove>
    189a:	8e 89       	ldd	r24, Y+22	; 0x16
    189c:	90 91 7c 02 	lds	r25, 0x027C	; 0x80027c <uxTopReadyPriority>
    18a0:	98 17       	cp	r25, r24
    18a2:	10 f4       	brcc	.+4      	; 0x18a8 <xTaskResumeAll+0x60>
    18a4:	80 93 7c 02 	sts	0x027C, r24	; 0x80027c <uxTopReadyPriority>
    18a8:	90 e0       	ldi	r25, 0x00	; 0
    18aa:	9c 01       	movw	r18, r24
    18ac:	22 0f       	add	r18, r18
    18ae:	33 1f       	adc	r19, r19
    18b0:	22 0f       	add	r18, r18
    18b2:	33 1f       	adc	r19, r19
    18b4:	22 0f       	add	r18, r18
    18b6:	33 1f       	adc	r19, r19
    18b8:	82 0f       	add	r24, r18
    18ba:	93 1f       	adc	r25, r19
    18bc:	b8 01       	movw	r22, r16
    18be:	8e 54       	subi	r24, 0x4E	; 78
    18c0:	9d 4f       	sbci	r25, 0xFD	; 253
    18c2:	0e 94 fe 02 	call	0x5fc	; 0x5fc <vListInsertEnd>
    18c6:	e0 91 d6 02 	lds	r30, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    18ca:	f0 91 d7 02 	lds	r31, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    18ce:	9e 89       	ldd	r25, Y+22	; 0x16
    18d0:	86 89       	ldd	r24, Z+22	; 0x16
    18d2:	98 17       	cp	r25, r24
    18d4:	68 f0       	brcs	.+26     	; 0x18f0 <xTaskResumeAll+0xa8>
    18d6:	d0 92 79 02 	sts	0x0279, r13	; 0x800279 <xYieldPending>
    18da:	0a c0       	rjmp	.+20     	; 0x18f0 <xTaskResumeAll+0xa8>
    18dc:	c0 e0       	ldi	r28, 0x00	; 0
    18de:	d0 e0       	ldi	r29, 0x00	; 0
    18e0:	0f 2e       	mov	r0, r31
    18e2:	f3 e9       	ldi	r31, 0x93	; 147
    18e4:	ef 2e       	mov	r14, r31
    18e6:	f2 e0       	ldi	r31, 0x02	; 2
    18e8:	ff 2e       	mov	r15, r31
    18ea:	f0 2d       	mov	r31, r0
    18ec:	dd 24       	eor	r13, r13
    18ee:	d3 94       	inc	r13
    18f0:	f7 01       	movw	r30, r14
    18f2:	80 81       	ld	r24, Z
    18f4:	81 11       	cpse	r24, r1
    18f6:	c0 cf       	rjmp	.-128    	; 0x1878 <xTaskResumeAll+0x30>
    18f8:	cd 2b       	or	r28, r29
    18fa:	09 f0       	breq	.+2      	; 0x18fe <xTaskResumeAll+0xb6>
    18fc:	40 dd       	rcall	.-1408   	; 0x137e <prvResetNextTaskUnblockTime>
    18fe:	c0 91 7a 02 	lds	r28, 0x027A	; 0x80027a <uxPendedTicks>
    1902:	cc 23       	and	r28, r28
    1904:	49 f0       	breq	.+18     	; 0x1918 <xTaskResumeAll+0xd0>
    1906:	d1 e0       	ldi	r29, 0x01	; 1
    1908:	e5 de       	rcall	.-566    	; 0x16d4 <xTaskIncrementTick>
    190a:	81 11       	cpse	r24, r1
    190c:	d0 93 79 02 	sts	0x0279, r29	; 0x800279 <xYieldPending>
    1910:	c1 50       	subi	r28, 0x01	; 1
    1912:	d1 f7       	brne	.-12     	; 0x1908 <xTaskResumeAll+0xc0>
    1914:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <uxPendedTicks>
    1918:	80 91 79 02 	lds	r24, 0x0279	; 0x800279 <xYieldPending>
    191c:	88 23       	and	r24, r24
    191e:	31 f0       	breq	.+12     	; 0x192c <xTaskResumeAll+0xe4>
    1920:	0e 94 2e 04 	call	0x85c	; 0x85c <vPortYield>
    1924:	81 e0       	ldi	r24, 0x01	; 1
    1926:	03 c0       	rjmp	.+6      	; 0x192e <xTaskResumeAll+0xe6>
    1928:	80 e0       	ldi	r24, 0x00	; 0
    192a:	01 c0       	rjmp	.+2      	; 0x192e <xTaskResumeAll+0xe6>
    192c:	80 e0       	ldi	r24, 0x00	; 0
    192e:	0f 90       	pop	r0
    1930:	0f be       	out	0x3f, r0	; 63
    1932:	df 91       	pop	r29
    1934:	cf 91       	pop	r28
    1936:	1f 91       	pop	r17
    1938:	0f 91       	pop	r16
    193a:	ff 90       	pop	r15
    193c:	ef 90       	pop	r14
    193e:	df 90       	pop	r13
    1940:	08 95       	ret

00001942 <vTaskSwitchContext>:
    1942:	80 91 72 02 	lds	r24, 0x0272	; 0x800272 <uxSchedulerSuspended>
    1946:	88 23       	and	r24, r24
    1948:	21 f0       	breq	.+8      	; 0x1952 <vTaskSwitchContext+0x10>
    194a:	81 e0       	ldi	r24, 0x01	; 1
    194c:	80 93 79 02 	sts	0x0279, r24	; 0x800279 <xYieldPending>
    1950:	08 95       	ret
    1952:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <xYieldPending>
    1956:	a0 91 d6 02 	lds	r26, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    195a:	b0 91 d7 02 	lds	r27, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    195e:	e0 91 d6 02 	lds	r30, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    1962:	f0 91 d7 02 	lds	r31, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    1966:	2d 91       	ld	r18, X+
    1968:	3c 91       	ld	r19, X
    196a:	87 89       	ldd	r24, Z+23	; 0x17
    196c:	90 8d       	ldd	r25, Z+24	; 0x18
    196e:	82 17       	cp	r24, r18
    1970:	93 07       	cpc	r25, r19
    1972:	60 f0       	brcs	.+24     	; 0x198c <vTaskSwitchContext+0x4a>
    1974:	60 91 d6 02 	lds	r22, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    1978:	70 91 d7 02 	lds	r23, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    197c:	80 91 d6 02 	lds	r24, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    1980:	90 91 d7 02 	lds	r25, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    1984:	67 5e       	subi	r22, 0xE7	; 231
    1986:	7f 4f       	sbci	r23, 0xFF	; 255
    1988:	0e 94 ef 01 	call	0x3de	; 0x3de <vApplicationStackOverflowHook>
    198c:	20 91 7c 02 	lds	r18, 0x027C	; 0x80027c <uxTopReadyPriority>
    1990:	82 2f       	mov	r24, r18
    1992:	90 e0       	ldi	r25, 0x00	; 0
    1994:	fc 01       	movw	r30, r24
    1996:	ee 0f       	add	r30, r30
    1998:	ff 1f       	adc	r31, r31
    199a:	ee 0f       	add	r30, r30
    199c:	ff 1f       	adc	r31, r31
    199e:	ee 0f       	add	r30, r30
    19a0:	ff 1f       	adc	r31, r31
    19a2:	e8 0f       	add	r30, r24
    19a4:	f9 1f       	adc	r31, r25
    19a6:	ee 54       	subi	r30, 0x4E	; 78
    19a8:	fd 4f       	sbci	r31, 0xFD	; 253
    19aa:	30 81       	ld	r19, Z
    19ac:	31 11       	cpse	r19, r1
    19ae:	11 c0       	rjmp	.+34     	; 0x19d2 <vTaskSwitchContext+0x90>
    19b0:	21 50       	subi	r18, 0x01	; 1
    19b2:	82 2f       	mov	r24, r18
    19b4:	90 e0       	ldi	r25, 0x00	; 0
    19b6:	fc 01       	movw	r30, r24
    19b8:	ee 0f       	add	r30, r30
    19ba:	ff 1f       	adc	r31, r31
    19bc:	ee 0f       	add	r30, r30
    19be:	ff 1f       	adc	r31, r31
    19c0:	ee 0f       	add	r30, r30
    19c2:	ff 1f       	adc	r31, r31
    19c4:	e8 0f       	add	r30, r24
    19c6:	f9 1f       	adc	r31, r25
    19c8:	ee 54       	subi	r30, 0x4E	; 78
    19ca:	fd 4f       	sbci	r31, 0xFD	; 253
    19cc:	30 81       	ld	r19, Z
    19ce:	33 23       	and	r19, r19
    19d0:	79 f3       	breq	.-34     	; 0x19b0 <vTaskSwitchContext+0x6e>
    19d2:	ac 01       	movw	r20, r24
    19d4:	44 0f       	add	r20, r20
    19d6:	55 1f       	adc	r21, r21
    19d8:	44 0f       	add	r20, r20
    19da:	55 1f       	adc	r21, r21
    19dc:	44 0f       	add	r20, r20
    19de:	55 1f       	adc	r21, r21
    19e0:	48 0f       	add	r20, r24
    19e2:	59 1f       	adc	r21, r25
    19e4:	da 01       	movw	r26, r20
    19e6:	ae 54       	subi	r26, 0x4E	; 78
    19e8:	bd 4f       	sbci	r27, 0xFD	; 253
    19ea:	11 96       	adiw	r26, 0x01	; 1
    19ec:	ed 91       	ld	r30, X+
    19ee:	fc 91       	ld	r31, X
    19f0:	12 97       	sbiw	r26, 0x02	; 2
    19f2:	02 80       	ldd	r0, Z+2	; 0x02
    19f4:	f3 81       	ldd	r31, Z+3	; 0x03
    19f6:	e0 2d       	mov	r30, r0
    19f8:	12 96       	adiw	r26, 0x02	; 2
    19fa:	fc 93       	st	X, r31
    19fc:	ee 93       	st	-X, r30
    19fe:	11 97       	sbiw	r26, 0x01	; 1
    1a00:	4b 54       	subi	r20, 0x4B	; 75
    1a02:	5d 4f       	sbci	r21, 0xFD	; 253
    1a04:	e4 17       	cp	r30, r20
    1a06:	f5 07       	cpc	r31, r21
    1a08:	29 f4       	brne	.+10     	; 0x1a14 <vTaskSwitchContext+0xd2>
    1a0a:	42 81       	ldd	r20, Z+2	; 0x02
    1a0c:	53 81       	ldd	r21, Z+3	; 0x03
    1a0e:	fd 01       	movw	r30, r26
    1a10:	52 83       	std	Z+2, r21	; 0x02
    1a12:	41 83       	std	Z+1, r20	; 0x01
    1a14:	fc 01       	movw	r30, r24
    1a16:	ee 0f       	add	r30, r30
    1a18:	ff 1f       	adc	r31, r31
    1a1a:	ee 0f       	add	r30, r30
    1a1c:	ff 1f       	adc	r31, r31
    1a1e:	ee 0f       	add	r30, r30
    1a20:	ff 1f       	adc	r31, r31
    1a22:	8e 0f       	add	r24, r30
    1a24:	9f 1f       	adc	r25, r31
    1a26:	fc 01       	movw	r30, r24
    1a28:	ee 54       	subi	r30, 0x4E	; 78
    1a2a:	fd 4f       	sbci	r31, 0xFD	; 253
    1a2c:	01 80       	ldd	r0, Z+1	; 0x01
    1a2e:	f2 81       	ldd	r31, Z+2	; 0x02
    1a30:	e0 2d       	mov	r30, r0
    1a32:	86 81       	ldd	r24, Z+6	; 0x06
    1a34:	97 81       	ldd	r25, Z+7	; 0x07
    1a36:	90 93 d7 02 	sts	0x02D7, r25	; 0x8002d7 <pxCurrentTCB+0x1>
    1a3a:	80 93 d6 02 	sts	0x02D6, r24	; 0x8002d6 <pxCurrentTCB>
    1a3e:	20 93 7c 02 	sts	0x027C, r18	; 0x80027c <uxTopReadyPriority>
    1a42:	08 95       	ret

00001a44 <vTaskPlaceOnEventList>:
    1a44:	cf 93       	push	r28
    1a46:	df 93       	push	r29
    1a48:	eb 01       	movw	r28, r22
    1a4a:	60 91 d6 02 	lds	r22, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    1a4e:	70 91 d7 02 	lds	r23, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    1a52:	64 5f       	subi	r22, 0xF4	; 244
    1a54:	7f 4f       	sbci	r23, 0xFF	; 255
    1a56:	0e 94 1f 03 	call	0x63e	; 0x63e <vListInsert>
    1a5a:	61 e0       	ldi	r22, 0x01	; 1
    1a5c:	ce 01       	movw	r24, r28
    1a5e:	ae dc       	rcall	.-1700   	; 0x13bc <prvAddCurrentTaskToDelayedList>
    1a60:	df 91       	pop	r29
    1a62:	cf 91       	pop	r28
    1a64:	08 95       	ret

00001a66 <xTaskRemoveFromEventList>:
    1a66:	0f 93       	push	r16
    1a68:	1f 93       	push	r17
    1a6a:	cf 93       	push	r28
    1a6c:	df 93       	push	r29
    1a6e:	dc 01       	movw	r26, r24
    1a70:	15 96       	adiw	r26, 0x05	; 5
    1a72:	ed 91       	ld	r30, X+
    1a74:	fc 91       	ld	r31, X
    1a76:	16 97       	sbiw	r26, 0x06	; 6
    1a78:	c6 81       	ldd	r28, Z+6	; 0x06
    1a7a:	d7 81       	ldd	r29, Z+7	; 0x07
    1a7c:	8e 01       	movw	r16, r28
    1a7e:	04 5f       	subi	r16, 0xF4	; 244
    1a80:	1f 4f       	sbci	r17, 0xFF	; 255
    1a82:	c8 01       	movw	r24, r16
    1a84:	0e 94 50 03 	call	0x6a0	; 0x6a0 <uxListRemove>
    1a88:	80 91 72 02 	lds	r24, 0x0272	; 0x800272 <uxSchedulerSuspended>
    1a8c:	81 11       	cpse	r24, r1
    1a8e:	1c c0       	rjmp	.+56     	; 0x1ac8 <xTaskRemoveFromEventList+0x62>
    1a90:	0a 50       	subi	r16, 0x0A	; 10
    1a92:	11 09       	sbc	r17, r1
    1a94:	c8 01       	movw	r24, r16
    1a96:	0e 94 50 03 	call	0x6a0	; 0x6a0 <uxListRemove>
    1a9a:	8e 89       	ldd	r24, Y+22	; 0x16
    1a9c:	90 91 7c 02 	lds	r25, 0x027C	; 0x80027c <uxTopReadyPriority>
    1aa0:	98 17       	cp	r25, r24
    1aa2:	10 f4       	brcc	.+4      	; 0x1aa8 <xTaskRemoveFromEventList+0x42>
    1aa4:	80 93 7c 02 	sts	0x027C, r24	; 0x80027c <uxTopReadyPriority>
    1aa8:	90 e0       	ldi	r25, 0x00	; 0
    1aaa:	9c 01       	movw	r18, r24
    1aac:	22 0f       	add	r18, r18
    1aae:	33 1f       	adc	r19, r19
    1ab0:	22 0f       	add	r18, r18
    1ab2:	33 1f       	adc	r19, r19
    1ab4:	22 0f       	add	r18, r18
    1ab6:	33 1f       	adc	r19, r19
    1ab8:	82 0f       	add	r24, r18
    1aba:	93 1f       	adc	r25, r19
    1abc:	b8 01       	movw	r22, r16
    1abe:	8e 54       	subi	r24, 0x4E	; 78
    1ac0:	9d 4f       	sbci	r25, 0xFD	; 253
    1ac2:	0e 94 fe 02 	call	0x5fc	; 0x5fc <vListInsertEnd>
    1ac6:	05 c0       	rjmp	.+10     	; 0x1ad2 <xTaskRemoveFromEventList+0x6c>
    1ac8:	b8 01       	movw	r22, r16
    1aca:	83 e9       	ldi	r24, 0x93	; 147
    1acc:	92 e0       	ldi	r25, 0x02	; 2
    1ace:	0e 94 fe 02 	call	0x5fc	; 0x5fc <vListInsertEnd>
    1ad2:	e0 91 d6 02 	lds	r30, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    1ad6:	f0 91 d7 02 	lds	r31, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    1ada:	9e 89       	ldd	r25, Y+22	; 0x16
    1adc:	86 89       	ldd	r24, Z+22	; 0x16
    1ade:	89 17       	cp	r24, r25
    1ae0:	20 f4       	brcc	.+8      	; 0x1aea <xTaskRemoveFromEventList+0x84>
    1ae2:	81 e0       	ldi	r24, 0x01	; 1
    1ae4:	80 93 79 02 	sts	0x0279, r24	; 0x800279 <xYieldPending>
    1ae8:	01 c0       	rjmp	.+2      	; 0x1aec <xTaskRemoveFromEventList+0x86>
    1aea:	80 e0       	ldi	r24, 0x00	; 0
    1aec:	df 91       	pop	r29
    1aee:	cf 91       	pop	r28
    1af0:	1f 91       	pop	r17
    1af2:	0f 91       	pop	r16
    1af4:	08 95       	ret

00001af6 <vTaskSetTimeOutState>:
    1af6:	20 91 78 02 	lds	r18, 0x0278	; 0x800278 <xNumOfOverflows>
    1afa:	fc 01       	movw	r30, r24
    1afc:	20 83       	st	Z, r18
    1afe:	20 91 7d 02 	lds	r18, 0x027D	; 0x80027d <xTickCount>
    1b02:	30 91 7e 02 	lds	r19, 0x027E	; 0x80027e <xTickCount+0x1>
    1b06:	32 83       	std	Z+2, r19	; 0x02
    1b08:	21 83       	std	Z+1, r18	; 0x01
    1b0a:	08 95       	ret

00001b0c <xTaskCheckForTimeOut>:
    1b0c:	0f b6       	in	r0, 0x3f	; 63
    1b0e:	f8 94       	cli
    1b10:	0f 92       	push	r0
    1b12:	40 91 7d 02 	lds	r20, 0x027D	; 0x80027d <xTickCount>
    1b16:	50 91 7e 02 	lds	r21, 0x027E	; 0x80027e <xTickCount+0x1>
    1b1a:	db 01       	movw	r26, r22
    1b1c:	2d 91       	ld	r18, X+
    1b1e:	3c 91       	ld	r19, X
    1b20:	2f 3f       	cpi	r18, 0xFF	; 255
    1b22:	bf ef       	ldi	r27, 0xFF	; 255
    1b24:	3b 07       	cpc	r19, r27
    1b26:	11 f1       	breq	.+68     	; 0x1b6c <xTaskCheckForTimeOut+0x60>
    1b28:	e0 91 78 02 	lds	r30, 0x0278	; 0x800278 <xNumOfOverflows>
    1b2c:	dc 01       	movw	r26, r24
    1b2e:	fc 91       	ld	r31, X
    1b30:	fe 17       	cp	r31, r30
    1b32:	39 f0       	breq	.+14     	; 0x1b42 <xTaskCheckForTimeOut+0x36>
    1b34:	11 96       	adiw	r26, 0x01	; 1
    1b36:	ed 91       	ld	r30, X+
    1b38:	fc 91       	ld	r31, X
    1b3a:	12 97       	sbiw	r26, 0x02	; 2
    1b3c:	4e 17       	cp	r20, r30
    1b3e:	5f 07       	cpc	r21, r31
    1b40:	b8 f4       	brcc	.+46     	; 0x1b70 <xTaskCheckForTimeOut+0x64>
    1b42:	dc 01       	movw	r26, r24
    1b44:	11 96       	adiw	r26, 0x01	; 1
    1b46:	ed 91       	ld	r30, X+
    1b48:	fc 91       	ld	r31, X
    1b4a:	12 97       	sbiw	r26, 0x02	; 2
    1b4c:	da 01       	movw	r26, r20
    1b4e:	ae 1b       	sub	r26, r30
    1b50:	bf 0b       	sbc	r27, r31
    1b52:	a2 17       	cp	r26, r18
    1b54:	b3 07       	cpc	r27, r19
    1b56:	70 f4       	brcc	.+28     	; 0x1b74 <xTaskCheckForTimeOut+0x68>
    1b58:	db 01       	movw	r26, r22
    1b5a:	e4 1b       	sub	r30, r20
    1b5c:	f5 0b       	sbc	r31, r21
    1b5e:	2e 0f       	add	r18, r30
    1b60:	3f 1f       	adc	r19, r31
    1b62:	2d 93       	st	X+, r18
    1b64:	3c 93       	st	X, r19
    1b66:	c7 df       	rcall	.-114    	; 0x1af6 <vTaskSetTimeOutState>
    1b68:	80 e0       	ldi	r24, 0x00	; 0
    1b6a:	05 c0       	rjmp	.+10     	; 0x1b76 <xTaskCheckForTimeOut+0x6a>
    1b6c:	80 e0       	ldi	r24, 0x00	; 0
    1b6e:	03 c0       	rjmp	.+6      	; 0x1b76 <xTaskCheckForTimeOut+0x6a>
    1b70:	81 e0       	ldi	r24, 0x01	; 1
    1b72:	01 c0       	rjmp	.+2      	; 0x1b76 <xTaskCheckForTimeOut+0x6a>
    1b74:	81 e0       	ldi	r24, 0x01	; 1
    1b76:	0f 90       	pop	r0
    1b78:	0f be       	out	0x3f, r0	; 63
    1b7a:	08 95       	ret

00001b7c <vTaskMissedYield>:
    1b7c:	81 e0       	ldi	r24, 0x01	; 1
    1b7e:	80 93 79 02 	sts	0x0279, r24	; 0x800279 <xYieldPending>
    1b82:	08 95       	ret

00001b84 <vTaskPriorityInherit>:
    1b84:	0f 93       	push	r16
    1b86:	1f 93       	push	r17
    1b88:	cf 93       	push	r28
    1b8a:	df 93       	push	r29
    1b8c:	fc 01       	movw	r30, r24
    1b8e:	89 2b       	or	r24, r25
    1b90:	09 f4       	brne	.+2      	; 0x1b94 <vTaskPriorityInherit+0x10>
    1b92:	55 c0       	rjmp	.+170    	; 0x1c3e <vTaskPriorityInherit+0xba>
    1b94:	26 89       	ldd	r18, Z+22	; 0x16
    1b96:	a0 91 d6 02 	lds	r26, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    1b9a:	b0 91 d7 02 	lds	r27, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    1b9e:	56 96       	adiw	r26, 0x16	; 22
    1ba0:	8c 91       	ld	r24, X
    1ba2:	28 17       	cp	r18, r24
    1ba4:	08 f0       	brcs	.+2      	; 0x1ba8 <vTaskPriorityInherit+0x24>
    1ba6:	4b c0       	rjmp	.+150    	; 0x1c3e <vTaskPriorityInherit+0xba>
    1ba8:	84 85       	ldd	r24, Z+12	; 0x0c
    1baa:	95 85       	ldd	r25, Z+13	; 0x0d
    1bac:	99 23       	and	r25, r25
    1bae:	64 f0       	brlt	.+24     	; 0x1bc8 <vTaskPriorityInherit+0x44>
    1bb0:	a0 91 d6 02 	lds	r26, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    1bb4:	b0 91 d7 02 	lds	r27, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    1bb8:	56 96       	adiw	r26, 0x16	; 22
    1bba:	3c 91       	ld	r19, X
    1bbc:	84 e0       	ldi	r24, 0x04	; 4
    1bbe:	90 e0       	ldi	r25, 0x00	; 0
    1bc0:	83 1b       	sub	r24, r19
    1bc2:	91 09       	sbc	r25, r1
    1bc4:	95 87       	std	Z+13, r25	; 0x0d
    1bc6:	84 87       	std	Z+12, r24	; 0x0c
    1bc8:	30 e0       	ldi	r19, 0x00	; 0
    1bca:	c9 01       	movw	r24, r18
    1bcc:	88 0f       	add	r24, r24
    1bce:	99 1f       	adc	r25, r25
    1bd0:	88 0f       	add	r24, r24
    1bd2:	99 1f       	adc	r25, r25
    1bd4:	88 0f       	add	r24, r24
    1bd6:	99 1f       	adc	r25, r25
    1bd8:	28 0f       	add	r18, r24
    1bda:	39 1f       	adc	r19, r25
    1bdc:	2e 54       	subi	r18, 0x4E	; 78
    1bde:	3d 4f       	sbci	r19, 0xFD	; 253
    1be0:	82 85       	ldd	r24, Z+10	; 0x0a
    1be2:	93 85       	ldd	r25, Z+11	; 0x0b
    1be4:	82 17       	cp	r24, r18
    1be6:	93 07       	cpc	r25, r19
    1be8:	19 f5       	brne	.+70     	; 0x1c30 <vTaskPriorityInherit+0xac>
    1bea:	8f 01       	movw	r16, r30
    1bec:	ef 01       	movw	r28, r30
    1bee:	22 96       	adiw	r28, 0x02	; 2
    1bf0:	ce 01       	movw	r24, r28
    1bf2:	0e 94 50 03 	call	0x6a0	; 0x6a0 <uxListRemove>
    1bf6:	e0 91 d6 02 	lds	r30, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    1bfa:	f0 91 d7 02 	lds	r31, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    1bfe:	86 89       	ldd	r24, Z+22	; 0x16
    1c00:	f8 01       	movw	r30, r16
    1c02:	86 8b       	std	Z+22, r24	; 0x16
    1c04:	90 91 7c 02 	lds	r25, 0x027C	; 0x80027c <uxTopReadyPriority>
    1c08:	98 17       	cp	r25, r24
    1c0a:	10 f4       	brcc	.+4      	; 0x1c10 <vTaskPriorityInherit+0x8c>
    1c0c:	80 93 7c 02 	sts	0x027C, r24	; 0x80027c <uxTopReadyPriority>
    1c10:	90 e0       	ldi	r25, 0x00	; 0
    1c12:	9c 01       	movw	r18, r24
    1c14:	22 0f       	add	r18, r18
    1c16:	33 1f       	adc	r19, r19
    1c18:	22 0f       	add	r18, r18
    1c1a:	33 1f       	adc	r19, r19
    1c1c:	22 0f       	add	r18, r18
    1c1e:	33 1f       	adc	r19, r19
    1c20:	82 0f       	add	r24, r18
    1c22:	93 1f       	adc	r25, r19
    1c24:	be 01       	movw	r22, r28
    1c26:	8e 54       	subi	r24, 0x4E	; 78
    1c28:	9d 4f       	sbci	r25, 0xFD	; 253
    1c2a:	0e 94 fe 02 	call	0x5fc	; 0x5fc <vListInsertEnd>
    1c2e:	07 c0       	rjmp	.+14     	; 0x1c3e <vTaskPriorityInherit+0xba>
    1c30:	a0 91 d6 02 	lds	r26, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    1c34:	b0 91 d7 02 	lds	r27, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    1c38:	56 96       	adiw	r26, 0x16	; 22
    1c3a:	8c 91       	ld	r24, X
    1c3c:	86 8b       	std	Z+22, r24	; 0x16
    1c3e:	df 91       	pop	r29
    1c40:	cf 91       	pop	r28
    1c42:	1f 91       	pop	r17
    1c44:	0f 91       	pop	r16
    1c46:	08 95       	ret

00001c48 <xTaskPriorityDisinherit>:
    1c48:	0f 93       	push	r16
    1c4a:	1f 93       	push	r17
    1c4c:	cf 93       	push	r28
    1c4e:	df 93       	push	r29
    1c50:	fc 01       	movw	r30, r24
    1c52:	89 2b       	or	r24, r25
    1c54:	79 f1       	breq	.+94     	; 0x1cb4 <xTaskPriorityDisinherit+0x6c>
    1c56:	82 a1       	ldd	r24, Z+34	; 0x22
    1c58:	81 50       	subi	r24, 0x01	; 1
    1c5a:	82 a3       	std	Z+34, r24	; 0x22
    1c5c:	26 89       	ldd	r18, Z+22	; 0x16
    1c5e:	91 a1       	ldd	r25, Z+33	; 0x21
    1c60:	29 17       	cp	r18, r25
    1c62:	51 f1       	breq	.+84     	; 0x1cb8 <xTaskPriorityDisinherit+0x70>
    1c64:	81 11       	cpse	r24, r1
    1c66:	2a c0       	rjmp	.+84     	; 0x1cbc <xTaskPriorityDisinherit+0x74>
    1c68:	ef 01       	movw	r28, r30
    1c6a:	8f 01       	movw	r16, r30
    1c6c:	0e 5f       	subi	r16, 0xFE	; 254
    1c6e:	1f 4f       	sbci	r17, 0xFF	; 255
    1c70:	c8 01       	movw	r24, r16
    1c72:	0e 94 50 03 	call	0x6a0	; 0x6a0 <uxListRemove>
    1c76:	89 a1       	ldd	r24, Y+33	; 0x21
    1c78:	8e 8b       	std	Y+22, r24	; 0x16
    1c7a:	24 e0       	ldi	r18, 0x04	; 4
    1c7c:	30 e0       	ldi	r19, 0x00	; 0
    1c7e:	28 1b       	sub	r18, r24
    1c80:	31 09       	sbc	r19, r1
    1c82:	3d 87       	std	Y+13, r19	; 0x0d
    1c84:	2c 87       	std	Y+12, r18	; 0x0c
    1c86:	90 91 7c 02 	lds	r25, 0x027C	; 0x80027c <uxTopReadyPriority>
    1c8a:	98 17       	cp	r25, r24
    1c8c:	10 f4       	brcc	.+4      	; 0x1c92 <xTaskPriorityDisinherit+0x4a>
    1c8e:	80 93 7c 02 	sts	0x027C, r24	; 0x80027c <uxTopReadyPriority>
    1c92:	90 e0       	ldi	r25, 0x00	; 0
    1c94:	9c 01       	movw	r18, r24
    1c96:	22 0f       	add	r18, r18
    1c98:	33 1f       	adc	r19, r19
    1c9a:	22 0f       	add	r18, r18
    1c9c:	33 1f       	adc	r19, r19
    1c9e:	22 0f       	add	r18, r18
    1ca0:	33 1f       	adc	r19, r19
    1ca2:	82 0f       	add	r24, r18
    1ca4:	93 1f       	adc	r25, r19
    1ca6:	b8 01       	movw	r22, r16
    1ca8:	8e 54       	subi	r24, 0x4E	; 78
    1caa:	9d 4f       	sbci	r25, 0xFD	; 253
    1cac:	0e 94 fe 02 	call	0x5fc	; 0x5fc <vListInsertEnd>
    1cb0:	81 e0       	ldi	r24, 0x01	; 1
    1cb2:	05 c0       	rjmp	.+10     	; 0x1cbe <xTaskPriorityDisinherit+0x76>
    1cb4:	80 e0       	ldi	r24, 0x00	; 0
    1cb6:	03 c0       	rjmp	.+6      	; 0x1cbe <xTaskPriorityDisinherit+0x76>
    1cb8:	80 e0       	ldi	r24, 0x00	; 0
    1cba:	01 c0       	rjmp	.+2      	; 0x1cbe <xTaskPriorityDisinherit+0x76>
    1cbc:	80 e0       	ldi	r24, 0x00	; 0
    1cbe:	df 91       	pop	r29
    1cc0:	cf 91       	pop	r28
    1cc2:	1f 91       	pop	r17
    1cc4:	0f 91       	pop	r16
    1cc6:	08 95       	ret

00001cc8 <pvTaskIncrementMutexHeldCount>:
    1cc8:	80 91 d6 02 	lds	r24, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    1ccc:	90 91 d7 02 	lds	r25, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    1cd0:	89 2b       	or	r24, r25
    1cd2:	39 f0       	breq	.+14     	; 0x1ce2 <pvTaskIncrementMutexHeldCount+0x1a>
    1cd4:	e0 91 d6 02 	lds	r30, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    1cd8:	f0 91 d7 02 	lds	r31, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    1cdc:	82 a1       	ldd	r24, Z+34	; 0x22
    1cde:	8f 5f       	subi	r24, 0xFF	; 255
    1ce0:	82 a3       	std	Z+34, r24	; 0x22
    1ce2:	80 91 d6 02 	lds	r24, 0x02D6	; 0x8002d6 <pxCurrentTCB>
    1ce6:	90 91 d7 02 	lds	r25, 0x02D7	; 0x8002d7 <pxCurrentTCB+0x1>
    1cea:	08 95       	ret

00001cec <servoTaak>:
	}
}

void turnServo(uint8_t degrees)
{
	OCR1B = 20000 - (degrees * (1300 / 180) + 800);
    1cec:	40 e0       	ldi	r20, 0x00	; 0
    1cee:	50 e0       	ldi	r21, 0x00	; 0
    1cf0:	ea e8       	ldi	r30, 0x8A	; 138
    1cf2:	f0 e0       	ldi	r31, 0x00	; 0
    1cf4:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <hoek>
    1cf8:	90 91 75 04 	lds	r25, 0x0475	; 0x800475 <hoek+0x1>
    1cfc:	99 27       	eor	r25, r25
    1cfe:	9a 01       	movw	r18, r20
    1d00:	28 1b       	sub	r18, r24
    1d02:	39 0b       	sbc	r19, r25
    1d04:	22 0f       	add	r18, r18
    1d06:	33 1f       	adc	r19, r19
    1d08:	22 0f       	add	r18, r18
    1d0a:	33 1f       	adc	r19, r19
    1d0c:	22 0f       	add	r18, r18
    1d0e:	33 1f       	adc	r19, r19
    1d10:	82 0f       	add	r24, r18
    1d12:	93 1f       	adc	r25, r19
    1d14:	95 5b       	subi	r25, 0xB5	; 181
    1d16:	91 83       	std	Z+1, r25	; 0x01
    1d18:	80 83       	st	Z, r24
    1d1a:	ec cf       	rjmp	.-40     	; 0x1cf4 <servoTaak+0x8>

00001d1c <initQ>:
    1d1c:	40 e0       	ldi	r20, 0x00	; 0
    1d1e:	62 e0       	ldi	r22, 0x02	; 2
    1d20:	8a e0       	ldi	r24, 0x0A	; 10
    1d22:	0e 94 0f 06 	call	0xc1e	; 0xc1e <xQueueGenericCreate>
    1d26:	90 93 79 04 	sts	0x0479, r25	; 0x800479 <sonarAfstand+0x1>
    1d2a:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <sonarAfstand>
    1d2e:	89 2b       	or	r24, r25
    1d30:	49 f4       	brne	.+18     	; 0x1d44 <initQ+0x28>
    1d32:	40 e0       	ldi	r20, 0x00	; 0
    1d34:	62 e0       	ldi	r22, 0x02	; 2
    1d36:	8a e0       	ldi	r24, 0x0A	; 10
    1d38:	0e 94 0f 06 	call	0xc1e	; 0xc1e <xQueueGenericCreate>
    1d3c:	90 93 79 04 	sts	0x0479, r25	; 0x800479 <sonarAfstand+0x1>
    1d40:	80 93 78 04 	sts	0x0478, r24	; 0x800478 <sonarAfstand>
    1d44:	40 e0       	ldi	r20, 0x00	; 0
    1d46:	62 e0       	ldi	r22, 0x02	; 2
    1d48:	8a e0       	ldi	r24, 0x0A	; 10
    1d4a:	0e 94 0f 06 	call	0xc1e	; 0xc1e <xQueueGenericCreate>
    1d4e:	90 93 77 04 	sts	0x0477, r25	; 0x800477 <servoHoek+0x1>
    1d52:	80 93 76 04 	sts	0x0476, r24	; 0x800476 <servoHoek>
    1d56:	89 2b       	or	r24, r25
    1d58:	49 f4       	brne	.+18     	; 0x1d6c <initQ+0x50>
    1d5a:	40 e0       	ldi	r20, 0x00	; 0
    1d5c:	62 e0       	ldi	r22, 0x02	; 2
    1d5e:	8a e0       	ldi	r24, 0x0A	; 10
    1d60:	0e 94 0f 06 	call	0xc1e	; 0xc1e <xQueueGenericCreate>
    1d64:	90 93 77 04 	sts	0x0477, r25	; 0x800477 <servoHoek+0x1>
    1d68:	80 93 76 04 	sts	0x0476, r24	; 0x800476 <servoHoek>
    1d6c:	08 95       	ret

00001d6e <writeQ>:
    1d6e:	20 e0       	ldi	r18, 0x00	; 0
    1d70:	40 e0       	ldi	r20, 0x00	; 0
    1d72:	50 e0       	ldi	r21, 0x00	; 0
    1d74:	64 e7       	ldi	r22, 0x74	; 116
    1d76:	74 e0       	ldi	r23, 0x04	; 4
    1d78:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <servoHoek>
    1d7c:	90 91 77 04 	lds	r25, 0x0477	; 0x800477 <servoHoek+0x1>
    1d80:	0c 94 39 06 	jmp	0xc72	; 0xc72 <xQueueGenericSend>
    1d84:	08 95       	ret

00001d86 <readQ>:
    1d86:	20 e0       	ldi	r18, 0x00	; 0
    1d88:	40 e0       	ldi	r20, 0x00	; 0
    1d8a:	50 e0       	ldi	r21, 0x00	; 0
    1d8c:	6b e7       	ldi	r22, 0x7B	; 123
    1d8e:	74 e0       	ldi	r23, 0x04	; 4
    1d90:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <sonarAfstand>
    1d94:	90 91 79 04 	lds	r25, 0x0479	; 0x800479 <sonarAfstand+0x1>
    1d98:	0c 94 cb 06 	jmp	0xd96	; 0xd96 <xQueueGenericReceive>
    1d9c:	08 95       	ret

00001d9e <UART_Init>:
    1d9e:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    1da2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    1da6:	88 e9       	ldi	r24, 0x98	; 152
    1da8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    1dac:	86 e0       	ldi	r24, 0x06	; 6
    1dae:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
    1db2:	08 95       	ret

00001db4 <UART_Transmit>:
    1db4:	e0 ec       	ldi	r30, 0xC0	; 192
    1db6:	f0 e0       	ldi	r31, 0x00	; 0
    1db8:	90 81       	ld	r25, Z
    1dba:	95 ff       	sbrs	r25, 5
    1dbc:	fd cf       	rjmp	.-6      	; 0x1db8 <UART_Transmit+0x4>
    1dbe:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    1dc2:	08 95       	ret

00001dc4 <UART_Transmit_String>:
    1dc4:	cf 93       	push	r28
    1dc6:	df 93       	push	r29
    1dc8:	ec 01       	movw	r28, r24
    1dca:	88 81       	ld	r24, Y
    1dcc:	88 23       	and	r24, r24
    1dce:	29 f0       	breq	.+10     	; 0x1dda <UART_Transmit_String+0x16>
    1dd0:	21 96       	adiw	r28, 0x01	; 1
    1dd2:	f0 df       	rcall	.-32     	; 0x1db4 <UART_Transmit>
    1dd4:	89 91       	ld	r24, Y+
    1dd6:	81 11       	cpse	r24, r1
    1dd8:	fc cf       	rjmp	.-8      	; 0x1dd2 <UART_Transmit_String+0xe>
    1dda:	8a e0       	ldi	r24, 0x0A	; 10
    1ddc:	eb df       	rcall	.-42     	; 0x1db4 <UART_Transmit>
    1dde:	8d e0       	ldi	r24, 0x0D	; 13
    1de0:	e9 df       	rcall	.-46     	; 0x1db4 <UART_Transmit>
    1de2:	df 91       	pop	r29
    1de4:	cf 91       	pop	r28
    1de6:	08 95       	ret

00001de8 <queueTaak>:
    1de8:	0f 2e       	mov	r0, r31
    1dea:	fe e1       	ldi	r31, 0x1E	; 30
    1dec:	cf 2e       	mov	r12, r31
    1dee:	d1 2c       	mov	r13, r1
    1df0:	f0 2d       	mov	r31, r0
    1df2:	0f 2e       	mov	r0, r31
    1df4:	fc e0       	ldi	r31, 0x0C	; 12
    1df6:	ef 2e       	mov	r14, r31
    1df8:	f2 e0       	ldi	r31, 0x02	; 2
    1dfa:	ff 2e       	mov	r15, r31
    1dfc:	f0 2d       	mov	r31, r0
    1dfe:	04 e7       	ldi	r16, 0x74	; 116
    1e00:	13 e0       	ldi	r17, 0x03	; 3
    1e02:	c1 df       	rcall	.-126    	; 0x1d86 <readQ>
    1e04:	80 91 7b 04 	lds	r24, 0x047B	; 0x80047b <afstand>
    1e08:	90 91 7c 04 	lds	r25, 0x047C	; 0x80047c <afstand+0x1>
    1e0c:	4f 97       	sbiw	r24, 0x1f	; 31
    1e0e:	24 f0       	brlt	.+8      	; 0x1e18 <queueTaak+0x30>
    1e10:	d0 92 7c 04 	sts	0x047C, r13	; 0x80047c <afstand+0x1>
    1e14:	c0 92 7b 04 	sts	0x047B, r12	; 0x80047b <afstand>
    1e18:	c0 91 7b 04 	lds	r28, 0x047B	; 0x80047b <afstand>
    1e1c:	d0 91 7c 04 	lds	r29, 0x047C	; 0x80047c <afstand+0x1>
    1e20:	be 01       	movw	r22, r28
    1e22:	0d 2e       	mov	r0, r29
    1e24:	00 0c       	add	r0, r0
    1e26:	88 0b       	sbc	r24, r24
    1e28:	99 0b       	sbc	r25, r25
    1e2a:	5a d2       	rcall	.+1204   	; 0x22e0 <__floatsisf>
    1e2c:	20 e0       	ldi	r18, 0x00	; 0
    1e2e:	30 e0       	ldi	r19, 0x00	; 0
    1e30:	40 ef       	ldi	r20, 0xF0	; 240
    1e32:	51 e4       	ldi	r21, 0x41	; 65
    1e34:	ba d1       	rcall	.+884    	; 0x21aa <__divsf3>
    1e36:	20 e0       	ldi	r18, 0x00	; 0
    1e38:	30 e0       	ldi	r19, 0x00	; 0
    1e3a:	44 e3       	ldi	r20, 0x34	; 52
    1e3c:	53 e4       	ldi	r21, 0x43	; 67
    1e3e:	dc d2       	rcall	.+1464   	; 0x23f8 <__mulsf3>
    1e40:	1c d2       	rcall	.+1080   	; 0x227a <__fixsfsi>
    1e42:	60 93 74 04 	sts	0x0474, r22	; 0x800474 <hoek>
    1e46:	70 93 75 04 	sts	0x0475, r23	; 0x800475 <hoek+0x1>
    1e4a:	7f 93       	push	r23
    1e4c:	6f 93       	push	r22
    1e4e:	df 93       	push	r29
    1e50:	cf 93       	push	r28
    1e52:	ff 92       	push	r15
    1e54:	ef 92       	push	r14
    1e56:	1f 93       	push	r17
    1e58:	0f 93       	push	r16
    1e5a:	a5 d4       	rcall	.+2378   	; 0x27a6 <sprintf>
    1e5c:	c8 01       	movw	r24, r16
    1e5e:	b2 df       	rcall	.-156    	; 0x1dc4 <UART_Transmit_String>
    1e60:	86 df       	rcall	.-244    	; 0x1d6e <writeQ>
    1e62:	8d b7       	in	r24, 0x3d	; 61
    1e64:	9e b7       	in	r25, 0x3e	; 62
    1e66:	08 96       	adiw	r24, 0x08	; 8
    1e68:	0f b6       	in	r0, 0x3f	; 63
    1e6a:	f8 94       	cli
    1e6c:	9e bf       	out	0x3e, r25	; 62
    1e6e:	0f be       	out	0x3f, r0	; 63
    1e70:	8d bf       	out	0x3d, r24	; 61
    1e72:	c7 cf       	rjmp	.-114    	; 0x1e02 <queueTaak+0x1a>

00001e74 <__vector_25>:
    1e74:	1f 92       	push	r1
    1e76:	0f 92       	push	r0
    1e78:	0f b6       	in	r0, 0x3f	; 63
    1e7a:	0f 92       	push	r0
    1e7c:	11 24       	eor	r1, r1
    1e7e:	0b b6       	in	r0, 0x3b	; 59
    1e80:	0f 92       	push	r0
    1e82:	2f 93       	push	r18
    1e84:	3f 93       	push	r19
    1e86:	4f 93       	push	r20
    1e88:	5f 93       	push	r21
    1e8a:	6f 93       	push	r22
    1e8c:	7f 93       	push	r23
    1e8e:	8f 93       	push	r24
    1e90:	9f 93       	push	r25
    1e92:	af 93       	push	r26
    1e94:	bf 93       	push	r27
    1e96:	ef 93       	push	r30
    1e98:	ff 93       	push	r31
    1e9a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    1e9e:	80 93 7a 04 	sts	0x047A, r24	; 0x80047a <ontvang>
    1ea2:	88 df       	rcall	.-240    	; 0x1db4 <UART_Transmit>
    1ea4:	81 e0       	ldi	r24, 0x01	; 1
    1ea6:	90 e0       	ldi	r25, 0x00	; 0
    1ea8:	90 93 e3 02 	sts	0x02E3, r25	; 0x8002e3 <state+0x1>
    1eac:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <state>
    1eb0:	ff 91       	pop	r31
    1eb2:	ef 91       	pop	r30
    1eb4:	bf 91       	pop	r27
    1eb6:	af 91       	pop	r26
    1eb8:	9f 91       	pop	r25
    1eba:	8f 91       	pop	r24
    1ebc:	7f 91       	pop	r23
    1ebe:	6f 91       	pop	r22
    1ec0:	5f 91       	pop	r21
    1ec2:	4f 91       	pop	r20
    1ec4:	3f 91       	pop	r19
    1ec6:	2f 91       	pop	r18
    1ec8:	0f 90       	pop	r0
    1eca:	0b be       	out	0x3b, r0	; 59
    1ecc:	0f 90       	pop	r0
    1ece:	0f be       	out	0x3f, r0	; 63
    1ed0:	0f 90       	pop	r0
    1ed2:	1f 90       	pop	r1
    1ed4:	18 95       	reti

00001ed6 <INT1_init>:
    1ed6:	e9 e6       	ldi	r30, 0x69	; 105
    1ed8:	f0 e0       	ldi	r31, 0x00	; 0
    1eda:	80 81       	ld	r24, Z
    1edc:	84 60       	ori	r24, 0x04	; 4
    1ede:	80 83       	st	Z, r24
    1ee0:	e9 9a       	sbi	0x1d, 1	; 29
    1ee2:	08 95       	ret

00001ee4 <__vector_2>:
    1ee4:	1f 92       	push	r1
    1ee6:	0f 92       	push	r0
    1ee8:	0f b6       	in	r0, 0x3f	; 63
    1eea:	0f 92       	push	r0
    1eec:	11 24       	eor	r1, r1
    1eee:	0b b6       	in	r0, 0x3b	; 59
    1ef0:	0f 92       	push	r0
    1ef2:	2f 93       	push	r18
    1ef4:	3f 93       	push	r19
    1ef6:	4f 93       	push	r20
    1ef8:	5f 93       	push	r21
    1efa:	6f 93       	push	r22
    1efc:	7f 93       	push	r23
    1efe:	8f 93       	push	r24
    1f00:	9f 93       	push	r25
    1f02:	af 93       	push	r26
    1f04:	bf 93       	push	r27
    1f06:	ef 93       	push	r30
    1f08:	ff 93       	push	r31
    1f0a:	80 91 e1 02 	lds	r24, 0x02E1	; 0x8002e1 <running>
    1f0e:	88 23       	and	r24, r24
    1f10:	c1 f1       	breq	.+112    	; 0x1f82 <__vector_2+0x9e>
    1f12:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <up>
    1f16:	81 11       	cpse	r24, r1
    1f18:	10 c0       	rjmp	.+32     	; 0x1f3a <__vector_2+0x56>
    1f1a:	81 e0       	ldi	r24, 0x01	; 1
    1f1c:	80 93 e0 02 	sts	0x02E0, r24	; 0x8002e0 <up>
    1f20:	10 92 dc 02 	sts	0x02DC, r1	; 0x8002dc <timerCounter>
    1f24:	10 92 dd 02 	sts	0x02DD, r1	; 0x8002dd <timerCounter+0x1>
    1f28:	10 92 de 02 	sts	0x02DE, r1	; 0x8002de <timerCounter+0x2>
    1f2c:	10 92 df 02 	sts	0x02DF, r1	; 0x8002df <timerCounter+0x3>
    1f30:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
    1f34:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
    1f38:	24 c0       	rjmp	.+72     	; 0x1f82 <__vector_2+0x9e>
    1f3a:	10 92 e0 02 	sts	0x02E0, r1	; 0x8002e0 <up>
    1f3e:	20 91 dc 02 	lds	r18, 0x02DC	; 0x8002dc <timerCounter>
    1f42:	30 91 dd 02 	lds	r19, 0x02DD	; 0x8002dd <timerCounter+0x1>
    1f46:	40 91 de 02 	lds	r20, 0x02DE	; 0x8002de <timerCounter+0x2>
    1f4a:	50 91 df 02 	lds	r21, 0x02DF	; 0x8002df <timerCounter+0x3>
    1f4e:	e0 91 94 00 	lds	r30, 0x0094	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
    1f52:	f0 91 95 00 	lds	r31, 0x0095	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
    1f56:	af ef       	ldi	r26, 0xFF	; 255
    1f58:	bf ef       	ldi	r27, 0xFF	; 255
    1f5a:	ea d2       	rcall	.+1492   	; 0x2530 <__muluhisi3>
    1f5c:	6e 0f       	add	r22, r30
    1f5e:	7f 1f       	adc	r23, r31
    1f60:	81 1d       	adc	r24, r1
    1f62:	91 1d       	adc	r25, r1
    1f64:	24 e7       	ldi	r18, 0x74	; 116
    1f66:	30 e0       	ldi	r19, 0x00	; 0
    1f68:	40 e0       	ldi	r20, 0x00	; 0
    1f6a:	50 e0       	ldi	r21, 0x00	; 0
    1f6c:	a8 d2       	rcall	.+1360   	; 0x24be <__udivmodsi4>
    1f6e:	20 93 d8 02 	sts	0x02D8, r18	; 0x8002d8 <result>
    1f72:	30 93 d9 02 	sts	0x02D9, r19	; 0x8002d9 <result+0x1>
    1f76:	40 93 da 02 	sts	0x02DA, r20	; 0x8002da <result+0x2>
    1f7a:	50 93 db 02 	sts	0x02DB, r21	; 0x8002db <result+0x3>
    1f7e:	10 92 e1 02 	sts	0x02E1, r1	; 0x8002e1 <running>
    1f82:	ff 91       	pop	r31
    1f84:	ef 91       	pop	r30
    1f86:	bf 91       	pop	r27
    1f88:	af 91       	pop	r26
    1f8a:	9f 91       	pop	r25
    1f8c:	8f 91       	pop	r24
    1f8e:	7f 91       	pop	r23
    1f90:	6f 91       	pop	r22
    1f92:	5f 91       	pop	r21
    1f94:	4f 91       	pop	r20
    1f96:	3f 91       	pop	r19
    1f98:	2f 91       	pop	r18
    1f9a:	0f 90       	pop	r0
    1f9c:	0b be       	out	0x3b, r0	; 59
    1f9e:	0f 90       	pop	r0
    1fa0:	0f be       	out	0x3f, r0	; 63
    1fa2:	0f 90       	pop	r0
    1fa4:	1f 90       	pop	r1
    1fa6:	18 95       	reti

00001fa8 <pulse>:
    1fa8:	28 98       	cbi	0x05, 0	; 5
    1faa:	85 e0       	ldi	r24, 0x05	; 5
    1fac:	8a 95       	dec	r24
    1fae:	f1 f7       	brne	.-4      	; 0x1fac <pulse+0x4>
    1fb0:	00 00       	nop
    1fb2:	28 9a       	sbi	0x05, 0	; 5
    1fb4:	81 e0       	ldi	r24, 0x01	; 1
    1fb6:	80 93 e1 02 	sts	0x02E1, r24	; 0x8002e1 <running>
    1fba:	85 e3       	ldi	r24, 0x35	; 53
    1fbc:	8a 95       	dec	r24
    1fbe:	f1 f7       	brne	.-4      	; 0x1fbc <pulse+0x14>
    1fc0:	00 00       	nop
    1fc2:	28 98       	cbi	0x05, 0	; 5
    1fc4:	08 95       	ret

00001fc6 <sonarTaak>:
    1fc6:	80 91 e1 02 	lds	r24, 0x02E1	; 0x8002e1 <running>
    1fca:	81 11       	cpse	r24, r1
    1fcc:	fc cf       	rjmp	.-8      	; 0x1fc6 <sonarTaak>
    1fce:	2f ef       	ldi	r18, 0xFF	; 255
    1fd0:	80 e7       	ldi	r24, 0x70	; 112
    1fd2:	92 e0       	ldi	r25, 0x02	; 2
    1fd4:	21 50       	subi	r18, 0x01	; 1
    1fd6:	80 40       	sbci	r24, 0x00	; 0
    1fd8:	90 40       	sbci	r25, 0x00	; 0
    1fda:	e1 f7       	brne	.-8      	; 0x1fd4 <sonarTaak+0xe>
    1fdc:	00 c0       	rjmp	.+0      	; 0x1fde <sonarTaak+0x18>
    1fde:	00 00       	nop
    1fe0:	e3 df       	rcall	.-58     	; 0x1fa8 <pulse>
    1fe2:	20 e0       	ldi	r18, 0x00	; 0
    1fe4:	40 e0       	ldi	r20, 0x00	; 0
    1fe6:	50 e0       	ldi	r21, 0x00	; 0
    1fe8:	68 ed       	ldi	r22, 0xD8	; 216
    1fea:	72 e0       	ldi	r23, 0x02	; 2
    1fec:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <sonarAfstand>
    1ff0:	90 91 79 04 	lds	r25, 0x0479	; 0x800479 <sonarAfstand+0x1>
    1ff4:	0e 94 39 06 	call	0xc72	; 0xc72 <xQueueGenericSend>
    1ff8:	e6 cf       	rjmp	.-52     	; 0x1fc6 <sonarTaak>

00001ffa <timer3_init>:
    1ffa:	e1 e9       	ldi	r30, 0x91	; 145
    1ffc:	f0 e0       	ldi	r31, 0x00	; 0
    1ffe:	80 81       	ld	r24, Z
    2000:	82 60       	ori	r24, 0x02	; 2
    2002:	80 83       	st	Z, r24
    2004:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
    2008:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
    200c:	e1 e7       	ldi	r30, 0x71	; 113
    200e:	f0 e0       	ldi	r31, 0x00	; 0
    2010:	80 81       	ld	r24, Z
    2012:	81 60       	ori	r24, 0x01	; 1
    2014:	80 83       	st	Z, r24
    2016:	08 95       	ret

00002018 <__vector_35>:
    2018:	1f 92       	push	r1
    201a:	0f 92       	push	r0
    201c:	0f b6       	in	r0, 0x3f	; 63
    201e:	0f 92       	push	r0
    2020:	11 24       	eor	r1, r1
    2022:	0b b6       	in	r0, 0x3b	; 59
    2024:	0f 92       	push	r0
    2026:	2f 93       	push	r18
    2028:	3f 93       	push	r19
    202a:	4f 93       	push	r20
    202c:	5f 93       	push	r21
    202e:	6f 93       	push	r22
    2030:	7f 93       	push	r23
    2032:	8f 93       	push	r24
    2034:	9f 93       	push	r25
    2036:	af 93       	push	r26
    2038:	bf 93       	push	r27
    203a:	ef 93       	push	r30
    203c:	ff 93       	push	r31
    203e:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <up>
    2042:	88 23       	and	r24, r24
    2044:	e1 f1       	breq	.+120    	; 0x20be <__vector_35+0xa6>
    2046:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <timerCounter>
    204a:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <timerCounter+0x1>
    204e:	a0 91 de 02 	lds	r26, 0x02DE	; 0x8002de <timerCounter+0x2>
    2052:	b0 91 df 02 	lds	r27, 0x02DF	; 0x8002df <timerCounter+0x3>
    2056:	01 96       	adiw	r24, 0x01	; 1
    2058:	a1 1d       	adc	r26, r1
    205a:	b1 1d       	adc	r27, r1
    205c:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <timerCounter>
    2060:	90 93 dd 02 	sts	0x02DD, r25	; 0x8002dd <timerCounter+0x1>
    2064:	a0 93 de 02 	sts	0x02DE, r26	; 0x8002de <timerCounter+0x2>
    2068:	b0 93 df 02 	sts	0x02DF, r27	; 0x8002df <timerCounter+0x3>
    206c:	20 91 dc 02 	lds	r18, 0x02DC	; 0x8002dc <timerCounter>
    2070:	30 91 dd 02 	lds	r19, 0x02DD	; 0x8002dd <timerCounter+0x1>
    2074:	40 91 de 02 	lds	r20, 0x02DE	; 0x8002de <timerCounter+0x2>
    2078:	50 91 df 02 	lds	r21, 0x02DF	; 0x8002df <timerCounter+0x3>
    207c:	e0 91 94 00 	lds	r30, 0x0094	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
    2080:	f0 91 95 00 	lds	r31, 0x0095	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
    2084:	af ef       	ldi	r26, 0xFF	; 255
    2086:	bf ef       	ldi	r27, 0xFF	; 255
    2088:	53 d2       	rcall	.+1190   	; 0x2530 <__muluhisi3>
    208a:	dc 01       	movw	r26, r24
    208c:	cb 01       	movw	r24, r22
    208e:	8e 0f       	add	r24, r30
    2090:	9f 1f       	adc	r25, r31
    2092:	a1 1d       	adc	r26, r1
    2094:	b1 1d       	adc	r27, r1
    2096:	81 30       	cpi	r24, 0x01	; 1
    2098:	94 4d       	sbci	r25, 0xD4	; 212
    209a:	a0 43       	sbci	r26, 0x30	; 48
    209c:	b1 05       	cpc	r27, r1
    209e:	78 f0       	brcs	.+30     	; 0x20be <__vector_35+0xa6>
    20a0:	10 92 e0 02 	sts	0x02E0, r1	; 0x8002e0 <up>
    20a4:	10 92 e1 02 	sts	0x02E1, r1	; 0x8002e1 <running>
    20a8:	8f ef       	ldi	r24, 0xFF	; 255
    20aa:	9f ef       	ldi	r25, 0xFF	; 255
    20ac:	dc 01       	movw	r26, r24
    20ae:	80 93 d8 02 	sts	0x02D8, r24	; 0x8002d8 <result>
    20b2:	90 93 d9 02 	sts	0x02D9, r25	; 0x8002d9 <result+0x1>
    20b6:	a0 93 da 02 	sts	0x02DA, r26	; 0x8002da <result+0x2>
    20ba:	b0 93 db 02 	sts	0x02DB, r27	; 0x8002db <result+0x3>
    20be:	ff 91       	pop	r31
    20c0:	ef 91       	pop	r30
    20c2:	bf 91       	pop	r27
    20c4:	af 91       	pop	r26
    20c6:	9f 91       	pop	r25
    20c8:	8f 91       	pop	r24
    20ca:	7f 91       	pop	r23
    20cc:	6f 91       	pop	r22
    20ce:	5f 91       	pop	r21
    20d0:	4f 91       	pop	r20
    20d2:	3f 91       	pop	r19
    20d4:	2f 91       	pop	r18
    20d6:	0f 90       	pop	r0
    20d8:	0b be       	out	0x3b, r0	; 59
    20da:	0f 90       	pop	r0
    20dc:	0f be       	out	0x3f, r0	; 63
    20de:	0f 90       	pop	r0
    20e0:	1f 90       	pop	r1
    20e2:	18 95       	reti

000020e4 <initServo>:
}

void initServo()
{
	DDRB |= (1 << PB6);
    20e4:	26 9a       	sbi	0x04, 6	; 4
	TCCR1A = (1 << WGM11)| (1 << COM1B0) | (1 << COM1B1);
    20e6:	82 e3       	ldi	r24, 0x32	; 50
    20e8:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x700080>
	TCCR1B = (1 << WGM13) | (1 << CS11);
    20ec:	82 e1       	ldi	r24, 0x12	; 18
    20ee:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
	ICR1 = 20000;
    20f2:	80 e2       	ldi	r24, 0x20	; 32
    20f4:	9e e4       	ldi	r25, 0x4E	; 78
    20f6:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x700087>
    20fa:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x700086>
	TCNT1 = 0;
    20fe:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
    2102:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
	}
}

void turnServo(uint8_t degrees)
{
	OCR1B = 20000 - (degrees * (1300 / 180) + 800);
    2106:	80 e0       	ldi	r24, 0x00	; 0
    2108:	9b e4       	ldi	r25, 0x4B	; 75
    210a:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x70008b>
    210e:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x70008a>
	TCCR1A = (1 << WGM11)| (1 << COM1B0) | (1 << COM1B1);
	TCCR1B = (1 << WGM13) | (1 << CS11);
	ICR1 = 20000;
	TCNT1 = 0;
	turnServo(0);
	TIMSK1 |= (1 << 1);
    2112:	ef e6       	ldi	r30, 0x6F	; 111
    2114:	f0 e0       	ldi	r31, 0x00	; 0
    2116:	80 81       	ld	r24, Z
    2118:	82 60       	ori	r24, 0x02	; 2
    211a:	80 83       	st	Z, r24
    211c:	08 95       	ret

0000211e <main>:
int afstand;
int hoek;
//end main stuff

int main() 
{
    211e:	ef 92       	push	r14
    2120:	ff 92       	push	r15
    2122:	0f 93       	push	r16
	DDRB |= (1 << TRIGGER);											// Trigger pin
    2124:	20 9a       	sbi	0x04, 0	; 4
	UART_Init(MYUBRR);
    2126:	87 e6       	ldi	r24, 0x67	; 103
    2128:	90 e0       	ldi	r25, 0x00	; 0
    212a:	39 de       	rcall	.-910    	; 0x1d9e <UART_Init>
	INT1_init();
    212c:	d4 de       	rcall	.-600    	; 0x1ed6 <INT1_init>
	timer3_init();
    212e:	65 df       	rcall	.-310    	; 0x1ffa <timer3_init>
	initServo();
    2130:	d9 df       	rcall	.-78     	; 0x20e4 <initServo>
    2132:	78 94       	sei
	sei();
	initQ();
    2134:	f3 dd       	rcall	.-1050   	; 0x1d1c <initQ>
    2136:	86 e2       	ldi	r24, 0x26	; 38
	UART_Transmit_String("Setup done");
    2138:	92 e0       	ldi	r25, 0x02	; 2
    213a:	44 de       	rcall	.-888    	; 0x1dc4 <UART_Transmit_String>
    213c:	e1 2c       	mov	r14, r1
    213e:	f1 2c       	mov	r15, r1

	xTaskCreate(queueTaak,"Queue Taken",256,NULL,3,NULL);			//task voor lezen uit sonar queue en schrijven naar servo queue
    2140:	03 e0       	ldi	r16, 0x03	; 3
    2142:	20 e0       	ldi	r18, 0x00	; 0
    2144:	30 e0       	ldi	r19, 0x00	; 0
    2146:	40 e0       	ldi	r20, 0x00	; 0
    2148:	51 e0       	ldi	r21, 0x01	; 1
    214a:	61 e3       	ldi	r22, 0x31	; 49
    214c:	72 e0       	ldi	r23, 0x02	; 2
    214e:	84 ef       	ldi	r24, 0xF4	; 244
    2150:	9e e0       	ldi	r25, 0x0E	; 14
    2152:	88 d9       	rcall	.-3312   	; 0x1464 <xTaskCreate>
    2154:	20 e0       	ldi	r18, 0x00	; 0
    2156:	30 e0       	ldi	r19, 0x00	; 0
	xTaskCreate(sonarTaak,"Sonar Sensor",256,NULL,3,NULL);			//lees sonar sensor uit en schrijf afstand naar sonar queue
    2158:	40 e0       	ldi	r20, 0x00	; 0
    215a:	51 e0       	ldi	r21, 0x01	; 1
    215c:	6d e3       	ldi	r22, 0x3D	; 61
    215e:	72 e0       	ldi	r23, 0x02	; 2
    2160:	83 ee       	ldi	r24, 0xE3	; 227
    2162:	9f e0       	ldi	r25, 0x0F	; 15
    2164:	7f d9       	rcall	.-3330   	; 0x1464 <xTaskCreate>
    2166:	20 e0       	ldi	r18, 0x00	; 0
    2168:	30 e0       	ldi	r19, 0x00	; 0
	xTaskCreate(servoTaak,"Servo Motor",256,NULL,3,NULL);			//code van Joris & Benjamin 
    216a:	40 e0       	ldi	r20, 0x00	; 0
    216c:	51 e0       	ldi	r21, 0x01	; 1
    216e:	6a e4       	ldi	r22, 0x4A	; 74
    2170:	72 e0       	ldi	r23, 0x02	; 2
    2172:	86 e7       	ldi	r24, 0x76	; 118
    2174:	9e e0       	ldi	r25, 0x0E	; 14
    2176:	76 d9       	rcall	.-3348   	; 0x1464 <xTaskCreate>
    2178:	7f da       	rcall	.-2818   	; 0x1678 <vTaskStartScheduler>

	vTaskStartScheduler();
    217a:	80 e0       	ldi	r24, 0x00	; 0
    217c:	90 e0       	ldi	r25, 0x00	; 0
}
    217e:	0f 91       	pop	r16
    2180:	ff 90       	pop	r15
    2182:	ef 90       	pop	r14
    2184:	08 95       	ret

00002186 <__vector_17>:
    2186:	1f 92       	push	r1
    2188:	0f 92       	push	r0
	turnServo(0);
	TIMSK1 |= (1 << 1);
}

ISR(TIMER1_COMPA_vect)
{
    218a:	0f b6       	in	r0, 0x3f	; 63
    218c:	0f 92       	push	r0
    218e:	11 24       	eor	r1, r1
    2190:	8f 93       	push	r24
    2192:	9f 93       	push	r25
	PORTB ^= (1 << PB6);
    2194:	95 b1       	in	r25, 0x05	; 5
    2196:	80 e4       	ldi	r24, 0x40	; 64
    2198:	89 27       	eor	r24, r25
    219a:	85 b9       	out	0x05, r24	; 5
    219c:	9f 91       	pop	r25
    219e:	8f 91       	pop	r24
    21a0:	0f 90       	pop	r0
    21a2:	0f be       	out	0x3f, r0	; 63
    21a4:	0f 90       	pop	r0
    21a6:	1f 90       	pop	r1
    21a8:	18 95       	reti

000021aa <__divsf3>:
    21aa:	0c d0       	rcall	.+24     	; 0x21c4 <__divsf3x>
    21ac:	eb c0       	rjmp	.+470    	; 0x2384 <__fp_round>
    21ae:	e3 d0       	rcall	.+454    	; 0x2376 <__fp_pscB>
    21b0:	40 f0       	brcs	.+16     	; 0x21c2 <__divsf3+0x18>
    21b2:	da d0       	rcall	.+436    	; 0x2368 <__fp_pscA>
    21b4:	30 f0       	brcs	.+12     	; 0x21c2 <__divsf3+0x18>
    21b6:	21 f4       	brne	.+8      	; 0x21c0 <__divsf3+0x16>
    21b8:	5f 3f       	cpi	r21, 0xFF	; 255
    21ba:	19 f0       	breq	.+6      	; 0x21c2 <__divsf3+0x18>
    21bc:	cc c0       	rjmp	.+408    	; 0x2356 <__fp_inf>
    21be:	51 11       	cpse	r21, r1
    21c0:	15 c1       	rjmp	.+554    	; 0x23ec <__fp_szero>
    21c2:	cf c0       	rjmp	.+414    	; 0x2362 <__fp_nan>

000021c4 <__divsf3x>:
    21c4:	f0 d0       	rcall	.+480    	; 0x23a6 <__fp_split3>
    21c6:	98 f3       	brcs	.-26     	; 0x21ae <__divsf3+0x4>

000021c8 <__divsf3_pse>:
    21c8:	99 23       	and	r25, r25
    21ca:	c9 f3       	breq	.-14     	; 0x21be <__divsf3+0x14>
    21cc:	55 23       	and	r21, r21
    21ce:	b1 f3       	breq	.-20     	; 0x21bc <__divsf3+0x12>
    21d0:	95 1b       	sub	r25, r21
    21d2:	55 0b       	sbc	r21, r21
    21d4:	bb 27       	eor	r27, r27
    21d6:	aa 27       	eor	r26, r26
    21d8:	62 17       	cp	r22, r18
    21da:	73 07       	cpc	r23, r19
    21dc:	84 07       	cpc	r24, r20
    21de:	38 f0       	brcs	.+14     	; 0x21ee <__divsf3_pse+0x26>
    21e0:	9f 5f       	subi	r25, 0xFF	; 255
    21e2:	5f 4f       	sbci	r21, 0xFF	; 255
    21e4:	22 0f       	add	r18, r18
    21e6:	33 1f       	adc	r19, r19
    21e8:	44 1f       	adc	r20, r20
    21ea:	aa 1f       	adc	r26, r26
    21ec:	a9 f3       	breq	.-22     	; 0x21d8 <__divsf3_pse+0x10>
    21ee:	33 d0       	rcall	.+102    	; 0x2256 <__stack+0x57>
    21f0:	0e 2e       	mov	r0, r30
    21f2:	3a f0       	brmi	.+14     	; 0x2202 <__stack+0x3>
    21f4:	e0 e8       	ldi	r30, 0x80	; 128
    21f6:	30 d0       	rcall	.+96     	; 0x2258 <__stack+0x59>
    21f8:	91 50       	subi	r25, 0x01	; 1
    21fa:	50 40       	sbci	r21, 0x00	; 0
    21fc:	e6 95       	lsr	r30
    21fe:	00 1c       	adc	r0, r0
    2200:	ca f7       	brpl	.-14     	; 0x21f4 <__divsf3_pse+0x2c>
    2202:	29 d0       	rcall	.+82     	; 0x2256 <__stack+0x57>
    2204:	fe 2f       	mov	r31, r30
    2206:	27 d0       	rcall	.+78     	; 0x2256 <__stack+0x57>
    2208:	66 0f       	add	r22, r22
    220a:	77 1f       	adc	r23, r23
    220c:	88 1f       	adc	r24, r24
    220e:	bb 1f       	adc	r27, r27
    2210:	26 17       	cp	r18, r22
    2212:	37 07       	cpc	r19, r23
    2214:	48 07       	cpc	r20, r24
    2216:	ab 07       	cpc	r26, r27
    2218:	b0 e8       	ldi	r27, 0x80	; 128
    221a:	09 f0       	breq	.+2      	; 0x221e <__stack+0x1f>
    221c:	bb 0b       	sbc	r27, r27
    221e:	80 2d       	mov	r24, r0
    2220:	bf 01       	movw	r22, r30
    2222:	ff 27       	eor	r31, r31
    2224:	93 58       	subi	r25, 0x83	; 131
    2226:	5f 4f       	sbci	r21, 0xFF	; 255
    2228:	2a f0       	brmi	.+10     	; 0x2234 <__stack+0x35>
    222a:	9e 3f       	cpi	r25, 0xFE	; 254
    222c:	51 05       	cpc	r21, r1
    222e:	68 f0       	brcs	.+26     	; 0x224a <__stack+0x4b>
    2230:	92 c0       	rjmp	.+292    	; 0x2356 <__fp_inf>
    2232:	dc c0       	rjmp	.+440    	; 0x23ec <__fp_szero>
    2234:	5f 3f       	cpi	r21, 0xFF	; 255
    2236:	ec f3       	brlt	.-6      	; 0x2232 <__stack+0x33>
    2238:	98 3e       	cpi	r25, 0xE8	; 232
    223a:	dc f3       	brlt	.-10     	; 0x2232 <__stack+0x33>
    223c:	86 95       	lsr	r24
    223e:	77 95       	ror	r23
    2240:	67 95       	ror	r22
    2242:	b7 95       	ror	r27
    2244:	f7 95       	ror	r31
    2246:	9f 5f       	subi	r25, 0xFF	; 255
    2248:	c9 f7       	brne	.-14     	; 0x223c <__stack+0x3d>
    224a:	88 0f       	add	r24, r24
    224c:	91 1d       	adc	r25, r1
    224e:	96 95       	lsr	r25
    2250:	87 95       	ror	r24
    2252:	97 f9       	bld	r25, 7
    2254:	08 95       	ret
    2256:	e1 e0       	ldi	r30, 0x01	; 1
    2258:	66 0f       	add	r22, r22
    225a:	77 1f       	adc	r23, r23
    225c:	88 1f       	adc	r24, r24
    225e:	bb 1f       	adc	r27, r27
    2260:	62 17       	cp	r22, r18
    2262:	73 07       	cpc	r23, r19
    2264:	84 07       	cpc	r24, r20
    2266:	ba 07       	cpc	r27, r26
    2268:	20 f0       	brcs	.+8      	; 0x2272 <__stack+0x73>
    226a:	62 1b       	sub	r22, r18
    226c:	73 0b       	sbc	r23, r19
    226e:	84 0b       	sbc	r24, r20
    2270:	ba 0b       	sbc	r27, r26
    2272:	ee 1f       	adc	r30, r30
    2274:	88 f7       	brcc	.-30     	; 0x2258 <__stack+0x59>
    2276:	e0 95       	com	r30
    2278:	08 95       	ret

0000227a <__fixsfsi>:
    227a:	04 d0       	rcall	.+8      	; 0x2284 <__fixunssfsi>
    227c:	68 94       	set
    227e:	b1 11       	cpse	r27, r1
    2280:	b5 c0       	rjmp	.+362    	; 0x23ec <__fp_szero>
    2282:	08 95       	ret

00002284 <__fixunssfsi>:
    2284:	98 d0       	rcall	.+304    	; 0x23b6 <__fp_splitA>
    2286:	88 f0       	brcs	.+34     	; 0x22aa <__fixunssfsi+0x26>
    2288:	9f 57       	subi	r25, 0x7F	; 127
    228a:	90 f0       	brcs	.+36     	; 0x22b0 <__fixunssfsi+0x2c>
    228c:	b9 2f       	mov	r27, r25
    228e:	99 27       	eor	r25, r25
    2290:	b7 51       	subi	r27, 0x17	; 23
    2292:	a0 f0       	brcs	.+40     	; 0x22bc <__fixunssfsi+0x38>
    2294:	d1 f0       	breq	.+52     	; 0x22ca <__fixunssfsi+0x46>
    2296:	66 0f       	add	r22, r22
    2298:	77 1f       	adc	r23, r23
    229a:	88 1f       	adc	r24, r24
    229c:	99 1f       	adc	r25, r25
    229e:	1a f0       	brmi	.+6      	; 0x22a6 <__fixunssfsi+0x22>
    22a0:	ba 95       	dec	r27
    22a2:	c9 f7       	brne	.-14     	; 0x2296 <__fixunssfsi+0x12>
    22a4:	12 c0       	rjmp	.+36     	; 0x22ca <__fixunssfsi+0x46>
    22a6:	b1 30       	cpi	r27, 0x01	; 1
    22a8:	81 f0       	breq	.+32     	; 0x22ca <__fixunssfsi+0x46>
    22aa:	9f d0       	rcall	.+318    	; 0x23ea <__fp_zero>
    22ac:	b1 e0       	ldi	r27, 0x01	; 1
    22ae:	08 95       	ret
    22b0:	9c c0       	rjmp	.+312    	; 0x23ea <__fp_zero>
    22b2:	67 2f       	mov	r22, r23
    22b4:	78 2f       	mov	r23, r24
    22b6:	88 27       	eor	r24, r24
    22b8:	b8 5f       	subi	r27, 0xF8	; 248
    22ba:	39 f0       	breq	.+14     	; 0x22ca <__fixunssfsi+0x46>
    22bc:	b9 3f       	cpi	r27, 0xF9	; 249
    22be:	cc f3       	brlt	.-14     	; 0x22b2 <__fixunssfsi+0x2e>
    22c0:	86 95       	lsr	r24
    22c2:	77 95       	ror	r23
    22c4:	67 95       	ror	r22
    22c6:	b3 95       	inc	r27
    22c8:	d9 f7       	brne	.-10     	; 0x22c0 <__fixunssfsi+0x3c>
    22ca:	3e f4       	brtc	.+14     	; 0x22da <__fixunssfsi+0x56>
    22cc:	90 95       	com	r25
    22ce:	80 95       	com	r24
    22d0:	70 95       	com	r23
    22d2:	61 95       	neg	r22
    22d4:	7f 4f       	sbci	r23, 0xFF	; 255
    22d6:	8f 4f       	sbci	r24, 0xFF	; 255
    22d8:	9f 4f       	sbci	r25, 0xFF	; 255
    22da:	08 95       	ret

000022dc <__floatunsisf>:
    22dc:	e8 94       	clt
    22de:	09 c0       	rjmp	.+18     	; 0x22f2 <__floatsisf+0x12>

000022e0 <__floatsisf>:
    22e0:	97 fb       	bst	r25, 7
    22e2:	3e f4       	brtc	.+14     	; 0x22f2 <__floatsisf+0x12>
    22e4:	90 95       	com	r25
    22e6:	80 95       	com	r24
    22e8:	70 95       	com	r23
    22ea:	61 95       	neg	r22
    22ec:	7f 4f       	sbci	r23, 0xFF	; 255
    22ee:	8f 4f       	sbci	r24, 0xFF	; 255
    22f0:	9f 4f       	sbci	r25, 0xFF	; 255
    22f2:	99 23       	and	r25, r25
    22f4:	a9 f0       	breq	.+42     	; 0x2320 <__floatsisf+0x40>
    22f6:	f9 2f       	mov	r31, r25
    22f8:	96 e9       	ldi	r25, 0x96	; 150
    22fa:	bb 27       	eor	r27, r27
    22fc:	93 95       	inc	r25
    22fe:	f6 95       	lsr	r31
    2300:	87 95       	ror	r24
    2302:	77 95       	ror	r23
    2304:	67 95       	ror	r22
    2306:	b7 95       	ror	r27
    2308:	f1 11       	cpse	r31, r1
    230a:	f8 cf       	rjmp	.-16     	; 0x22fc <__floatsisf+0x1c>
    230c:	fa f4       	brpl	.+62     	; 0x234c <__floatsisf+0x6c>
    230e:	bb 0f       	add	r27, r27
    2310:	11 f4       	brne	.+4      	; 0x2316 <__floatsisf+0x36>
    2312:	60 ff       	sbrs	r22, 0
    2314:	1b c0       	rjmp	.+54     	; 0x234c <__floatsisf+0x6c>
    2316:	6f 5f       	subi	r22, 0xFF	; 255
    2318:	7f 4f       	sbci	r23, 0xFF	; 255
    231a:	8f 4f       	sbci	r24, 0xFF	; 255
    231c:	9f 4f       	sbci	r25, 0xFF	; 255
    231e:	16 c0       	rjmp	.+44     	; 0x234c <__floatsisf+0x6c>
    2320:	88 23       	and	r24, r24
    2322:	11 f0       	breq	.+4      	; 0x2328 <__floatsisf+0x48>
    2324:	96 e9       	ldi	r25, 0x96	; 150
    2326:	11 c0       	rjmp	.+34     	; 0x234a <__floatsisf+0x6a>
    2328:	77 23       	and	r23, r23
    232a:	21 f0       	breq	.+8      	; 0x2334 <__floatsisf+0x54>
    232c:	9e e8       	ldi	r25, 0x8E	; 142
    232e:	87 2f       	mov	r24, r23
    2330:	76 2f       	mov	r23, r22
    2332:	05 c0       	rjmp	.+10     	; 0x233e <__floatsisf+0x5e>
    2334:	66 23       	and	r22, r22
    2336:	71 f0       	breq	.+28     	; 0x2354 <__floatsisf+0x74>
    2338:	96 e8       	ldi	r25, 0x86	; 134
    233a:	86 2f       	mov	r24, r22
    233c:	70 e0       	ldi	r23, 0x00	; 0
    233e:	60 e0       	ldi	r22, 0x00	; 0
    2340:	2a f0       	brmi	.+10     	; 0x234c <__floatsisf+0x6c>
    2342:	9a 95       	dec	r25
    2344:	66 0f       	add	r22, r22
    2346:	77 1f       	adc	r23, r23
    2348:	88 1f       	adc	r24, r24
    234a:	da f7       	brpl	.-10     	; 0x2342 <__floatsisf+0x62>
    234c:	88 0f       	add	r24, r24
    234e:	96 95       	lsr	r25
    2350:	87 95       	ror	r24
    2352:	97 f9       	bld	r25, 7
    2354:	08 95       	ret

00002356 <__fp_inf>:
    2356:	97 f9       	bld	r25, 7
    2358:	9f 67       	ori	r25, 0x7F	; 127
    235a:	80 e8       	ldi	r24, 0x80	; 128
    235c:	70 e0       	ldi	r23, 0x00	; 0
    235e:	60 e0       	ldi	r22, 0x00	; 0
    2360:	08 95       	ret

00002362 <__fp_nan>:
    2362:	9f ef       	ldi	r25, 0xFF	; 255
    2364:	80 ec       	ldi	r24, 0xC0	; 192
    2366:	08 95       	ret

00002368 <__fp_pscA>:
    2368:	00 24       	eor	r0, r0
    236a:	0a 94       	dec	r0
    236c:	16 16       	cp	r1, r22
    236e:	17 06       	cpc	r1, r23
    2370:	18 06       	cpc	r1, r24
    2372:	09 06       	cpc	r0, r25
    2374:	08 95       	ret

00002376 <__fp_pscB>:
    2376:	00 24       	eor	r0, r0
    2378:	0a 94       	dec	r0
    237a:	12 16       	cp	r1, r18
    237c:	13 06       	cpc	r1, r19
    237e:	14 06       	cpc	r1, r20
    2380:	05 06       	cpc	r0, r21
    2382:	08 95       	ret

00002384 <__fp_round>:
    2384:	09 2e       	mov	r0, r25
    2386:	03 94       	inc	r0
    2388:	00 0c       	add	r0, r0
    238a:	11 f4       	brne	.+4      	; 0x2390 <__fp_round+0xc>
    238c:	88 23       	and	r24, r24
    238e:	52 f0       	brmi	.+20     	; 0x23a4 <__fp_round+0x20>
    2390:	bb 0f       	add	r27, r27
    2392:	40 f4       	brcc	.+16     	; 0x23a4 <__fp_round+0x20>
    2394:	bf 2b       	or	r27, r31
    2396:	11 f4       	brne	.+4      	; 0x239c <__fp_round+0x18>
    2398:	60 ff       	sbrs	r22, 0
    239a:	04 c0       	rjmp	.+8      	; 0x23a4 <__fp_round+0x20>
    239c:	6f 5f       	subi	r22, 0xFF	; 255
    239e:	7f 4f       	sbci	r23, 0xFF	; 255
    23a0:	8f 4f       	sbci	r24, 0xFF	; 255
    23a2:	9f 4f       	sbci	r25, 0xFF	; 255
    23a4:	08 95       	ret

000023a6 <__fp_split3>:
    23a6:	57 fd       	sbrc	r21, 7
    23a8:	90 58       	subi	r25, 0x80	; 128
    23aa:	44 0f       	add	r20, r20
    23ac:	55 1f       	adc	r21, r21
    23ae:	59 f0       	breq	.+22     	; 0x23c6 <__fp_splitA+0x10>
    23b0:	5f 3f       	cpi	r21, 0xFF	; 255
    23b2:	71 f0       	breq	.+28     	; 0x23d0 <__fp_splitA+0x1a>
    23b4:	47 95       	ror	r20

000023b6 <__fp_splitA>:
    23b6:	88 0f       	add	r24, r24
    23b8:	97 fb       	bst	r25, 7
    23ba:	99 1f       	adc	r25, r25
    23bc:	61 f0       	breq	.+24     	; 0x23d6 <__fp_splitA+0x20>
    23be:	9f 3f       	cpi	r25, 0xFF	; 255
    23c0:	79 f0       	breq	.+30     	; 0x23e0 <__fp_splitA+0x2a>
    23c2:	87 95       	ror	r24
    23c4:	08 95       	ret
    23c6:	12 16       	cp	r1, r18
    23c8:	13 06       	cpc	r1, r19
    23ca:	14 06       	cpc	r1, r20
    23cc:	55 1f       	adc	r21, r21
    23ce:	f2 cf       	rjmp	.-28     	; 0x23b4 <__fp_split3+0xe>
    23d0:	46 95       	lsr	r20
    23d2:	f1 df       	rcall	.-30     	; 0x23b6 <__fp_splitA>
    23d4:	08 c0       	rjmp	.+16     	; 0x23e6 <__fp_splitA+0x30>
    23d6:	16 16       	cp	r1, r22
    23d8:	17 06       	cpc	r1, r23
    23da:	18 06       	cpc	r1, r24
    23dc:	99 1f       	adc	r25, r25
    23de:	f1 cf       	rjmp	.-30     	; 0x23c2 <__fp_splitA+0xc>
    23e0:	86 95       	lsr	r24
    23e2:	71 05       	cpc	r23, r1
    23e4:	61 05       	cpc	r22, r1
    23e6:	08 94       	sec
    23e8:	08 95       	ret

000023ea <__fp_zero>:
    23ea:	e8 94       	clt

000023ec <__fp_szero>:
    23ec:	bb 27       	eor	r27, r27
    23ee:	66 27       	eor	r22, r22
    23f0:	77 27       	eor	r23, r23
    23f2:	cb 01       	movw	r24, r22
    23f4:	97 f9       	bld	r25, 7
    23f6:	08 95       	ret

000023f8 <__mulsf3>:
    23f8:	0b d0       	rcall	.+22     	; 0x2410 <__mulsf3x>
    23fa:	c4 cf       	rjmp	.-120    	; 0x2384 <__fp_round>
    23fc:	b5 df       	rcall	.-150    	; 0x2368 <__fp_pscA>
    23fe:	28 f0       	brcs	.+10     	; 0x240a <__mulsf3+0x12>
    2400:	ba df       	rcall	.-140    	; 0x2376 <__fp_pscB>
    2402:	18 f0       	brcs	.+6      	; 0x240a <__mulsf3+0x12>
    2404:	95 23       	and	r25, r21
    2406:	09 f0       	breq	.+2      	; 0x240a <__mulsf3+0x12>
    2408:	a6 cf       	rjmp	.-180    	; 0x2356 <__fp_inf>
    240a:	ab cf       	rjmp	.-170    	; 0x2362 <__fp_nan>
    240c:	11 24       	eor	r1, r1
    240e:	ee cf       	rjmp	.-36     	; 0x23ec <__fp_szero>

00002410 <__mulsf3x>:
    2410:	ca df       	rcall	.-108    	; 0x23a6 <__fp_split3>
    2412:	a0 f3       	brcs	.-24     	; 0x23fc <__mulsf3+0x4>

00002414 <__mulsf3_pse>:
    2414:	95 9f       	mul	r25, r21
    2416:	d1 f3       	breq	.-12     	; 0x240c <__mulsf3+0x14>
    2418:	95 0f       	add	r25, r21
    241a:	50 e0       	ldi	r21, 0x00	; 0
    241c:	55 1f       	adc	r21, r21
    241e:	62 9f       	mul	r22, r18
    2420:	f0 01       	movw	r30, r0
    2422:	72 9f       	mul	r23, r18
    2424:	bb 27       	eor	r27, r27
    2426:	f0 0d       	add	r31, r0
    2428:	b1 1d       	adc	r27, r1
    242a:	63 9f       	mul	r22, r19
    242c:	aa 27       	eor	r26, r26
    242e:	f0 0d       	add	r31, r0
    2430:	b1 1d       	adc	r27, r1
    2432:	aa 1f       	adc	r26, r26
    2434:	64 9f       	mul	r22, r20
    2436:	66 27       	eor	r22, r22
    2438:	b0 0d       	add	r27, r0
    243a:	a1 1d       	adc	r26, r1
    243c:	66 1f       	adc	r22, r22
    243e:	82 9f       	mul	r24, r18
    2440:	22 27       	eor	r18, r18
    2442:	b0 0d       	add	r27, r0
    2444:	a1 1d       	adc	r26, r1
    2446:	62 1f       	adc	r22, r18
    2448:	73 9f       	mul	r23, r19
    244a:	b0 0d       	add	r27, r0
    244c:	a1 1d       	adc	r26, r1
    244e:	62 1f       	adc	r22, r18
    2450:	83 9f       	mul	r24, r19
    2452:	a0 0d       	add	r26, r0
    2454:	61 1d       	adc	r22, r1
    2456:	22 1f       	adc	r18, r18
    2458:	74 9f       	mul	r23, r20
    245a:	33 27       	eor	r19, r19
    245c:	a0 0d       	add	r26, r0
    245e:	61 1d       	adc	r22, r1
    2460:	23 1f       	adc	r18, r19
    2462:	84 9f       	mul	r24, r20
    2464:	60 0d       	add	r22, r0
    2466:	21 1d       	adc	r18, r1
    2468:	82 2f       	mov	r24, r18
    246a:	76 2f       	mov	r23, r22
    246c:	6a 2f       	mov	r22, r26
    246e:	11 24       	eor	r1, r1
    2470:	9f 57       	subi	r25, 0x7F	; 127
    2472:	50 40       	sbci	r21, 0x00	; 0
    2474:	8a f0       	brmi	.+34     	; 0x2498 <__mulsf3_pse+0x84>
    2476:	e1 f0       	breq	.+56     	; 0x24b0 <__mulsf3_pse+0x9c>
    2478:	88 23       	and	r24, r24
    247a:	4a f0       	brmi	.+18     	; 0x248e <__mulsf3_pse+0x7a>
    247c:	ee 0f       	add	r30, r30
    247e:	ff 1f       	adc	r31, r31
    2480:	bb 1f       	adc	r27, r27
    2482:	66 1f       	adc	r22, r22
    2484:	77 1f       	adc	r23, r23
    2486:	88 1f       	adc	r24, r24
    2488:	91 50       	subi	r25, 0x01	; 1
    248a:	50 40       	sbci	r21, 0x00	; 0
    248c:	a9 f7       	brne	.-22     	; 0x2478 <__mulsf3_pse+0x64>
    248e:	9e 3f       	cpi	r25, 0xFE	; 254
    2490:	51 05       	cpc	r21, r1
    2492:	70 f0       	brcs	.+28     	; 0x24b0 <__mulsf3_pse+0x9c>
    2494:	60 cf       	rjmp	.-320    	; 0x2356 <__fp_inf>
    2496:	aa cf       	rjmp	.-172    	; 0x23ec <__fp_szero>
    2498:	5f 3f       	cpi	r21, 0xFF	; 255
    249a:	ec f3       	brlt	.-6      	; 0x2496 <__mulsf3_pse+0x82>
    249c:	98 3e       	cpi	r25, 0xE8	; 232
    249e:	dc f3       	brlt	.-10     	; 0x2496 <__mulsf3_pse+0x82>
    24a0:	86 95       	lsr	r24
    24a2:	77 95       	ror	r23
    24a4:	67 95       	ror	r22
    24a6:	b7 95       	ror	r27
    24a8:	f7 95       	ror	r31
    24aa:	e7 95       	ror	r30
    24ac:	9f 5f       	subi	r25, 0xFF	; 255
    24ae:	c1 f7       	brne	.-16     	; 0x24a0 <__mulsf3_pse+0x8c>
    24b0:	fe 2b       	or	r31, r30
    24b2:	88 0f       	add	r24, r24
    24b4:	91 1d       	adc	r25, r1
    24b6:	96 95       	lsr	r25
    24b8:	87 95       	ror	r24
    24ba:	97 f9       	bld	r25, 7
    24bc:	08 95       	ret

000024be <__udivmodsi4>:
    24be:	a1 e2       	ldi	r26, 0x21	; 33
    24c0:	1a 2e       	mov	r1, r26
    24c2:	aa 1b       	sub	r26, r26
    24c4:	bb 1b       	sub	r27, r27
    24c6:	fd 01       	movw	r30, r26
    24c8:	0d c0       	rjmp	.+26     	; 0x24e4 <__udivmodsi4_ep>

000024ca <__udivmodsi4_loop>:
    24ca:	aa 1f       	adc	r26, r26
    24cc:	bb 1f       	adc	r27, r27
    24ce:	ee 1f       	adc	r30, r30
    24d0:	ff 1f       	adc	r31, r31
    24d2:	a2 17       	cp	r26, r18
    24d4:	b3 07       	cpc	r27, r19
    24d6:	e4 07       	cpc	r30, r20
    24d8:	f5 07       	cpc	r31, r21
    24da:	20 f0       	brcs	.+8      	; 0x24e4 <__udivmodsi4_ep>
    24dc:	a2 1b       	sub	r26, r18
    24de:	b3 0b       	sbc	r27, r19
    24e0:	e4 0b       	sbc	r30, r20
    24e2:	f5 0b       	sbc	r31, r21

000024e4 <__udivmodsi4_ep>:
    24e4:	66 1f       	adc	r22, r22
    24e6:	77 1f       	adc	r23, r23
    24e8:	88 1f       	adc	r24, r24
    24ea:	99 1f       	adc	r25, r25
    24ec:	1a 94       	dec	r1
    24ee:	69 f7       	brne	.-38     	; 0x24ca <__udivmodsi4_loop>
    24f0:	60 95       	com	r22
    24f2:	70 95       	com	r23
    24f4:	80 95       	com	r24
    24f6:	90 95       	com	r25
    24f8:	9b 01       	movw	r18, r22
    24fa:	ac 01       	movw	r20, r24
    24fc:	bd 01       	movw	r22, r26
    24fe:	cf 01       	movw	r24, r30
    2500:	08 95       	ret

00002502 <__tablejump2__>:
    2502:	ee 0f       	add	r30, r30
    2504:	ff 1f       	adc	r31, r31
    2506:	88 1f       	adc	r24, r24
    2508:	8b bf       	out	0x3b, r24	; 59
    250a:	07 90       	elpm	r0, Z+
    250c:	f6 91       	elpm	r31, Z
    250e:	e0 2d       	mov	r30, r0
    2510:	19 94       	eijmp

00002512 <__umulhisi3>:
    2512:	a2 9f       	mul	r26, r18
    2514:	b0 01       	movw	r22, r0
    2516:	b3 9f       	mul	r27, r19
    2518:	c0 01       	movw	r24, r0
    251a:	a3 9f       	mul	r26, r19
    251c:	70 0d       	add	r23, r0
    251e:	81 1d       	adc	r24, r1
    2520:	11 24       	eor	r1, r1
    2522:	91 1d       	adc	r25, r1
    2524:	b2 9f       	mul	r27, r18
    2526:	70 0d       	add	r23, r0
    2528:	81 1d       	adc	r24, r1
    252a:	11 24       	eor	r1, r1
    252c:	91 1d       	adc	r25, r1
    252e:	08 95       	ret

00002530 <__muluhisi3>:
    2530:	f0 df       	rcall	.-32     	; 0x2512 <__umulhisi3>
    2532:	a5 9f       	mul	r26, r21
    2534:	90 0d       	add	r25, r0
    2536:	b4 9f       	mul	r27, r20
    2538:	90 0d       	add	r25, r0
    253a:	a4 9f       	mul	r26, r20
    253c:	80 0d       	add	r24, r0
    253e:	91 1d       	adc	r25, r1
    2540:	11 24       	eor	r1, r1
    2542:	08 95       	ret

00002544 <malloc>:
    2544:	0f 93       	push	r16
    2546:	1f 93       	push	r17
    2548:	cf 93       	push	r28
    254a:	df 93       	push	r29
    254c:	82 30       	cpi	r24, 0x02	; 2
    254e:	91 05       	cpc	r25, r1
    2550:	10 f4       	brcc	.+4      	; 0x2556 <malloc+0x12>
    2552:	82 e0       	ldi	r24, 0x02	; 2
    2554:	90 e0       	ldi	r25, 0x00	; 0
    2556:	e0 91 7f 04 	lds	r30, 0x047F	; 0x80047f <__flp>
    255a:	f0 91 80 04 	lds	r31, 0x0480	; 0x800480 <__flp+0x1>
    255e:	20 e0       	ldi	r18, 0x00	; 0
    2560:	30 e0       	ldi	r19, 0x00	; 0
    2562:	a0 e0       	ldi	r26, 0x00	; 0
    2564:	b0 e0       	ldi	r27, 0x00	; 0
    2566:	30 97       	sbiw	r30, 0x00	; 0
    2568:	19 f1       	breq	.+70     	; 0x25b0 <malloc+0x6c>
    256a:	40 81       	ld	r20, Z
    256c:	51 81       	ldd	r21, Z+1	; 0x01
    256e:	02 81       	ldd	r16, Z+2	; 0x02
    2570:	13 81       	ldd	r17, Z+3	; 0x03
    2572:	48 17       	cp	r20, r24
    2574:	59 07       	cpc	r21, r25
    2576:	c8 f0       	brcs	.+50     	; 0x25aa <malloc+0x66>
    2578:	84 17       	cp	r24, r20
    257a:	95 07       	cpc	r25, r21
    257c:	69 f4       	brne	.+26     	; 0x2598 <malloc+0x54>
    257e:	10 97       	sbiw	r26, 0x00	; 0
    2580:	31 f0       	breq	.+12     	; 0x258e <malloc+0x4a>
    2582:	12 96       	adiw	r26, 0x02	; 2
    2584:	0c 93       	st	X, r16
    2586:	12 97       	sbiw	r26, 0x02	; 2
    2588:	13 96       	adiw	r26, 0x03	; 3
    258a:	1c 93       	st	X, r17
    258c:	27 c0       	rjmp	.+78     	; 0x25dc <malloc+0x98>
    258e:	00 93 7f 04 	sts	0x047F, r16	; 0x80047f <__flp>
    2592:	10 93 80 04 	sts	0x0480, r17	; 0x800480 <__flp+0x1>
    2596:	22 c0       	rjmp	.+68     	; 0x25dc <malloc+0x98>
    2598:	21 15       	cp	r18, r1
    259a:	31 05       	cpc	r19, r1
    259c:	19 f0       	breq	.+6      	; 0x25a4 <malloc+0x60>
    259e:	42 17       	cp	r20, r18
    25a0:	53 07       	cpc	r21, r19
    25a2:	18 f4       	brcc	.+6      	; 0x25aa <malloc+0x66>
    25a4:	9a 01       	movw	r18, r20
    25a6:	bd 01       	movw	r22, r26
    25a8:	ef 01       	movw	r28, r30
    25aa:	df 01       	movw	r26, r30
    25ac:	f8 01       	movw	r30, r16
    25ae:	db cf       	rjmp	.-74     	; 0x2566 <malloc+0x22>
    25b0:	21 15       	cp	r18, r1
    25b2:	31 05       	cpc	r19, r1
    25b4:	f9 f0       	breq	.+62     	; 0x25f4 <malloc+0xb0>
    25b6:	28 1b       	sub	r18, r24
    25b8:	39 0b       	sbc	r19, r25
    25ba:	24 30       	cpi	r18, 0x04	; 4
    25bc:	31 05       	cpc	r19, r1
    25be:	80 f4       	brcc	.+32     	; 0x25e0 <malloc+0x9c>
    25c0:	8a 81       	ldd	r24, Y+2	; 0x02
    25c2:	9b 81       	ldd	r25, Y+3	; 0x03
    25c4:	61 15       	cp	r22, r1
    25c6:	71 05       	cpc	r23, r1
    25c8:	21 f0       	breq	.+8      	; 0x25d2 <malloc+0x8e>
    25ca:	fb 01       	movw	r30, r22
    25cc:	93 83       	std	Z+3, r25	; 0x03
    25ce:	82 83       	std	Z+2, r24	; 0x02
    25d0:	04 c0       	rjmp	.+8      	; 0x25da <malloc+0x96>
    25d2:	90 93 80 04 	sts	0x0480, r25	; 0x800480 <__flp+0x1>
    25d6:	80 93 7f 04 	sts	0x047F, r24	; 0x80047f <__flp>
    25da:	fe 01       	movw	r30, r28
    25dc:	32 96       	adiw	r30, 0x02	; 2
    25de:	44 c0       	rjmp	.+136    	; 0x2668 <malloc+0x124>
    25e0:	fe 01       	movw	r30, r28
    25e2:	e2 0f       	add	r30, r18
    25e4:	f3 1f       	adc	r31, r19
    25e6:	81 93       	st	Z+, r24
    25e8:	91 93       	st	Z+, r25
    25ea:	22 50       	subi	r18, 0x02	; 2
    25ec:	31 09       	sbc	r19, r1
    25ee:	39 83       	std	Y+1, r19	; 0x01
    25f0:	28 83       	st	Y, r18
    25f2:	3a c0       	rjmp	.+116    	; 0x2668 <malloc+0x124>
    25f4:	20 91 7d 04 	lds	r18, 0x047D	; 0x80047d <__brkval>
    25f8:	30 91 7e 04 	lds	r19, 0x047E	; 0x80047e <__brkval+0x1>
    25fc:	23 2b       	or	r18, r19
    25fe:	41 f4       	brne	.+16     	; 0x2610 <malloc+0xcc>
    2600:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
    2604:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
    2608:	30 93 7e 04 	sts	0x047E, r19	; 0x80047e <__brkval+0x1>
    260c:	20 93 7d 04 	sts	0x047D, r18	; 0x80047d <__brkval>
    2610:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
    2614:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
    2618:	21 15       	cp	r18, r1
    261a:	31 05       	cpc	r19, r1
    261c:	41 f4       	brne	.+16     	; 0x262e <malloc+0xea>
    261e:	2d b7       	in	r18, 0x3d	; 61
    2620:	3e b7       	in	r19, 0x3e	; 62
    2622:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
    2626:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
    262a:	24 1b       	sub	r18, r20
    262c:	35 0b       	sbc	r19, r21
    262e:	e0 91 7d 04 	lds	r30, 0x047D	; 0x80047d <__brkval>
    2632:	f0 91 7e 04 	lds	r31, 0x047E	; 0x80047e <__brkval+0x1>
    2636:	e2 17       	cp	r30, r18
    2638:	f3 07       	cpc	r31, r19
    263a:	a0 f4       	brcc	.+40     	; 0x2664 <malloc+0x120>
    263c:	2e 1b       	sub	r18, r30
    263e:	3f 0b       	sbc	r19, r31
    2640:	28 17       	cp	r18, r24
    2642:	39 07       	cpc	r19, r25
    2644:	78 f0       	brcs	.+30     	; 0x2664 <malloc+0x120>
    2646:	ac 01       	movw	r20, r24
    2648:	4e 5f       	subi	r20, 0xFE	; 254
    264a:	5f 4f       	sbci	r21, 0xFF	; 255
    264c:	24 17       	cp	r18, r20
    264e:	35 07       	cpc	r19, r21
    2650:	48 f0       	brcs	.+18     	; 0x2664 <malloc+0x120>
    2652:	4e 0f       	add	r20, r30
    2654:	5f 1f       	adc	r21, r31
    2656:	50 93 7e 04 	sts	0x047E, r21	; 0x80047e <__brkval+0x1>
    265a:	40 93 7d 04 	sts	0x047D, r20	; 0x80047d <__brkval>
    265e:	81 93       	st	Z+, r24
    2660:	91 93       	st	Z+, r25
    2662:	02 c0       	rjmp	.+4      	; 0x2668 <malloc+0x124>
    2664:	e0 e0       	ldi	r30, 0x00	; 0
    2666:	f0 e0       	ldi	r31, 0x00	; 0
    2668:	cf 01       	movw	r24, r30
    266a:	df 91       	pop	r29
    266c:	cf 91       	pop	r28
    266e:	1f 91       	pop	r17
    2670:	0f 91       	pop	r16
    2672:	08 95       	ret

00002674 <free>:
    2674:	cf 93       	push	r28
    2676:	df 93       	push	r29
    2678:	00 97       	sbiw	r24, 0x00	; 0
    267a:	09 f4       	brne	.+2      	; 0x267e <free+0xa>
    267c:	81 c0       	rjmp	.+258    	; 0x2780 <free+0x10c>
    267e:	fc 01       	movw	r30, r24
    2680:	32 97       	sbiw	r30, 0x02	; 2
    2682:	13 82       	std	Z+3, r1	; 0x03
    2684:	12 82       	std	Z+2, r1	; 0x02
    2686:	a0 91 7f 04 	lds	r26, 0x047F	; 0x80047f <__flp>
    268a:	b0 91 80 04 	lds	r27, 0x0480	; 0x800480 <__flp+0x1>
    268e:	10 97       	sbiw	r26, 0x00	; 0
    2690:	81 f4       	brne	.+32     	; 0x26b2 <free+0x3e>
    2692:	20 81       	ld	r18, Z
    2694:	31 81       	ldd	r19, Z+1	; 0x01
    2696:	82 0f       	add	r24, r18
    2698:	93 1f       	adc	r25, r19
    269a:	20 91 7d 04 	lds	r18, 0x047D	; 0x80047d <__brkval>
    269e:	30 91 7e 04 	lds	r19, 0x047E	; 0x80047e <__brkval+0x1>
    26a2:	28 17       	cp	r18, r24
    26a4:	39 07       	cpc	r19, r25
    26a6:	51 f5       	brne	.+84     	; 0x26fc <free+0x88>
    26a8:	f0 93 7e 04 	sts	0x047E, r31	; 0x80047e <__brkval+0x1>
    26ac:	e0 93 7d 04 	sts	0x047D, r30	; 0x80047d <__brkval>
    26b0:	67 c0       	rjmp	.+206    	; 0x2780 <free+0x10c>
    26b2:	ed 01       	movw	r28, r26
    26b4:	20 e0       	ldi	r18, 0x00	; 0
    26b6:	30 e0       	ldi	r19, 0x00	; 0
    26b8:	ce 17       	cp	r28, r30
    26ba:	df 07       	cpc	r29, r31
    26bc:	40 f4       	brcc	.+16     	; 0x26ce <free+0x5a>
    26be:	4a 81       	ldd	r20, Y+2	; 0x02
    26c0:	5b 81       	ldd	r21, Y+3	; 0x03
    26c2:	9e 01       	movw	r18, r28
    26c4:	41 15       	cp	r20, r1
    26c6:	51 05       	cpc	r21, r1
    26c8:	f1 f0       	breq	.+60     	; 0x2706 <free+0x92>
    26ca:	ea 01       	movw	r28, r20
    26cc:	f5 cf       	rjmp	.-22     	; 0x26b8 <free+0x44>
    26ce:	d3 83       	std	Z+3, r29	; 0x03
    26d0:	c2 83       	std	Z+2, r28	; 0x02
    26d2:	40 81       	ld	r20, Z
    26d4:	51 81       	ldd	r21, Z+1	; 0x01
    26d6:	84 0f       	add	r24, r20
    26d8:	95 1f       	adc	r25, r21
    26da:	c8 17       	cp	r28, r24
    26dc:	d9 07       	cpc	r29, r25
    26de:	59 f4       	brne	.+22     	; 0x26f6 <free+0x82>
    26e0:	88 81       	ld	r24, Y
    26e2:	99 81       	ldd	r25, Y+1	; 0x01
    26e4:	84 0f       	add	r24, r20
    26e6:	95 1f       	adc	r25, r21
    26e8:	02 96       	adiw	r24, 0x02	; 2
    26ea:	91 83       	std	Z+1, r25	; 0x01
    26ec:	80 83       	st	Z, r24
    26ee:	8a 81       	ldd	r24, Y+2	; 0x02
    26f0:	9b 81       	ldd	r25, Y+3	; 0x03
    26f2:	93 83       	std	Z+3, r25	; 0x03
    26f4:	82 83       	std	Z+2, r24	; 0x02
    26f6:	21 15       	cp	r18, r1
    26f8:	31 05       	cpc	r19, r1
    26fa:	29 f4       	brne	.+10     	; 0x2706 <free+0x92>
    26fc:	f0 93 80 04 	sts	0x0480, r31	; 0x800480 <__flp+0x1>
    2700:	e0 93 7f 04 	sts	0x047F, r30	; 0x80047f <__flp>
    2704:	3d c0       	rjmp	.+122    	; 0x2780 <free+0x10c>
    2706:	e9 01       	movw	r28, r18
    2708:	fb 83       	std	Y+3, r31	; 0x03
    270a:	ea 83       	std	Y+2, r30	; 0x02
    270c:	49 91       	ld	r20, Y+
    270e:	59 91       	ld	r21, Y+
    2710:	c4 0f       	add	r28, r20
    2712:	d5 1f       	adc	r29, r21
    2714:	ec 17       	cp	r30, r28
    2716:	fd 07       	cpc	r31, r29
    2718:	61 f4       	brne	.+24     	; 0x2732 <free+0xbe>
    271a:	80 81       	ld	r24, Z
    271c:	91 81       	ldd	r25, Z+1	; 0x01
    271e:	84 0f       	add	r24, r20
    2720:	95 1f       	adc	r25, r21
    2722:	02 96       	adiw	r24, 0x02	; 2
    2724:	e9 01       	movw	r28, r18
    2726:	99 83       	std	Y+1, r25	; 0x01
    2728:	88 83       	st	Y, r24
    272a:	82 81       	ldd	r24, Z+2	; 0x02
    272c:	93 81       	ldd	r25, Z+3	; 0x03
    272e:	9b 83       	std	Y+3, r25	; 0x03
    2730:	8a 83       	std	Y+2, r24	; 0x02
    2732:	e0 e0       	ldi	r30, 0x00	; 0
    2734:	f0 e0       	ldi	r31, 0x00	; 0
    2736:	12 96       	adiw	r26, 0x02	; 2
    2738:	8d 91       	ld	r24, X+
    273a:	9c 91       	ld	r25, X
    273c:	13 97       	sbiw	r26, 0x03	; 3
    273e:	00 97       	sbiw	r24, 0x00	; 0
    2740:	19 f0       	breq	.+6      	; 0x2748 <free+0xd4>
    2742:	fd 01       	movw	r30, r26
    2744:	dc 01       	movw	r26, r24
    2746:	f7 cf       	rjmp	.-18     	; 0x2736 <free+0xc2>
    2748:	8d 91       	ld	r24, X+
    274a:	9c 91       	ld	r25, X
    274c:	11 97       	sbiw	r26, 0x01	; 1
    274e:	9d 01       	movw	r18, r26
    2750:	2e 5f       	subi	r18, 0xFE	; 254
    2752:	3f 4f       	sbci	r19, 0xFF	; 255
    2754:	82 0f       	add	r24, r18
    2756:	93 1f       	adc	r25, r19
    2758:	20 91 7d 04 	lds	r18, 0x047D	; 0x80047d <__brkval>
    275c:	30 91 7e 04 	lds	r19, 0x047E	; 0x80047e <__brkval+0x1>
    2760:	28 17       	cp	r18, r24
    2762:	39 07       	cpc	r19, r25
    2764:	69 f4       	brne	.+26     	; 0x2780 <free+0x10c>
    2766:	30 97       	sbiw	r30, 0x00	; 0
    2768:	29 f4       	brne	.+10     	; 0x2774 <free+0x100>
    276a:	10 92 80 04 	sts	0x0480, r1	; 0x800480 <__flp+0x1>
    276e:	10 92 7f 04 	sts	0x047F, r1	; 0x80047f <__flp>
    2772:	02 c0       	rjmp	.+4      	; 0x2778 <free+0x104>
    2774:	13 82       	std	Z+3, r1	; 0x03
    2776:	12 82       	std	Z+2, r1	; 0x02
    2778:	b0 93 7e 04 	sts	0x047E, r27	; 0x80047e <__brkval+0x1>
    277c:	a0 93 7d 04 	sts	0x047D, r26	; 0x80047d <__brkval>
    2780:	df 91       	pop	r29
    2782:	cf 91       	pop	r28
    2784:	08 95       	ret

00002786 <memcpy>:
    2786:	fb 01       	movw	r30, r22
    2788:	dc 01       	movw	r26, r24
    278a:	02 c0       	rjmp	.+4      	; 0x2790 <memcpy+0xa>
    278c:	01 90       	ld	r0, Z+
    278e:	0d 92       	st	X+, r0
    2790:	41 50       	subi	r20, 0x01	; 1
    2792:	50 40       	sbci	r21, 0x00	; 0
    2794:	d8 f7       	brcc	.-10     	; 0x278c <memcpy+0x6>
    2796:	08 95       	ret

00002798 <memset>:
    2798:	dc 01       	movw	r26, r24
    279a:	01 c0       	rjmp	.+2      	; 0x279e <memset+0x6>
    279c:	6d 93       	st	X+, r22
    279e:	41 50       	subi	r20, 0x01	; 1
    27a0:	50 40       	sbci	r21, 0x00	; 0
    27a2:	e0 f7       	brcc	.-8      	; 0x279c <memset+0x4>
    27a4:	08 95       	ret

000027a6 <sprintf>:
    27a6:	0f 93       	push	r16
    27a8:	1f 93       	push	r17
    27aa:	cf 93       	push	r28
    27ac:	df 93       	push	r29
    27ae:	cd b7       	in	r28, 0x3d	; 61
    27b0:	de b7       	in	r29, 0x3e	; 62
    27b2:	2e 97       	sbiw	r28, 0x0e	; 14
    27b4:	0f b6       	in	r0, 0x3f	; 63
    27b6:	f8 94       	cli
    27b8:	de bf       	out	0x3e, r29	; 62
    27ba:	0f be       	out	0x3f, r0	; 63
    27bc:	cd bf       	out	0x3d, r28	; 61
    27be:	0e 89       	ldd	r16, Y+22	; 0x16
    27c0:	1f 89       	ldd	r17, Y+23	; 0x17
    27c2:	86 e0       	ldi	r24, 0x06	; 6
    27c4:	8c 83       	std	Y+4, r24	; 0x04
    27c6:	1a 83       	std	Y+2, r17	; 0x02
    27c8:	09 83       	std	Y+1, r16	; 0x01
    27ca:	8f ef       	ldi	r24, 0xFF	; 255
    27cc:	9f e7       	ldi	r25, 0x7F	; 127
    27ce:	9e 83       	std	Y+6, r25	; 0x06
    27d0:	8d 83       	std	Y+5, r24	; 0x05
    27d2:	ae 01       	movw	r20, r28
    27d4:	46 5e       	subi	r20, 0xE6	; 230
    27d6:	5f 4f       	sbci	r21, 0xFF	; 255
    27d8:	68 8d       	ldd	r22, Y+24	; 0x18
    27da:	79 8d       	ldd	r23, Y+25	; 0x19
    27dc:	ce 01       	movw	r24, r28
    27de:	01 96       	adiw	r24, 0x01	; 1
    27e0:	10 d0       	rcall	.+32     	; 0x2802 <vfprintf>
    27e2:	ef 81       	ldd	r30, Y+7	; 0x07
    27e4:	f8 85       	ldd	r31, Y+8	; 0x08
    27e6:	e0 0f       	add	r30, r16
    27e8:	f1 1f       	adc	r31, r17
    27ea:	10 82       	st	Z, r1
    27ec:	2e 96       	adiw	r28, 0x0e	; 14
    27ee:	0f b6       	in	r0, 0x3f	; 63
    27f0:	f8 94       	cli
    27f2:	de bf       	out	0x3e, r29	; 62
    27f4:	0f be       	out	0x3f, r0	; 63
    27f6:	cd bf       	out	0x3d, r28	; 61
    27f8:	df 91       	pop	r29
    27fa:	cf 91       	pop	r28
    27fc:	1f 91       	pop	r17
    27fe:	0f 91       	pop	r16
    2800:	08 95       	ret

00002802 <vfprintf>:
    2802:	2f 92       	push	r2
    2804:	3f 92       	push	r3
    2806:	4f 92       	push	r4
    2808:	5f 92       	push	r5
    280a:	6f 92       	push	r6
    280c:	7f 92       	push	r7
    280e:	8f 92       	push	r8
    2810:	9f 92       	push	r9
    2812:	af 92       	push	r10
    2814:	bf 92       	push	r11
    2816:	cf 92       	push	r12
    2818:	df 92       	push	r13
    281a:	ef 92       	push	r14
    281c:	ff 92       	push	r15
    281e:	0f 93       	push	r16
    2820:	1f 93       	push	r17
    2822:	cf 93       	push	r28
    2824:	df 93       	push	r29
    2826:	cd b7       	in	r28, 0x3d	; 61
    2828:	de b7       	in	r29, 0x3e	; 62
    282a:	2b 97       	sbiw	r28, 0x0b	; 11
    282c:	0f b6       	in	r0, 0x3f	; 63
    282e:	f8 94       	cli
    2830:	de bf       	out	0x3e, r29	; 62
    2832:	0f be       	out	0x3f, r0	; 63
    2834:	cd bf       	out	0x3d, r28	; 61
    2836:	6c 01       	movw	r12, r24
    2838:	7b 01       	movw	r14, r22
    283a:	8a 01       	movw	r16, r20
    283c:	fc 01       	movw	r30, r24
    283e:	17 82       	std	Z+7, r1	; 0x07
    2840:	16 82       	std	Z+6, r1	; 0x06
    2842:	83 81       	ldd	r24, Z+3	; 0x03
    2844:	81 ff       	sbrs	r24, 1
    2846:	bf c1       	rjmp	.+894    	; 0x2bc6 <vfprintf+0x3c4>
    2848:	ce 01       	movw	r24, r28
    284a:	01 96       	adiw	r24, 0x01	; 1
    284c:	3c 01       	movw	r6, r24
    284e:	f6 01       	movw	r30, r12
    2850:	93 81       	ldd	r25, Z+3	; 0x03
    2852:	f7 01       	movw	r30, r14
    2854:	93 fd       	sbrc	r25, 3
    2856:	85 91       	lpm	r24, Z+
    2858:	93 ff       	sbrs	r25, 3
    285a:	81 91       	ld	r24, Z+
    285c:	7f 01       	movw	r14, r30
    285e:	88 23       	and	r24, r24
    2860:	09 f4       	brne	.+2      	; 0x2864 <vfprintf+0x62>
    2862:	ad c1       	rjmp	.+858    	; 0x2bbe <vfprintf+0x3bc>
    2864:	85 32       	cpi	r24, 0x25	; 37
    2866:	39 f4       	brne	.+14     	; 0x2876 <vfprintf+0x74>
    2868:	93 fd       	sbrc	r25, 3
    286a:	85 91       	lpm	r24, Z+
    286c:	93 ff       	sbrs	r25, 3
    286e:	81 91       	ld	r24, Z+
    2870:	7f 01       	movw	r14, r30
    2872:	85 32       	cpi	r24, 0x25	; 37
    2874:	21 f4       	brne	.+8      	; 0x287e <vfprintf+0x7c>
    2876:	b6 01       	movw	r22, r12
    2878:	90 e0       	ldi	r25, 0x00	; 0
    287a:	d6 d1       	rcall	.+940    	; 0x2c28 <fputc>
    287c:	e8 cf       	rjmp	.-48     	; 0x284e <vfprintf+0x4c>
    287e:	91 2c       	mov	r9, r1
    2880:	21 2c       	mov	r2, r1
    2882:	31 2c       	mov	r3, r1
    2884:	ff e1       	ldi	r31, 0x1F	; 31
    2886:	f3 15       	cp	r31, r3
    2888:	d8 f0       	brcs	.+54     	; 0x28c0 <vfprintf+0xbe>
    288a:	8b 32       	cpi	r24, 0x2B	; 43
    288c:	79 f0       	breq	.+30     	; 0x28ac <vfprintf+0xaa>
    288e:	38 f4       	brcc	.+14     	; 0x289e <vfprintf+0x9c>
    2890:	80 32       	cpi	r24, 0x20	; 32
    2892:	79 f0       	breq	.+30     	; 0x28b2 <vfprintf+0xb0>
    2894:	83 32       	cpi	r24, 0x23	; 35
    2896:	a1 f4       	brne	.+40     	; 0x28c0 <vfprintf+0xbe>
    2898:	23 2d       	mov	r18, r3
    289a:	20 61       	ori	r18, 0x10	; 16
    289c:	1d c0       	rjmp	.+58     	; 0x28d8 <vfprintf+0xd6>
    289e:	8d 32       	cpi	r24, 0x2D	; 45
    28a0:	61 f0       	breq	.+24     	; 0x28ba <vfprintf+0xb8>
    28a2:	80 33       	cpi	r24, 0x30	; 48
    28a4:	69 f4       	brne	.+26     	; 0x28c0 <vfprintf+0xbe>
    28a6:	23 2d       	mov	r18, r3
    28a8:	21 60       	ori	r18, 0x01	; 1
    28aa:	16 c0       	rjmp	.+44     	; 0x28d8 <vfprintf+0xd6>
    28ac:	83 2d       	mov	r24, r3
    28ae:	82 60       	ori	r24, 0x02	; 2
    28b0:	38 2e       	mov	r3, r24
    28b2:	e3 2d       	mov	r30, r3
    28b4:	e4 60       	ori	r30, 0x04	; 4
    28b6:	3e 2e       	mov	r3, r30
    28b8:	2a c0       	rjmp	.+84     	; 0x290e <vfprintf+0x10c>
    28ba:	f3 2d       	mov	r31, r3
    28bc:	f8 60       	ori	r31, 0x08	; 8
    28be:	1d c0       	rjmp	.+58     	; 0x28fa <vfprintf+0xf8>
    28c0:	37 fc       	sbrc	r3, 7
    28c2:	2d c0       	rjmp	.+90     	; 0x291e <vfprintf+0x11c>
    28c4:	20 ed       	ldi	r18, 0xD0	; 208
    28c6:	28 0f       	add	r18, r24
    28c8:	2a 30       	cpi	r18, 0x0A	; 10
    28ca:	40 f0       	brcs	.+16     	; 0x28dc <vfprintf+0xda>
    28cc:	8e 32       	cpi	r24, 0x2E	; 46
    28ce:	b9 f4       	brne	.+46     	; 0x28fe <vfprintf+0xfc>
    28d0:	36 fc       	sbrc	r3, 6
    28d2:	75 c1       	rjmp	.+746    	; 0x2bbe <vfprintf+0x3bc>
    28d4:	23 2d       	mov	r18, r3
    28d6:	20 64       	ori	r18, 0x40	; 64
    28d8:	32 2e       	mov	r3, r18
    28da:	19 c0       	rjmp	.+50     	; 0x290e <vfprintf+0x10c>
    28dc:	36 fe       	sbrs	r3, 6
    28de:	06 c0       	rjmp	.+12     	; 0x28ec <vfprintf+0xea>
    28e0:	8a e0       	ldi	r24, 0x0A	; 10
    28e2:	98 9e       	mul	r9, r24
    28e4:	20 0d       	add	r18, r0
    28e6:	11 24       	eor	r1, r1
    28e8:	92 2e       	mov	r9, r18
    28ea:	11 c0       	rjmp	.+34     	; 0x290e <vfprintf+0x10c>
    28ec:	ea e0       	ldi	r30, 0x0A	; 10
    28ee:	2e 9e       	mul	r2, r30
    28f0:	20 0d       	add	r18, r0
    28f2:	11 24       	eor	r1, r1
    28f4:	22 2e       	mov	r2, r18
    28f6:	f3 2d       	mov	r31, r3
    28f8:	f0 62       	ori	r31, 0x20	; 32
    28fa:	3f 2e       	mov	r3, r31
    28fc:	08 c0       	rjmp	.+16     	; 0x290e <vfprintf+0x10c>
    28fe:	8c 36       	cpi	r24, 0x6C	; 108
    2900:	21 f4       	brne	.+8      	; 0x290a <vfprintf+0x108>
    2902:	83 2d       	mov	r24, r3
    2904:	80 68       	ori	r24, 0x80	; 128
    2906:	38 2e       	mov	r3, r24
    2908:	02 c0       	rjmp	.+4      	; 0x290e <vfprintf+0x10c>
    290a:	88 36       	cpi	r24, 0x68	; 104
    290c:	41 f4       	brne	.+16     	; 0x291e <vfprintf+0x11c>
    290e:	f7 01       	movw	r30, r14
    2910:	93 fd       	sbrc	r25, 3
    2912:	85 91       	lpm	r24, Z+
    2914:	93 ff       	sbrs	r25, 3
    2916:	81 91       	ld	r24, Z+
    2918:	7f 01       	movw	r14, r30
    291a:	81 11       	cpse	r24, r1
    291c:	b3 cf       	rjmp	.-154    	; 0x2884 <vfprintf+0x82>
    291e:	98 2f       	mov	r25, r24
    2920:	9f 7d       	andi	r25, 0xDF	; 223
    2922:	95 54       	subi	r25, 0x45	; 69
    2924:	93 30       	cpi	r25, 0x03	; 3
    2926:	28 f4       	brcc	.+10     	; 0x2932 <vfprintf+0x130>
    2928:	0c 5f       	subi	r16, 0xFC	; 252
    292a:	1f 4f       	sbci	r17, 0xFF	; 255
    292c:	9f e3       	ldi	r25, 0x3F	; 63
    292e:	99 83       	std	Y+1, r25	; 0x01
    2930:	0d c0       	rjmp	.+26     	; 0x294c <vfprintf+0x14a>
    2932:	83 36       	cpi	r24, 0x63	; 99
    2934:	31 f0       	breq	.+12     	; 0x2942 <vfprintf+0x140>
    2936:	83 37       	cpi	r24, 0x73	; 115
    2938:	71 f0       	breq	.+28     	; 0x2956 <vfprintf+0x154>
    293a:	83 35       	cpi	r24, 0x53	; 83
    293c:	09 f0       	breq	.+2      	; 0x2940 <vfprintf+0x13e>
    293e:	55 c0       	rjmp	.+170    	; 0x29ea <vfprintf+0x1e8>
    2940:	20 c0       	rjmp	.+64     	; 0x2982 <vfprintf+0x180>
    2942:	f8 01       	movw	r30, r16
    2944:	80 81       	ld	r24, Z
    2946:	89 83       	std	Y+1, r24	; 0x01
    2948:	0e 5f       	subi	r16, 0xFE	; 254
    294a:	1f 4f       	sbci	r17, 0xFF	; 255
    294c:	88 24       	eor	r8, r8
    294e:	83 94       	inc	r8
    2950:	91 2c       	mov	r9, r1
    2952:	53 01       	movw	r10, r6
    2954:	12 c0       	rjmp	.+36     	; 0x297a <vfprintf+0x178>
    2956:	28 01       	movw	r4, r16
    2958:	f2 e0       	ldi	r31, 0x02	; 2
    295a:	4f 0e       	add	r4, r31
    295c:	51 1c       	adc	r5, r1
    295e:	f8 01       	movw	r30, r16
    2960:	a0 80       	ld	r10, Z
    2962:	b1 80       	ldd	r11, Z+1	; 0x01
    2964:	36 fe       	sbrs	r3, 6
    2966:	03 c0       	rjmp	.+6      	; 0x296e <vfprintf+0x16c>
    2968:	69 2d       	mov	r22, r9
    296a:	70 e0       	ldi	r23, 0x00	; 0
    296c:	02 c0       	rjmp	.+4      	; 0x2972 <vfprintf+0x170>
    296e:	6f ef       	ldi	r22, 0xFF	; 255
    2970:	7f ef       	ldi	r23, 0xFF	; 255
    2972:	c5 01       	movw	r24, r10
    2974:	4e d1       	rcall	.+668    	; 0x2c12 <strnlen>
    2976:	4c 01       	movw	r8, r24
    2978:	82 01       	movw	r16, r4
    297a:	f3 2d       	mov	r31, r3
    297c:	ff 77       	andi	r31, 0x7F	; 127
    297e:	3f 2e       	mov	r3, r31
    2980:	15 c0       	rjmp	.+42     	; 0x29ac <vfprintf+0x1aa>
    2982:	28 01       	movw	r4, r16
    2984:	22 e0       	ldi	r18, 0x02	; 2
    2986:	42 0e       	add	r4, r18
    2988:	51 1c       	adc	r5, r1
    298a:	f8 01       	movw	r30, r16
    298c:	a0 80       	ld	r10, Z
    298e:	b1 80       	ldd	r11, Z+1	; 0x01
    2990:	36 fe       	sbrs	r3, 6
    2992:	03 c0       	rjmp	.+6      	; 0x299a <vfprintf+0x198>
    2994:	69 2d       	mov	r22, r9
    2996:	70 e0       	ldi	r23, 0x00	; 0
    2998:	02 c0       	rjmp	.+4      	; 0x299e <vfprintf+0x19c>
    299a:	6f ef       	ldi	r22, 0xFF	; 255
    299c:	7f ef       	ldi	r23, 0xFF	; 255
    299e:	c5 01       	movw	r24, r10
    29a0:	2d d1       	rcall	.+602    	; 0x2bfc <strnlen_P>
    29a2:	4c 01       	movw	r8, r24
    29a4:	f3 2d       	mov	r31, r3
    29a6:	f0 68       	ori	r31, 0x80	; 128
    29a8:	3f 2e       	mov	r3, r31
    29aa:	82 01       	movw	r16, r4
    29ac:	33 fc       	sbrc	r3, 3
    29ae:	19 c0       	rjmp	.+50     	; 0x29e2 <vfprintf+0x1e0>
    29b0:	82 2d       	mov	r24, r2
    29b2:	90 e0       	ldi	r25, 0x00	; 0
    29b4:	88 16       	cp	r8, r24
    29b6:	99 06       	cpc	r9, r25
    29b8:	a0 f4       	brcc	.+40     	; 0x29e2 <vfprintf+0x1e0>
    29ba:	b6 01       	movw	r22, r12
    29bc:	80 e2       	ldi	r24, 0x20	; 32
    29be:	90 e0       	ldi	r25, 0x00	; 0
    29c0:	33 d1       	rcall	.+614    	; 0x2c28 <fputc>
    29c2:	2a 94       	dec	r2
    29c4:	f5 cf       	rjmp	.-22     	; 0x29b0 <vfprintf+0x1ae>
    29c6:	f5 01       	movw	r30, r10
    29c8:	37 fc       	sbrc	r3, 7
    29ca:	85 91       	lpm	r24, Z+
    29cc:	37 fe       	sbrs	r3, 7
    29ce:	81 91       	ld	r24, Z+
    29d0:	5f 01       	movw	r10, r30
    29d2:	b6 01       	movw	r22, r12
    29d4:	90 e0       	ldi	r25, 0x00	; 0
    29d6:	28 d1       	rcall	.+592    	; 0x2c28 <fputc>
    29d8:	21 10       	cpse	r2, r1
    29da:	2a 94       	dec	r2
    29dc:	21 e0       	ldi	r18, 0x01	; 1
    29de:	82 1a       	sub	r8, r18
    29e0:	91 08       	sbc	r9, r1
    29e2:	81 14       	cp	r8, r1
    29e4:	91 04       	cpc	r9, r1
    29e6:	79 f7       	brne	.-34     	; 0x29c6 <vfprintf+0x1c4>
    29e8:	e1 c0       	rjmp	.+450    	; 0x2bac <vfprintf+0x3aa>
    29ea:	84 36       	cpi	r24, 0x64	; 100
    29ec:	11 f0       	breq	.+4      	; 0x29f2 <vfprintf+0x1f0>
    29ee:	89 36       	cpi	r24, 0x69	; 105
    29f0:	39 f5       	brne	.+78     	; 0x2a40 <vfprintf+0x23e>
    29f2:	f8 01       	movw	r30, r16
    29f4:	37 fe       	sbrs	r3, 7
    29f6:	07 c0       	rjmp	.+14     	; 0x2a06 <vfprintf+0x204>
    29f8:	60 81       	ld	r22, Z
    29fa:	71 81       	ldd	r23, Z+1	; 0x01
    29fc:	82 81       	ldd	r24, Z+2	; 0x02
    29fe:	93 81       	ldd	r25, Z+3	; 0x03
    2a00:	0c 5f       	subi	r16, 0xFC	; 252
    2a02:	1f 4f       	sbci	r17, 0xFF	; 255
    2a04:	08 c0       	rjmp	.+16     	; 0x2a16 <vfprintf+0x214>
    2a06:	60 81       	ld	r22, Z
    2a08:	71 81       	ldd	r23, Z+1	; 0x01
    2a0a:	07 2e       	mov	r0, r23
    2a0c:	00 0c       	add	r0, r0
    2a0e:	88 0b       	sbc	r24, r24
    2a10:	99 0b       	sbc	r25, r25
    2a12:	0e 5f       	subi	r16, 0xFE	; 254
    2a14:	1f 4f       	sbci	r17, 0xFF	; 255
    2a16:	f3 2d       	mov	r31, r3
    2a18:	ff 76       	andi	r31, 0x6F	; 111
    2a1a:	3f 2e       	mov	r3, r31
    2a1c:	97 ff       	sbrs	r25, 7
    2a1e:	09 c0       	rjmp	.+18     	; 0x2a32 <vfprintf+0x230>
    2a20:	90 95       	com	r25
    2a22:	80 95       	com	r24
    2a24:	70 95       	com	r23
    2a26:	61 95       	neg	r22
    2a28:	7f 4f       	sbci	r23, 0xFF	; 255
    2a2a:	8f 4f       	sbci	r24, 0xFF	; 255
    2a2c:	9f 4f       	sbci	r25, 0xFF	; 255
    2a2e:	f0 68       	ori	r31, 0x80	; 128
    2a30:	3f 2e       	mov	r3, r31
    2a32:	2a e0       	ldi	r18, 0x0A	; 10
    2a34:	30 e0       	ldi	r19, 0x00	; 0
    2a36:	a3 01       	movw	r20, r6
    2a38:	33 d1       	rcall	.+614    	; 0x2ca0 <__ultoa_invert>
    2a3a:	88 2e       	mov	r8, r24
    2a3c:	86 18       	sub	r8, r6
    2a3e:	44 c0       	rjmp	.+136    	; 0x2ac8 <vfprintf+0x2c6>
    2a40:	85 37       	cpi	r24, 0x75	; 117
    2a42:	31 f4       	brne	.+12     	; 0x2a50 <vfprintf+0x24e>
    2a44:	23 2d       	mov	r18, r3
    2a46:	2f 7e       	andi	r18, 0xEF	; 239
    2a48:	b2 2e       	mov	r11, r18
    2a4a:	2a e0       	ldi	r18, 0x0A	; 10
    2a4c:	30 e0       	ldi	r19, 0x00	; 0
    2a4e:	25 c0       	rjmp	.+74     	; 0x2a9a <vfprintf+0x298>
    2a50:	93 2d       	mov	r25, r3
    2a52:	99 7f       	andi	r25, 0xF9	; 249
    2a54:	b9 2e       	mov	r11, r25
    2a56:	8f 36       	cpi	r24, 0x6F	; 111
    2a58:	c1 f0       	breq	.+48     	; 0x2a8a <vfprintf+0x288>
    2a5a:	18 f4       	brcc	.+6      	; 0x2a62 <vfprintf+0x260>
    2a5c:	88 35       	cpi	r24, 0x58	; 88
    2a5e:	79 f0       	breq	.+30     	; 0x2a7e <vfprintf+0x27c>
    2a60:	ae c0       	rjmp	.+348    	; 0x2bbe <vfprintf+0x3bc>
    2a62:	80 37       	cpi	r24, 0x70	; 112
    2a64:	19 f0       	breq	.+6      	; 0x2a6c <vfprintf+0x26a>
    2a66:	88 37       	cpi	r24, 0x78	; 120
    2a68:	21 f0       	breq	.+8      	; 0x2a72 <vfprintf+0x270>
    2a6a:	a9 c0       	rjmp	.+338    	; 0x2bbe <vfprintf+0x3bc>
    2a6c:	e9 2f       	mov	r30, r25
    2a6e:	e0 61       	ori	r30, 0x10	; 16
    2a70:	be 2e       	mov	r11, r30
    2a72:	b4 fe       	sbrs	r11, 4
    2a74:	0d c0       	rjmp	.+26     	; 0x2a90 <vfprintf+0x28e>
    2a76:	fb 2d       	mov	r31, r11
    2a78:	f4 60       	ori	r31, 0x04	; 4
    2a7a:	bf 2e       	mov	r11, r31
    2a7c:	09 c0       	rjmp	.+18     	; 0x2a90 <vfprintf+0x28e>
    2a7e:	34 fe       	sbrs	r3, 4
    2a80:	0a c0       	rjmp	.+20     	; 0x2a96 <vfprintf+0x294>
    2a82:	29 2f       	mov	r18, r25
    2a84:	26 60       	ori	r18, 0x06	; 6
    2a86:	b2 2e       	mov	r11, r18
    2a88:	06 c0       	rjmp	.+12     	; 0x2a96 <vfprintf+0x294>
    2a8a:	28 e0       	ldi	r18, 0x08	; 8
    2a8c:	30 e0       	ldi	r19, 0x00	; 0
    2a8e:	05 c0       	rjmp	.+10     	; 0x2a9a <vfprintf+0x298>
    2a90:	20 e1       	ldi	r18, 0x10	; 16
    2a92:	30 e0       	ldi	r19, 0x00	; 0
    2a94:	02 c0       	rjmp	.+4      	; 0x2a9a <vfprintf+0x298>
    2a96:	20 e1       	ldi	r18, 0x10	; 16
    2a98:	32 e0       	ldi	r19, 0x02	; 2
    2a9a:	f8 01       	movw	r30, r16
    2a9c:	b7 fe       	sbrs	r11, 7
    2a9e:	07 c0       	rjmp	.+14     	; 0x2aae <vfprintf+0x2ac>
    2aa0:	60 81       	ld	r22, Z
    2aa2:	71 81       	ldd	r23, Z+1	; 0x01
    2aa4:	82 81       	ldd	r24, Z+2	; 0x02
    2aa6:	93 81       	ldd	r25, Z+3	; 0x03
    2aa8:	0c 5f       	subi	r16, 0xFC	; 252
    2aaa:	1f 4f       	sbci	r17, 0xFF	; 255
    2aac:	06 c0       	rjmp	.+12     	; 0x2aba <vfprintf+0x2b8>
    2aae:	60 81       	ld	r22, Z
    2ab0:	71 81       	ldd	r23, Z+1	; 0x01
    2ab2:	80 e0       	ldi	r24, 0x00	; 0
    2ab4:	90 e0       	ldi	r25, 0x00	; 0
    2ab6:	0e 5f       	subi	r16, 0xFE	; 254
    2ab8:	1f 4f       	sbci	r17, 0xFF	; 255
    2aba:	a3 01       	movw	r20, r6
    2abc:	f1 d0       	rcall	.+482    	; 0x2ca0 <__ultoa_invert>
    2abe:	88 2e       	mov	r8, r24
    2ac0:	86 18       	sub	r8, r6
    2ac2:	fb 2d       	mov	r31, r11
    2ac4:	ff 77       	andi	r31, 0x7F	; 127
    2ac6:	3f 2e       	mov	r3, r31
    2ac8:	36 fe       	sbrs	r3, 6
    2aca:	0d c0       	rjmp	.+26     	; 0x2ae6 <vfprintf+0x2e4>
    2acc:	23 2d       	mov	r18, r3
    2ace:	2e 7f       	andi	r18, 0xFE	; 254
    2ad0:	a2 2e       	mov	r10, r18
    2ad2:	89 14       	cp	r8, r9
    2ad4:	58 f4       	brcc	.+22     	; 0x2aec <vfprintf+0x2ea>
    2ad6:	34 fe       	sbrs	r3, 4
    2ad8:	0b c0       	rjmp	.+22     	; 0x2af0 <vfprintf+0x2ee>
    2ada:	32 fc       	sbrc	r3, 2
    2adc:	09 c0       	rjmp	.+18     	; 0x2af0 <vfprintf+0x2ee>
    2ade:	83 2d       	mov	r24, r3
    2ae0:	8e 7e       	andi	r24, 0xEE	; 238
    2ae2:	a8 2e       	mov	r10, r24
    2ae4:	05 c0       	rjmp	.+10     	; 0x2af0 <vfprintf+0x2ee>
    2ae6:	b8 2c       	mov	r11, r8
    2ae8:	a3 2c       	mov	r10, r3
    2aea:	03 c0       	rjmp	.+6      	; 0x2af2 <vfprintf+0x2f0>
    2aec:	b8 2c       	mov	r11, r8
    2aee:	01 c0       	rjmp	.+2      	; 0x2af2 <vfprintf+0x2f0>
    2af0:	b9 2c       	mov	r11, r9
    2af2:	a4 fe       	sbrs	r10, 4
    2af4:	0f c0       	rjmp	.+30     	; 0x2b14 <vfprintf+0x312>
    2af6:	fe 01       	movw	r30, r28
    2af8:	e8 0d       	add	r30, r8
    2afa:	f1 1d       	adc	r31, r1
    2afc:	80 81       	ld	r24, Z
    2afe:	80 33       	cpi	r24, 0x30	; 48
    2b00:	21 f4       	brne	.+8      	; 0x2b0a <vfprintf+0x308>
    2b02:	9a 2d       	mov	r25, r10
    2b04:	99 7e       	andi	r25, 0xE9	; 233
    2b06:	a9 2e       	mov	r10, r25
    2b08:	09 c0       	rjmp	.+18     	; 0x2b1c <vfprintf+0x31a>
    2b0a:	a2 fe       	sbrs	r10, 2
    2b0c:	06 c0       	rjmp	.+12     	; 0x2b1a <vfprintf+0x318>
    2b0e:	b3 94       	inc	r11
    2b10:	b3 94       	inc	r11
    2b12:	04 c0       	rjmp	.+8      	; 0x2b1c <vfprintf+0x31a>
    2b14:	8a 2d       	mov	r24, r10
    2b16:	86 78       	andi	r24, 0x86	; 134
    2b18:	09 f0       	breq	.+2      	; 0x2b1c <vfprintf+0x31a>
    2b1a:	b3 94       	inc	r11
    2b1c:	a3 fc       	sbrc	r10, 3
    2b1e:	10 c0       	rjmp	.+32     	; 0x2b40 <vfprintf+0x33e>
    2b20:	a0 fe       	sbrs	r10, 0
    2b22:	06 c0       	rjmp	.+12     	; 0x2b30 <vfprintf+0x32e>
    2b24:	b2 14       	cp	r11, r2
    2b26:	80 f4       	brcc	.+32     	; 0x2b48 <vfprintf+0x346>
    2b28:	28 0c       	add	r2, r8
    2b2a:	92 2c       	mov	r9, r2
    2b2c:	9b 18       	sub	r9, r11
    2b2e:	0d c0       	rjmp	.+26     	; 0x2b4a <vfprintf+0x348>
    2b30:	b2 14       	cp	r11, r2
    2b32:	58 f4       	brcc	.+22     	; 0x2b4a <vfprintf+0x348>
    2b34:	b6 01       	movw	r22, r12
    2b36:	80 e2       	ldi	r24, 0x20	; 32
    2b38:	90 e0       	ldi	r25, 0x00	; 0
    2b3a:	76 d0       	rcall	.+236    	; 0x2c28 <fputc>
    2b3c:	b3 94       	inc	r11
    2b3e:	f8 cf       	rjmp	.-16     	; 0x2b30 <vfprintf+0x32e>
    2b40:	b2 14       	cp	r11, r2
    2b42:	18 f4       	brcc	.+6      	; 0x2b4a <vfprintf+0x348>
    2b44:	2b 18       	sub	r2, r11
    2b46:	02 c0       	rjmp	.+4      	; 0x2b4c <vfprintf+0x34a>
    2b48:	98 2c       	mov	r9, r8
    2b4a:	21 2c       	mov	r2, r1
    2b4c:	a4 fe       	sbrs	r10, 4
    2b4e:	0f c0       	rjmp	.+30     	; 0x2b6e <vfprintf+0x36c>
    2b50:	b6 01       	movw	r22, r12
    2b52:	80 e3       	ldi	r24, 0x30	; 48
    2b54:	90 e0       	ldi	r25, 0x00	; 0
    2b56:	68 d0       	rcall	.+208    	; 0x2c28 <fputc>
    2b58:	a2 fe       	sbrs	r10, 2
    2b5a:	16 c0       	rjmp	.+44     	; 0x2b88 <vfprintf+0x386>
    2b5c:	a1 fc       	sbrc	r10, 1
    2b5e:	03 c0       	rjmp	.+6      	; 0x2b66 <vfprintf+0x364>
    2b60:	88 e7       	ldi	r24, 0x78	; 120
    2b62:	90 e0       	ldi	r25, 0x00	; 0
    2b64:	02 c0       	rjmp	.+4      	; 0x2b6a <vfprintf+0x368>
    2b66:	88 e5       	ldi	r24, 0x58	; 88
    2b68:	90 e0       	ldi	r25, 0x00	; 0
    2b6a:	b6 01       	movw	r22, r12
    2b6c:	0c c0       	rjmp	.+24     	; 0x2b86 <vfprintf+0x384>
    2b6e:	8a 2d       	mov	r24, r10
    2b70:	86 78       	andi	r24, 0x86	; 134
    2b72:	51 f0       	breq	.+20     	; 0x2b88 <vfprintf+0x386>
    2b74:	a1 fe       	sbrs	r10, 1
    2b76:	02 c0       	rjmp	.+4      	; 0x2b7c <vfprintf+0x37a>
    2b78:	8b e2       	ldi	r24, 0x2B	; 43
    2b7a:	01 c0       	rjmp	.+2      	; 0x2b7e <vfprintf+0x37c>
    2b7c:	80 e2       	ldi	r24, 0x20	; 32
    2b7e:	a7 fc       	sbrc	r10, 7
    2b80:	8d e2       	ldi	r24, 0x2D	; 45
    2b82:	b6 01       	movw	r22, r12
    2b84:	90 e0       	ldi	r25, 0x00	; 0
    2b86:	50 d0       	rcall	.+160    	; 0x2c28 <fputc>
    2b88:	89 14       	cp	r8, r9
    2b8a:	30 f4       	brcc	.+12     	; 0x2b98 <vfprintf+0x396>
    2b8c:	b6 01       	movw	r22, r12
    2b8e:	80 e3       	ldi	r24, 0x30	; 48
    2b90:	90 e0       	ldi	r25, 0x00	; 0
    2b92:	4a d0       	rcall	.+148    	; 0x2c28 <fputc>
    2b94:	9a 94       	dec	r9
    2b96:	f8 cf       	rjmp	.-16     	; 0x2b88 <vfprintf+0x386>
    2b98:	8a 94       	dec	r8
    2b9a:	f3 01       	movw	r30, r6
    2b9c:	e8 0d       	add	r30, r8
    2b9e:	f1 1d       	adc	r31, r1
    2ba0:	80 81       	ld	r24, Z
    2ba2:	b6 01       	movw	r22, r12
    2ba4:	90 e0       	ldi	r25, 0x00	; 0
    2ba6:	40 d0       	rcall	.+128    	; 0x2c28 <fputc>
    2ba8:	81 10       	cpse	r8, r1
    2baa:	f6 cf       	rjmp	.-20     	; 0x2b98 <vfprintf+0x396>
    2bac:	22 20       	and	r2, r2
    2bae:	09 f4       	brne	.+2      	; 0x2bb2 <vfprintf+0x3b0>
    2bb0:	4e ce       	rjmp	.-868    	; 0x284e <vfprintf+0x4c>
    2bb2:	b6 01       	movw	r22, r12
    2bb4:	80 e2       	ldi	r24, 0x20	; 32
    2bb6:	90 e0       	ldi	r25, 0x00	; 0
    2bb8:	37 d0       	rcall	.+110    	; 0x2c28 <fputc>
    2bba:	2a 94       	dec	r2
    2bbc:	f7 cf       	rjmp	.-18     	; 0x2bac <vfprintf+0x3aa>
    2bbe:	f6 01       	movw	r30, r12
    2bc0:	86 81       	ldd	r24, Z+6	; 0x06
    2bc2:	97 81       	ldd	r25, Z+7	; 0x07
    2bc4:	02 c0       	rjmp	.+4      	; 0x2bca <vfprintf+0x3c8>
    2bc6:	8f ef       	ldi	r24, 0xFF	; 255
    2bc8:	9f ef       	ldi	r25, 0xFF	; 255
    2bca:	2b 96       	adiw	r28, 0x0b	; 11
    2bcc:	0f b6       	in	r0, 0x3f	; 63
    2bce:	f8 94       	cli
    2bd0:	de bf       	out	0x3e, r29	; 62
    2bd2:	0f be       	out	0x3f, r0	; 63
    2bd4:	cd bf       	out	0x3d, r28	; 61
    2bd6:	df 91       	pop	r29
    2bd8:	cf 91       	pop	r28
    2bda:	1f 91       	pop	r17
    2bdc:	0f 91       	pop	r16
    2bde:	ff 90       	pop	r15
    2be0:	ef 90       	pop	r14
    2be2:	df 90       	pop	r13
    2be4:	cf 90       	pop	r12
    2be6:	bf 90       	pop	r11
    2be8:	af 90       	pop	r10
    2bea:	9f 90       	pop	r9
    2bec:	8f 90       	pop	r8
    2bee:	7f 90       	pop	r7
    2bf0:	6f 90       	pop	r6
    2bf2:	5f 90       	pop	r5
    2bf4:	4f 90       	pop	r4
    2bf6:	3f 90       	pop	r3
    2bf8:	2f 90       	pop	r2
    2bfa:	08 95       	ret

00002bfc <strnlen_P>:
    2bfc:	fc 01       	movw	r30, r24
    2bfe:	05 90       	lpm	r0, Z+
    2c00:	61 50       	subi	r22, 0x01	; 1
    2c02:	70 40       	sbci	r23, 0x00	; 0
    2c04:	01 10       	cpse	r0, r1
    2c06:	d8 f7       	brcc	.-10     	; 0x2bfe <strnlen_P+0x2>
    2c08:	80 95       	com	r24
    2c0a:	90 95       	com	r25
    2c0c:	8e 0f       	add	r24, r30
    2c0e:	9f 1f       	adc	r25, r31
    2c10:	08 95       	ret

00002c12 <strnlen>:
    2c12:	fc 01       	movw	r30, r24
    2c14:	61 50       	subi	r22, 0x01	; 1
    2c16:	70 40       	sbci	r23, 0x00	; 0
    2c18:	01 90       	ld	r0, Z+
    2c1a:	01 10       	cpse	r0, r1
    2c1c:	d8 f7       	brcc	.-10     	; 0x2c14 <strnlen+0x2>
    2c1e:	80 95       	com	r24
    2c20:	90 95       	com	r25
    2c22:	8e 0f       	add	r24, r30
    2c24:	9f 1f       	adc	r25, r31
    2c26:	08 95       	ret

00002c28 <fputc>:
    2c28:	0f 93       	push	r16
    2c2a:	1f 93       	push	r17
    2c2c:	cf 93       	push	r28
    2c2e:	df 93       	push	r29
    2c30:	fb 01       	movw	r30, r22
    2c32:	23 81       	ldd	r18, Z+3	; 0x03
    2c34:	21 fd       	sbrc	r18, 1
    2c36:	03 c0       	rjmp	.+6      	; 0x2c3e <fputc+0x16>
    2c38:	8f ef       	ldi	r24, 0xFF	; 255
    2c3a:	9f ef       	ldi	r25, 0xFF	; 255
    2c3c:	2c c0       	rjmp	.+88     	; 0x2c96 <fputc+0x6e>
    2c3e:	22 ff       	sbrs	r18, 2
    2c40:	16 c0       	rjmp	.+44     	; 0x2c6e <fputc+0x46>
    2c42:	46 81       	ldd	r20, Z+6	; 0x06
    2c44:	57 81       	ldd	r21, Z+7	; 0x07
    2c46:	24 81       	ldd	r18, Z+4	; 0x04
    2c48:	35 81       	ldd	r19, Z+5	; 0x05
    2c4a:	42 17       	cp	r20, r18
    2c4c:	53 07       	cpc	r21, r19
    2c4e:	44 f4       	brge	.+16     	; 0x2c60 <fputc+0x38>
    2c50:	a0 81       	ld	r26, Z
    2c52:	b1 81       	ldd	r27, Z+1	; 0x01
    2c54:	9d 01       	movw	r18, r26
    2c56:	2f 5f       	subi	r18, 0xFF	; 255
    2c58:	3f 4f       	sbci	r19, 0xFF	; 255
    2c5a:	31 83       	std	Z+1, r19	; 0x01
    2c5c:	20 83       	st	Z, r18
    2c5e:	8c 93       	st	X, r24
    2c60:	26 81       	ldd	r18, Z+6	; 0x06
    2c62:	37 81       	ldd	r19, Z+7	; 0x07
    2c64:	2f 5f       	subi	r18, 0xFF	; 255
    2c66:	3f 4f       	sbci	r19, 0xFF	; 255
    2c68:	37 83       	std	Z+7, r19	; 0x07
    2c6a:	26 83       	std	Z+6, r18	; 0x06
    2c6c:	14 c0       	rjmp	.+40     	; 0x2c96 <fputc+0x6e>
    2c6e:	8b 01       	movw	r16, r22
    2c70:	ec 01       	movw	r28, r24
    2c72:	fb 01       	movw	r30, r22
    2c74:	00 84       	ldd	r0, Z+8	; 0x08
    2c76:	f1 85       	ldd	r31, Z+9	; 0x09
    2c78:	e0 2d       	mov	r30, r0
    2c7a:	19 95       	eicall
    2c7c:	89 2b       	or	r24, r25
    2c7e:	e1 f6       	brne	.-72     	; 0x2c38 <fputc+0x10>
    2c80:	d8 01       	movw	r26, r16
    2c82:	16 96       	adiw	r26, 0x06	; 6
    2c84:	8d 91       	ld	r24, X+
    2c86:	9c 91       	ld	r25, X
    2c88:	17 97       	sbiw	r26, 0x07	; 7
    2c8a:	01 96       	adiw	r24, 0x01	; 1
    2c8c:	17 96       	adiw	r26, 0x07	; 7
    2c8e:	9c 93       	st	X, r25
    2c90:	8e 93       	st	-X, r24
    2c92:	16 97       	sbiw	r26, 0x06	; 6
    2c94:	ce 01       	movw	r24, r28
    2c96:	df 91       	pop	r29
    2c98:	cf 91       	pop	r28
    2c9a:	1f 91       	pop	r17
    2c9c:	0f 91       	pop	r16
    2c9e:	08 95       	ret

00002ca0 <__ultoa_invert>:
    2ca0:	fa 01       	movw	r30, r20
    2ca2:	aa 27       	eor	r26, r26
    2ca4:	28 30       	cpi	r18, 0x08	; 8
    2ca6:	51 f1       	breq	.+84     	; 0x2cfc <__ultoa_invert+0x5c>
    2ca8:	20 31       	cpi	r18, 0x10	; 16
    2caa:	81 f1       	breq	.+96     	; 0x2d0c <__ultoa_invert+0x6c>
    2cac:	e8 94       	clt
    2cae:	6f 93       	push	r22
    2cb0:	6e 7f       	andi	r22, 0xFE	; 254
    2cb2:	6e 5f       	subi	r22, 0xFE	; 254
    2cb4:	7f 4f       	sbci	r23, 0xFF	; 255
    2cb6:	8f 4f       	sbci	r24, 0xFF	; 255
    2cb8:	9f 4f       	sbci	r25, 0xFF	; 255
    2cba:	af 4f       	sbci	r26, 0xFF	; 255
    2cbc:	b1 e0       	ldi	r27, 0x01	; 1
    2cbe:	3e d0       	rcall	.+124    	; 0x2d3c <__ultoa_invert+0x9c>
    2cc0:	b4 e0       	ldi	r27, 0x04	; 4
    2cc2:	3c d0       	rcall	.+120    	; 0x2d3c <__ultoa_invert+0x9c>
    2cc4:	67 0f       	add	r22, r23
    2cc6:	78 1f       	adc	r23, r24
    2cc8:	89 1f       	adc	r24, r25
    2cca:	9a 1f       	adc	r25, r26
    2ccc:	a1 1d       	adc	r26, r1
    2cce:	68 0f       	add	r22, r24
    2cd0:	79 1f       	adc	r23, r25
    2cd2:	8a 1f       	adc	r24, r26
    2cd4:	91 1d       	adc	r25, r1
    2cd6:	a1 1d       	adc	r26, r1
    2cd8:	6a 0f       	add	r22, r26
    2cda:	71 1d       	adc	r23, r1
    2cdc:	81 1d       	adc	r24, r1
    2cde:	91 1d       	adc	r25, r1
    2ce0:	a1 1d       	adc	r26, r1
    2ce2:	20 d0       	rcall	.+64     	; 0x2d24 <__ultoa_invert+0x84>
    2ce4:	09 f4       	brne	.+2      	; 0x2ce8 <__ultoa_invert+0x48>
    2ce6:	68 94       	set
    2ce8:	3f 91       	pop	r19
    2cea:	2a e0       	ldi	r18, 0x0A	; 10
    2cec:	26 9f       	mul	r18, r22
    2cee:	11 24       	eor	r1, r1
    2cf0:	30 19       	sub	r19, r0
    2cf2:	30 5d       	subi	r19, 0xD0	; 208
    2cf4:	31 93       	st	Z+, r19
    2cf6:	de f6       	brtc	.-74     	; 0x2cae <__ultoa_invert+0xe>
    2cf8:	cf 01       	movw	r24, r30
    2cfa:	08 95       	ret
    2cfc:	46 2f       	mov	r20, r22
    2cfe:	47 70       	andi	r20, 0x07	; 7
    2d00:	40 5d       	subi	r20, 0xD0	; 208
    2d02:	41 93       	st	Z+, r20
    2d04:	b3 e0       	ldi	r27, 0x03	; 3
    2d06:	0f d0       	rcall	.+30     	; 0x2d26 <__ultoa_invert+0x86>
    2d08:	c9 f7       	brne	.-14     	; 0x2cfc <__ultoa_invert+0x5c>
    2d0a:	f6 cf       	rjmp	.-20     	; 0x2cf8 <__ultoa_invert+0x58>
    2d0c:	46 2f       	mov	r20, r22
    2d0e:	4f 70       	andi	r20, 0x0F	; 15
    2d10:	40 5d       	subi	r20, 0xD0	; 208
    2d12:	4a 33       	cpi	r20, 0x3A	; 58
    2d14:	18 f0       	brcs	.+6      	; 0x2d1c <__ultoa_invert+0x7c>
    2d16:	49 5d       	subi	r20, 0xD9	; 217
    2d18:	31 fd       	sbrc	r19, 1
    2d1a:	40 52       	subi	r20, 0x20	; 32
    2d1c:	41 93       	st	Z+, r20
    2d1e:	02 d0       	rcall	.+4      	; 0x2d24 <__ultoa_invert+0x84>
    2d20:	a9 f7       	brne	.-22     	; 0x2d0c <__ultoa_invert+0x6c>
    2d22:	ea cf       	rjmp	.-44     	; 0x2cf8 <__ultoa_invert+0x58>
    2d24:	b4 e0       	ldi	r27, 0x04	; 4
    2d26:	a6 95       	lsr	r26
    2d28:	97 95       	ror	r25
    2d2a:	87 95       	ror	r24
    2d2c:	77 95       	ror	r23
    2d2e:	67 95       	ror	r22
    2d30:	ba 95       	dec	r27
    2d32:	c9 f7       	brne	.-14     	; 0x2d26 <__ultoa_invert+0x86>
    2d34:	00 97       	sbiw	r24, 0x00	; 0
    2d36:	61 05       	cpc	r22, r1
    2d38:	71 05       	cpc	r23, r1
    2d3a:	08 95       	ret
    2d3c:	9b 01       	movw	r18, r22
    2d3e:	ac 01       	movw	r20, r24
    2d40:	0a 2e       	mov	r0, r26
    2d42:	06 94       	lsr	r0
    2d44:	57 95       	ror	r21
    2d46:	47 95       	ror	r20
    2d48:	37 95       	ror	r19
    2d4a:	27 95       	ror	r18
    2d4c:	ba 95       	dec	r27
    2d4e:	c9 f7       	brne	.-14     	; 0x2d42 <__ultoa_invert+0xa2>
    2d50:	62 0f       	add	r22, r18
    2d52:	73 1f       	adc	r23, r19
    2d54:	84 1f       	adc	r24, r20
    2d56:	95 1f       	adc	r25, r21
    2d58:	a0 1d       	adc	r26, r0
    2d5a:	08 95       	ret

00002d5c <_exit>:
    2d5c:	f8 94       	cli

00002d5e <__stop_program>:
    2d5e:	ff cf       	rjmp	.-2      	; 0x2d5e <__stop_program>
